var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminHomepageComponent.html",[0,0.074,1,0.573]],["body/components/AdminHomepageComponent.html",[0,0.129,1,1.05,2,0.979,3,0.246,4,0.246,5,0.83,6,0.83,7,0.83,8,0.21,9,2.893,10,3.647,11,3.647,12,0.246,13,1.24,14,0.283,15,0.377,16,2.968,17,3.525,18,0.443,19,4.505,20,1.208,21,2.829,22,0.559,23,0.911,24,2.626,25,1.123,26,5.436,27,0.767,28,2.057,29,3.652,30,0.61,31,4.608,32,0.31,33,4.455,34,4.455,35,4.063,36,0.504,37,2.682,38,3.656,39,5.436,40,3.061,41,0.504,42,5.436,43,5.436,44,0.31,45,0.846,46,0.025,47,0.83,48,1.292,49,1.291,50,1.206,51,5.436,52,1.049,53,1.05,54,1.049,55,5.436,56,0.404,57,0.32,58,2.893,59,4.301,60,1.073,61,4.301,62,3.215,63,2.636,64,1.935,65,3.647,66,0.774,67,0.246,68,0.359,69,3.647,70,3.647,71,4.301,72,2.238,73,6.595,74,2.136,75,3.061,76,3.061,77,0.83,78,1.049,79,0.83,80,1.208,81,0.83,82,0.404,83,0.83,84,0.721,85,0.83,86,0.721,87,0.83,88,0.721,89,0.83,90,0.721,91,0.83,92,1.049,93,0.721,94,0.721,95,0.83,96,0.83,97,0.721,98,0.83,99,0.721,100,0.83,101,0.83,102,0.721,103,0.83,104,0.721,105,0.83,106,0.721,107,0.83,108,0.721,109,0.83,110,1.049,111,0.721,112,0.774,113,0.83,114,0.721,115,0.83,116,0.721,117,0.83,118,0.721,119,0.83,120,0.83,121,0.721,122,0.83,123,0.721,124,0.83,125,0.721,126,1.049,127,0.67,128,0.83,129,0.721,130,0.62,131,0.83,132,0.83,133,0.019,134,0.019]],["title/guards/AdminRoleGuard.html",[135,2.3,136,2.556]],["body/guards/AdminRoleGuard.html",[3,0.233,4,0.233,8,0.199,12,0.332,14,0.291,15,0.399,16,2.762,19,4.594,23,1.029,30,0.689,32,0.3,36,0.633,37,2.364,40,2.958,41,0.487,44,0.405,45,0.818,46,0.025,50,0.734,56,0.473,57,0.303,64,3.016,66,0.946,67,0.233,68,0.34,82,0.391,133,0.018,134,0.018,135,3.534,136,3.928,137,4.079,138,4.928,139,3.458,140,3.195,141,1.651,142,1.63,143,4.625,144,5.14,145,2.958,146,5.254,147,6.139,148,1.16,149,4.455,150,4.273,151,3.762,152,1.014,153,6.617,154,5.254,155,6.504,156,0.233,157,0.7,158,1.122,159,2.499,160,2.601,161,3.239,162,0.538,163,4.079,164,1.598,165,2.065,166,2.208,167,0.818,168,0.345,169,0.644,170,1.029,171,2.065,172,2.538,173,2.364,174,4.455,175,2.734,176,3.928,177,2.958,178,4.079,179,6.139,180,6.139,181,4.079,182,1.014,183,3.928,184,3.91,185,2.579,186,4.589,187,5.254,188,1.814,189,0.7,190,2.058,191,5.254,192,1.934,193,2.208,194,0.946,195,1.321,196,1.16,197,1.164,198,1.24,199,2.499,200,3.049,201,3.458,202,1.714,203,1.603,204,1.408,205,0.956,206,1.164,207,0.961,208,1.025,209,4.079,210,4.079,211,3.458,212,3.458]],["title/components/AdminTripsComponent.html",[0,0.074,84,0.573]],["body/components/AdminTripsComponent.html",[0,0.083,1,0.326,2,0.555,3,0.111,4,0.111,5,0.376,6,0.376,7,0.376,8,0.095,9,4.428,12,0.356,13,1.015,14,0.289,15,0.379,18,0.463,20,0.914,22,0.549,23,1.104,25,0.637,27,0.722,29,1.193,30,0.346,32,0.347,36,0.439,37,1.387,41,0.508,44,0.359,45,0.48,46,0.026,47,0.376,48,1.191,49,1.191,50,0.95,52,0.595,53,0.326,54,0.595,56,0.479,57,0.145,60,0.689,64,0.876,66,0.853,67,0.111,68,0.162,74,2.53,75,3.504,77,0.376,78,0.595,79,0.376,80,0.839,81,0.376,82,0.468,83,0.376,84,0.729,85,0.376,86,0.326,87,0.376,88,0.326,89,0.376,90,0.326,91,0.376,92,0.595,93,0.326,94,0.326,95,0.376,96,0.376,97,0.326,98,0.376,99,0.326,100,0.376,101,0.376,102,0.729,103,0.376,104,0.326,105,0.376,106,0.326,107,0.376,108,0.326,109,0.376,110,0.595,111,0.326,112,0.351,113,0.376,114,0.326,115,0.376,116,0.326,117,0.376,118,0.326,119,0.376,120,0.376,121,0.845,122,0.376,123,0.326,124,0.376,125,0.326,126,0.595,127,0.303,128,0.376,129,0.326,130,0.965,131,0.376,132,0.376,133,0.011,134,0.011,140,1.604,141,1.025,142,1.025,145,1.735,148,0.68,151,3.088,152,1.019,156,0.111,157,0.41,158,0.839,162,0.671,165,1.211,166,1.827,167,0.785,168,0.413,169,0.618,170,1.019,172,2.434,182,0.972,188,1.064,189,0.798,192,1.135,194,0.689,195,0.961,204,1.064,205,0.852,207,0.901,208,0.961,213,5.581,214,1.651,215,2.303,216,1.093,217,2.612,218,3.088,219,1.489,220,2.101,221,3.766,222,2.101,223,2.612,224,2.073,225,2.612,226,2.612,227,1.604,228,3.081,229,3.25,230,1.735,231,1.387,232,1.135,233,2.612,234,2.612,235,3.081,236,3.961,237,1.744,238,4.016,239,1.604,240,4.893,241,3.187,242,1.064,243,2.344,244,1.847,245,3.242,246,2.572,247,3.242,248,3.824,249,2.859,250,3.242,251,2.572,252,3.242,253,3.824,254,3.081,255,0.346,256,3.824,257,4.016,258,3.824,259,3.824,260,3.824,261,0.95,262,2.132,263,3.824,264,3.242,265,2.612,266,3.686,267,3.081,268,2.612,269,3.081,270,3.686,271,4.348,272,3.686,273,1.601,274,3.25,275,3.081,276,4.016,277,1.455,278,2.375,279,3.354,280,3.081,281,2.612,282,1.735,283,0.898,284,2.612,285,2.073,286,2.612,287,2.722,288,1.947,289,1.709,290,2.303,291,3.173,292,2.612,293,2.925,294,2.665,295,0.998,296,4.091,297,1.604,298,3.081,299,2.117,300,1.527,301,1.947,302,2.612,303,1.135,304,2.829,305,3.081,306,2.153,307,2.859,308,3.081,309,3.081,310,3.081,311,1.947,312,2.612,313,3.081,314,1.773,315,3.081,316,3.081,317,3.081,318,1.947,319,3.081,320,2.448,321,3.081,322,1.947,323,2.303,324,2.073,325,1.947,326,1.739,327,2.205,328,1.827,329,1.947,330,1.947,331,2.925,332,2.925,333,1.888,334,1.735,335,3.081,336,2.303,337,2.612,338,1.947,339,1.947,340,2.612,341,3.081,342,1.947,343,2.612,344,1.604,345,1.947,346,1.604,347,2.303,348,3.117,349,0.761,350,0.761,351,1.947,352,3.081,353,2.612,354,1.888,355,3.081,356,2.367,357,1.947,358,2.073,359,1.947,360,2.073,361,2.073,362,1.947,363,1.064,364,1.489,365,4.016,366,4.016,367,2.735,368,3.242,369,4.271,370,4.271,371,1.163,372,2.465,373,2.344,374,2.572,375,1.947,376,1.135,377,3.081,378,3.242,379,3.081,380,1.947,381,2.612,382,1.947,383,1.947,384,1.31,385,0.556,386,0.818,387,1.193,388,1.651,389,1.193,390,1.455,391,1.947,392,1.651,393,1.31,394,1.651,395,1.096,396,1.947,397,1.096,398,3.081,399,1.013,400,1.651,401,1.455,402,1.31,403,1.651,404,1.651,405,1.651,406,1.31,407,1.947,408,1.455,409,1.947,410,3.686,411,1.947,412,1.947,413,3.081,414,1.947,415,1.947,416,1.651,417,2.101,418,3.541,419,1.651,420,3.081,421,2.53,422,2.344,423,1.064,424,1.947,425,1.455,426,1.455,427,1.947,428,1.947,429,1.947,430,2.612,431,1.455,432,1.455,433,1.651,434,2.612,435,3.686,436,3.242,437,3.242,438,3.242,439,1.489,440,2.303,441,3.686,442,2.612,443,2.612,444,2.612,445,1.947,446,1.947,447,1.947,448,1.947,449,3.081,450,1.947,451,1.455,452,2.612,453,3.081,454,1.947,455,1.651,456,3.081,457,1.651,458,1.947,459,3.081,460,3.081,461,1.947,462,1.947,463,1.947,464,1.947,465,1.947,466,3.25,467,0.592,468,1.31,469,1.947,470,1.651,471,1.947,472,1.31,473,1.092,474,1.651,475,2.859,476,2.303,477,2.344,478,2.303,479,3.824,480,3.242,481,3.242,482,1.947,483,3.824,484,1.947,485,1.947,486,1.947,487,1.947,488,1.947,489,1.947,490,1.947,491,1.947,492,1.888,493,2.303,494,1.31,495,1.947,496,1.947,497,1.947,498,2.612,499,1.947,500,1.947,501,1.947,502,3.081,503,5.038,504,5.038,505,3.081,506,1.947,507,1.947,508,1.947,509,1.947,510,5.038,511,0.592,512,1.847,513,3.081,514,1.947,515,1.947,516,1.387,517,2.073,518,2.073,519,1.735,520,1.888,521,1.735,522,3.081,523,3.081,524,3.081,525,3.681,526,3.081,527,3.081,528,2.073,529,2.073,530,2.303,531,3.081,532,3.081,533,2.073,534,2.612,535,4.348,536,2.303]],["title/components/AdminYachtsComponent.html",[0,0.074,86,0.573]],["body/components/AdminYachtsComponent.html",[0,0.091,1,0.378,2,0.622,3,0.129,4,0.129,5,0.436,6,0.436,7,0.436,8,0.11,9,4.435,12,0.306,13,1.205,14,0.291,15,0.377,18,0.468,20,1.034,22,0.578,23,1.065,25,1.188,27,0.683,29,1.383,30,0.529,31,2.93,32,0.366,36,0.517,41,0.497,44,0.39,45,0.538,46,0.026,47,0.436,48,1.219,49,1.214,50,1.004,52,0.667,53,0.378,54,0.667,56,0.477,57,0.168,60,0.848,64,1.015,66,0.964,67,0.129,68,0.188,75,3.713,77,0.436,78,0.667,79,0.436,80,0.909,81,0.436,82,0.415,83,0.436,84,0.378,85,0.436,86,0.789,87,0.436,88,0.378,89,0.436,90,0.378,91,0.436,92,0.667,93,0.378,94,0.378,95,0.436,96,0.436,97,0.378,98,0.436,99,0.378,100,0.436,101,0.436,102,0.789,103,0.436,104,0.378,105,0.436,106,0.378,107,0.436,108,0.378,109,0.436,110,0.667,111,0.378,112,0.406,113,0.436,114,0.378,115,0.436,116,0.378,117,0.436,118,0.378,119,0.436,120,0.436,121,0.898,122,0.436,123,0.378,124,0.436,125,0.378,126,0.667,127,0.351,128,0.436,129,0.378,130,0.326,131,0.436,132,0.436,133,0.012,134,0.012,141,0.815,145,1.946,148,1.039,152,0.436,156,0.129,157,0.46,158,0.909,162,0.671,165,1.359,166,1.452,167,0.733,168,0.402,169,0.577,170,1.026,172,2.275,182,0.909,188,1.193,189,0.815,192,1.273,194,0.756,195,1.056,204,1.193,205,0.834,207,0.815,208,1.056,215,2.584,216,0.869,217,2.93,220,2.693,221,4.497,222,2.275,223,2.93,225,2.93,230,3.015,232,0.831,233,1.913,234,1.913,236,4.227,237,1.869,238,4.304,239,1.799,240,5.1,242,1.193,243,2.575,244,2.03,245,3.562,246,2.826,247,3.562,249,3.141,250,3.562,251,2.826,252,3.562,255,0.388,257,4.304,262,2.41,264,4.304,265,2.93,272,3.992,273,1.734,274,3.52,279,3.612,281,2.93,282,2.366,283,0.714,284,3.562,285,3.602,286,2.93,287,2.999,289,1.359,291,2.651,293,2.325,294,2.886,295,1.863,296,4.003,299,1.978,300,1.545,303,1.273,306,1.271,307,3.141,314,1.525,320,2.651,326,1.193,327,1.972,328,1.978,331,3.167,332,3.167,337,2.93,340,2.93,346,1.799,347,2.584,348,3.554,349,0.679,350,0.679,356,2.25,358,3.167,360,2.826,361,2.325,363,1.753,364,2.275,372,1.174,373,1.383,374,1.518,376,1.972,378,3.562,381,2.93,384,1.518,385,0.644,386,0.948,388,1.913,390,1.687,392,1.913,393,1.518,394,1.913,395,1.271,397,1.271,399,1.174,400,1.913,401,1.687,402,1.518,403,1.913,404,1.913,406,3.167,408,1.687,416,1.913,419,1.913,421,2.364,423,0.779,430,2.93,431,2.584,432,2.584,433,2.93,434,2.93,435,3.992,436,3.562,437,3.562,438,1.913,439,2.587,440,1.687,441,2.93,442,1.913,443,1.913,444,2.93,466,3.795,467,1.051,475,3.141,476,2.584,477,2.575,478,3.141,492,2.118,493,2.584,494,1.518,498,2.93,516,2.119,521,1.946,537,5.59,538,1.913,539,1.946,540,2.93,541,1.452,542,3.457,543,3.167,544,3.457,545,4.201,546,4.201,547,4.201,548,2.93,549,3.457,550,3.992,551,4.709,552,4.709,553,3.992,554,2.257,555,3.457,556,2.257,557,4.201,558,4.201,559,3.562,560,3.928,561,4.709,562,3.457,563,2.257,564,2.325,565,3.457,566,2.257,567,3.457,568,2.257,569,1.946,570,2.257,571,2.325,572,3.52,573,3.457,574,1.946,575,2.257,576,2.118,577,3.457,578,3.457,579,4.201,580,2.257,581,1.946,582,2.257,583,2.257,584,2.325,585,2.257,586,3.457,587,2.257,588,3.457,589,1.555,590,1.946,591,1.12,592,2.257,593,2.257,594,4.201,595,2.257,596,1.555,597,3.457,598,2.257,599,2.257,600,2.93,601,2.257,602,1.913,603,2.257,604,1.09,605,2.257,606,2.257,607,2.257,608,2.93,609,1.913,610,1.518,611,2.257,612,1.383,613,2.257,614,4.709,615,2.257,616,2.257,617,3.457,618,2.257,619,2.257,620,1.913,621,1.913,622,2.584,623,2.452,624,3.562,625,4.201,626,3.457,627,2.257,628,3.457,629,2.257,630,2.257,631,2.257,632,2.257,633,2.257,634,2.257,635,2.257,636,2.257,637,2.257,638,2.257,639,2.257,640,2.257,641,1.913,642,1.687,643,2.257,644,2.257,645,2.93,646,3.167,647,3.52,648,3.457,649,3.457,650,3.457,651,3.457]],["title/injectables/ApiService.html",[196,0.755,652,2.556]],["body/injectables/ApiService.html",[3,0.235,4,0.235,8,0.201,12,0.333,14,0.286,15,0.406,18,0.485,20,1.02,22,0.544,24,3.244,27,0.647,30,0.593,32,0.372,36,0.642,41,0.49,44,0.302,45,0.823,46,0.025,56,0.434,57,0.306,67,0.235,68,0.343,82,0.393,133,0.018,134,0.018,142,1.536,152,1.126,156,0.235,157,0.704,158,1.126,162,0.63,164,1.606,167,0.823,168,0.404,169,0.647,170,1.126,171,2.076,182,1.189,189,0.82,190,2.197,193,2.587,196,1.166,198,1.251,202,1.728,203,1.616,205,0.823,206,1.174,207,1.375,208,1.328,220,2.975,255,0.593,261,0.74,283,1.091,294,3.237,302,4.478,303,1.945,314,1.711,327,2.267,328,2.219,344,3.037,349,0.593,350,0.593,423,1.824,473,1.174,541,2.219,569,2.974,596,2.377,652,3.949,653,1.728,654,5.4,655,3.487,656,2.4,657,3.995,658,2.85,659,5.283,660,3.304,661,4.948,662,2.749,663,3.949,664,3.553,665,5.283,666,5.283,667,5.283,668,3.037,669,5.283,670,6.159,671,2.316,672,3.244,673,5.283,674,5.283,675,4.113,676,4.362,677,3.237,678,2.749,679,3.553,680,4.113,681,4.478,682,2.015,683,2.076,684,2.552,685,3.553,686,2.749,687,2.749,688,2.377,689,3.553,690,1.851,691,2.52,692,4.113,693,3.237,694,2.14,695,2.52,696,4.113]],["title/components/AppComponent.html",[0,0.074,88,0.573]],["body/components/AppComponent.html",[0,0.126,1,0.685,2,0.947,3,0.233,4,0.233,5,0.788,6,0.788,7,0.788,8,0.199,12,0.233,13,1.207,14,0.289,15,0.404,17,2.961,18,0.304,20,1.123,22,0.485,27,0.798,28,2.008,29,3.895,30,0.591,32,0.233,41,0.614,44,0.395,45,0.956,46,0.025,47,0.788,48,1.288,49,1.286,50,1.047,52,1.015,53,0.685,54,1.015,56,0.457,57,0.304,60,1.047,62,3.053,64,1.838,65,3.463,66,0.735,67,0.233,68,0.341,77,0.788,78,1.015,79,0.788,80,1.186,81,0.788,82,0.391,83,0.788,84,0.685,85,0.788,86,0.685,87,0.788,88,1.03,89,0.788,90,0.685,91,0.788,92,1.015,93,0.685,94,0.685,95,0.788,96,0.788,97,0.685,98,0.788,99,0.685,100,0.788,101,0.788,102,0.685,103,0.788,104,0.685,105,0.788,106,1.03,107,0.788,108,0.685,109,0.788,110,1.015,111,0.685,112,0.735,113,0.788,114,0.685,115,0.788,116,0.685,117,0.788,118,0.685,119,0.788,120,0.788,121,0.685,122,0.788,123,0.685,124,0.788,125,0.685,126,1.015,127,0.636,128,0.788,129,0.685,130,0.589,131,0.788,132,0.788,133,0.018,134,0.018,156,0.233,162,0.418,168,0.268,194,0.947,197,1.166,203,2.067,219,3.239,227,2.737,229,4.348,232,2.142,242,1.816,255,0.591,261,0.735,262,2.617,283,1.086,295,1.704,326,1.816,349,0.589,350,0.589,354,3.223,363,1.816,406,2.747,516,2.366,591,1.704,602,3.463,610,3.537,612,3.223,697,3.463,698,4.459,699,2.366,700,2.961,701,2.961,702,4.459,703,6.142,704,3.223,705,3.931,706,2.737,707,4.459,708,5.259,709,4.348,710,5.817,711,4.459,712,6.356,713,3.537,714,3.931,715,4.084,716,4.459,717,3.463,718,2.747,719,4.084,720,4.084,721,4.084,722,4.084]],["title/injectables/AuthService.html",[160,1.344,196,0.755]],["body/injectables/AuthService.html",[3,0.138,4,0.138,8,0.118,12,0.314,14,0.287,15,0.396,16,1.635,18,0.524,19,2.444,22,0.576,23,0.984,24,1.755,27,0.673,30,0.408,32,0.393,36,0.634,41,0.544,44,0.404,45,0.566,46,0.025,56,0.409,57,0.179,66,0.787,67,0.138,68,0.201,82,0.389,127,0.914,133,0.013,134,0.013,141,1.591,142,1.665,143,3.276,144,4.574,148,0.802,150,2.444,152,1.06,156,0.138,157,0.484,158,0.844,160,1.428,161,2.956,162,0.674,164,1.105,165,1.428,166,1.526,167,0.814,168,0.402,169,0.64,170,0.921,171,1.428,173,2.98,174,3.08,177,2.046,182,1.312,188,1.896,189,0.906,190,2.265,192,1.338,193,2.811,194,1.057,195,1.475,196,0.802,197,0.688,198,0.733,200,1.801,201,2.043,202,1.012,203,0.947,205,0.914,206,0.688,207,1.541,208,1.601,211,4.129,219,1.755,236,2.444,255,0.408,261,1.134,295,1.901,300,0.856,303,1.793,314,2.041,344,1.891,346,2.534,349,0.702,350,0.702,356,2.523,371,1.734,423,2.026,439,1.755,467,1.105,473,1.714,511,1.105,539,2.046,541,1.526,564,2.444,572,2.716,581,2.046,584,2.444,590,2.046,596,2.191,653,1.012,656,1.793,657,2.226,658,2.195,660,1.755,668,2.276,671,1.357,672,2.654,676,3.64,677,2.226,678,3.054,679,3.695,681,3.08,682,1.254,683,1.428,684,1.755,685,2.444,686,1.891,687,1.891,688,2.702,689,3.276,690,1.084,693,3.366,694,1.891,695,2.226,723,2.043,724,4.129,725,2.716,726,4.166,727,2.716,728,3.633,729,3.093,730,5.493,731,2.444,732,3.633,733,4.374,734,4.374,735,4.374,736,3.08,737,4.87,738,4.87,739,4.87,740,4.87,741,4.87,742,4.129,743,3.08,744,3.633,745,3.633,746,3.633,747,2.444,748,3.08,749,3.633,750,4.657,751,4.657,752,2.409,753,3.08,754,4.116,755,4.129,756,3.64,757,3.633,758,2.444,759,2.409,760,2.409,761,4.237,762,3.633,763,2.444,764,3.633,765,4.129,766,2.409,767,1.901,768,4.129,769,2.409,770,2.409,771,3.695,772,3.633,773,5.493,774,4.657,775,2.226,776,2.444,777,3.633,778,2.409,779,5.226,780,2.409,781,3.633,782,3.446,783,2.409,784,3.633,785,2.409,786,2.716,787,3.633,788,2.409,789,3.633,790,3.633,791,2.409,792,3.633,793,3.08,794,2.409,795,3.633,796,2.409,797,2.226,798,4.43,799,2.409,800,4.129,801,3.633,802,3.08,803,3.633,804,2.043,805,2.043,806,2.409,807,2.409,808,2.409,809,3.633,810,2.409,811,2.409,812,5.226,813,2.409,814,2.409,815,2.409,816,4.374,817,2.409,818,2.409,819,2.409,820,3.633,821,2.409,822,2.409,823,2.409,824,2.409,825,2.043,826,3.708,827,3.708,828,4.374,829,2.409,830,2.043,831,2.409,832,2.409,833,2.409,834,2.409,835,2.409,836,2.043,837,2.409,838,2.409,839,2.409,840,2.409,841,3.633,842,2.409,843,1.801]],["title/components/BookingCardComponent.html",[0,0.074,90,0.573]],["body/components/BookingCardComponent.html",[0,0.124,1,0.668,2,0.932,3,0.228,4,0.228,5,0.769,6,0.769,7,0.769,8,0.195,12,0.228,13,1.185,14,0.287,15,0.391,20,0.999,23,0.868,25,1.069,27,0.634,30,0.683,32,0.348,36,0.619,44,0.36,45,0.806,46,0.025,47,0.769,48,1.284,49,1.284,50,1.035,52,0.999,53,0.668,54,0.999,56,0.385,57,0.296,60,0.932,66,1.035,67,0.228,68,0.332,77,0.769,78,0.999,79,0.769,80,1.175,81,0.769,82,0.385,83,0.769,84,0.668,85,0.769,86,0.668,87,0.769,88,0.668,89,0.769,90,1.02,91,1.217,92,0.999,93,0.668,94,0.668,95,1.11,96,0.769,97,0.668,98,0.769,99,0.668,100,0.769,101,0.769,102,0.668,103,0.769,104,0.668,105,0.769,106,0.668,107,0.769,108,0.668,109,0.769,110,0.999,111,0.668,112,0.718,113,0.769,114,0.668,115,0.769,116,0.668,117,0.769,118,0.668,119,0.769,120,0.769,121,0.668,122,0.769,123,0.668,124,0.769,125,0.668,126,0.999,127,0.621,128,0.769,129,0.668,130,0.575,131,0.769,132,0.769,133,0.018,134,0.018,148,1.343,156,0.228,157,0.69,162,0.588,168,0.34,182,0.999,185,2.175,189,0.531,193,2.557,194,0.932,216,1.301,222,3.223,242,1.787,285,3.482,289,2.034,299,2.557,300,0.939,371,1.918,376,1.906,385,1.137,473,1.137,518,4.093,677,3.172,699,2.329,797,3.172,844,5.159,845,4.549,846,3.378,847,4.199,848,3.482,849,3.482,850,4.388,851,4.874,852,4.874,853,4.388,854,6.086,855,2.914,856,4.297,857,3.869,858,5.749,859,3.985,860,2.914,861,3.869,862,2.329,863,4.297,864,3.985,865,2.94,866,3.985,867,5.176,868,2.694,869,3.869,870,3.985,871,3.985,872,4.388,873,2.694,874,4.388,875,2.914,876,5.176,877,3.985,878,5.176,879,5.176,880,5.176,881,4.388,882,3.985]],["title/injectables/BookingService.html",[196,0.755,883,1.779]],["body/injectables/BookingService.html",[3,0.181,4,0.181,8,0.155,12,0.362,14,0.291,15,0.404,18,0.52,22,0.574,23,1.114,24,2.144,28,1.532,30,0.711,32,0.393,36,0.638,41,0.412,44,0.345,45,0.691,46,0.025,56,0.381,57,0.236,67,0.181,68,0.265,74,1.744,76,3.871,82,0.462,133,0.015,134,0.015,142,1.566,148,1.439,152,0.612,156,0.181,157,0.591,158,0.988,162,0.648,164,1.349,167,0.966,168,0.422,169,0.761,170,1.013,171,1.744,182,1.283,185,1.864,186,3.317,188,2.186,189,0.885,190,2.271,193,2.793,196,0.979,198,0.964,202,1.333,203,1.247,205,0.986,206,0.905,207,1.206,208,1.519,216,1.115,220,2.92,222,2.92,232,1.634,255,0.498,261,0.571,282,2.498,283,1.346,294,2.719,303,1.634,304,2.54,327,2.041,344,2.309,349,0.458,350,0.458,371,2.05,376,1.634,423,2.353,439,2.92,467,1.349,473,0.905,511,2.091,541,1.864,596,1.996,642,3.317,653,1.333,656,2.041,657,3.397,658,2.607,660,2.144,668,2.663,671,1.786,672,3.059,677,3.88,678,3.146,679,4.066,682,1.532,683,1.744,684,2.144,685,2.985,686,2.309,687,2.309,688,2.72,689,2.985,690,1.427,693,2.719,694,1.651,695,1.944,700,2.498,727,3.317,756,3.317,793,3.762,802,3.762,804,2.689,847,4.243,856,3.826,862,2.849,883,2.309,884,2.689,885,4.437,886,4.437,887,3.317,888,4.437,889,4.437,890,3.762,891,3.762,892,4.437,893,4.437,894,3.172,895,4.437,896,3.172,897,4.437,898,3.172,899,5.125,900,3.121,901,6.045,902,5.543,903,4.437,904,3.172,905,4.519,906,4.437,907,3.172,908,4.437,909,3.762,910,4.437,911,4.437,912,5.834,913,3.172,914,4.437,915,4.437,916,4.437,917,4.437,918,2.371,919,3.172,920,2.689,921,3.172,922,3.172,923,3.172,924,3.172]],["title/components/CardComponent.html",[0,0.074,93,0.573]],["body/components/CardComponent.html",[0,0.121,1,0.637,2,0.903,3,0.217,4,0.217,5,0.734,6,0.734,7,0.734,8,0.186,12,0.287,13,1.076,14,0.269,15,0.364,18,0.502,20,0.968,21,2.611,23,1.002,25,1.234,27,0.615,32,0.341,36,0.613,41,0.465,44,0.287,45,0.781,46,0.025,47,0.734,48,1.279,49,1.279,50,1.011,52,0.968,53,0.637,54,0.968,56,0.444,57,0.283,60,0.903,67,0.217,68,0.317,77,0.734,78,0.968,79,0.734,80,1.153,81,0.734,82,0.418,83,0.734,84,0.637,85,0.734,86,0.637,87,0.734,88,0.637,89,0.734,90,0.637,91,0.734,92,0.968,93,1.002,94,0.637,95,1.084,96,0.734,97,0.637,98,0.734,99,0.637,100,0.734,101,0.734,102,0.637,103,0.734,104,0.637,105,0.734,106,0.637,107,0.734,108,0.637,109,0.734,110,0.968,111,0.637,112,0.684,113,0.734,114,0.637,115,0.734,116,0.637,117,0.734,118,0.637,119,0.734,120,0.734,121,0.637,122,0.734,123,0.637,124,0.734,125,0.637,126,0.968,127,0.592,128,0.734,129,0.637,130,0.964,131,0.734,132,0.734,133,0.017,134,0.017,140,2.611,141,1.59,148,1.108,152,0.968,156,0.217,157,0.668,162,0.575,167,0.592,168,0.369,169,0.466,182,0.968,185,2.108,188,1.732,189,0.668,192,2.2,194,0.903,195,1.561,197,1.085,205,0.592,208,0.955,216,1.261,261,1.011,295,1.935,304,2.906,349,0.724,350,0.548,376,1.847,385,1.085,472,2.556,473,1.432,481,4.254,517,4.019,520,3.075,525,2.556,528,4.019,529,4.019,533,3.375,536,3.751,589,2.258,623,3.191,699,2.688,763,3.375,848,3.375,849,3.375,852,4.762,853,4.254,855,2.825,860,3.364,861,3.751,862,2.688,868,2.923,873,2.611,875,3.799,925,3.222,926,5.018,927,5.018,928,6.38,929,2.528,930,3.443,931,4.199,932,5.018,933,5.618,934,3.8,935,3.375,936,5.018,937,3.8,938,5.018,939,3.8,940,5.018,941,3.222,942,5.018,943,3.8,944,3.375,945,3.751,946,3.8,947,5.018,948,4.254,949,5.018,950,3.8]],["title/components/CardDetailsComponent.html",[0,0.074,94,0.573]],["body/components/CardDetailsComponent.html",[0,0.129,1,0.721,2,0.979,3,0.246,4,0.246,5,0.83,6,0.83,7,0.83,8,0.21,12,0.246,13,1.127,14,0.269,15,0.31,20,1.049,22,0.453,23,0.911,27,0.767,32,0.377,36,0.581,41,0.504,45,0.846,46,0.025,47,0.83,48,1.291,49,1.291,50,1.073,52,1.049,53,0.721,54,1.049,56,0.443,57,0.32,60,0.979,67,0.246,68,0.359,77,0.83,78,1.049,79,0.83,80,1.208,81,0.83,82,0.404,83,0.83,84,0.721,85,0.83,86,0.721,87,0.83,88,0.721,89,0.83,90,0.721,91,0.83,92,1.049,93,0.721,94,1.05,95,1.246,96,0.83,97,0.721,98,0.83,99,0.721,100,0.83,101,0.83,102,0.721,103,0.83,104,0.721,105,0.83,106,0.721,107,0.83,108,0.721,109,0.83,110,1.049,111,0.721,112,0.774,113,0.83,114,0.721,115,0.83,116,0.721,117,0.83,118,0.721,119,0.83,120,0.83,121,0.721,122,0.83,123,0.721,124,0.83,125,0.721,126,1.049,127,0.67,128,0.83,129,0.721,130,1,131,0.83,132,0.83,133,0.019,134,0.019,156,0.246,162,0.44,168,0.282,197,1.228,231,2.446,232,2.001,289,2.461,304,2.284,324,3.656,328,2.284,363,1.877,376,2.305,517,3.656,520,3.331,528,3.656,529,3.656,530,4.063,533,3.656,699,2.817,848,3.656,849,3.656,855,3.061,860,3.061,861,4.68,862,2.817,868,2.829,873,2.829,930,3.652,941,3.647,944,3.656,945,4.063,951,4.608,952,4.063,953,3.647,954,4.608,955,5.436,956,5.436,957,4.301,958,5.436]],["title/components/CheckTicketsComponent.html",[0,0.074,99,0.573]],["body/components/CheckTicketsComponent.html",[0,0.103,1,0.466,2,0.727,3,0.159,4,0.159,5,0.536,6,0.536,7,0.536,8,0.136,12,0.298,13,0.94,14,0.279,15,0.356,18,0.511,22,0.397,23,1.045,25,0.834,28,1.394,30,0.623,36,0.612,41,0.536,44,0.388,45,0.629,46,0.026,47,0.536,48,1.243,49,1.243,50,0.856,52,0.779,53,0.466,54,0.779,56,0.455,57,0.207,60,0.727,66,0.94,67,0.159,68,0.232,74,1.587,76,3.908,77,0.536,78,0.779,79,0.536,80,1.007,81,0.536,82,0.412,83,0.536,84,0.466,85,0.536,86,0.466,87,0.536,88,0.466,89,0.536,90,0.466,91,0.536,92,0.779,93,0.466,94,0.466,95,0.536,96,0.536,97,0.466,98,0.536,99,0.875,100,1.07,101,0.536,102,0.466,103,0.536,104,0.466,105,0.536,106,0.466,107,0.536,108,0.466,109,0.536,110,0.779,111,0.466,112,0.5,113,0.536,114,0.466,115,0.536,116,0.466,117,0.536,118,0.466,119,0.536,120,0.536,121,0.466,122,0.536,123,0.466,124,0.536,125,0.466,126,0.779,127,0.433,128,0.536,129,0.466,130,0.582,131,0.536,132,0.536,133,0.014,134,0.014,140,2.475,141,1.556,142,1.576,148,1.152,152,0.536,156,0.159,157,0.538,158,0.918,159,1.702,160,2.346,162,0.664,164,1.227,165,1.587,166,1.696,167,0.74,168,0.38,169,0.583,170,0.97,173,1.816,175,3.01,182,0.779,183,3.018,189,0.795,190,1.796,194,0.727,195,1.312,197,0.793,198,0.845,204,1.394,205,0.863,206,0.793,207,0.951,208,1.015,216,1.015,222,2.297,237,1.751,243,2.914,255,0.453,273,1.922,278,2.752,283,1.373,287,2.678,299,1.696,300,1.307,304,2.329,314,1.54,323,3.018,324,2.715,326,1.914,327,1.486,334,2.273,336,3.018,349,0.686,350,0.686,356,1.998,367,2.495,371,1.951,385,0.793,397,1.564,417,2.297,421,1.869,422,2.474,423,1.642,432,2.076,511,1.815,519,2.939,564,2.715,569,3.257,589,2.349,591,1.54,609,3.422,677,2.474,726,3.748,731,1.868,767,1.934,825,2.355,847,3.545,862,2.349,872,3.422,873,2.716,874,3.422,881,3.422,883,3.182,887,3.018,900,2.677,905,5,929,2.14,930,2.914,959,5.551,960,4.894,961,2.355,962,4.037,963,3.018,964,4.037,965,3.422,966,4.037,967,4.571,968,3.554,969,4.037,970,3.554,971,3.554,972,4.031,973,4.755,974,4.037,975,5.784,976,4.425,977,5.22,978,4.037,979,4.037,980,2.778,981,3.018,982,5.784,983,5.784,984,3.422,985,5.22,986,4.037,987,4.425,988,3.422,989,2.778,990,3.422,991,4.031,992,2.778,993,3.422,994,2.715,995,2.778,996,3.198,997,3.554,998,2.778,999,3.018,1000,2.778,1001,3.422,1002,3.018,1003,2.778,1004,2.778,1005,2.778,1006,2.778,1007,4.037,1008,2.355,1009,2.778,1010,2.778,1011,2.076,1012,2.076,1013,4.031,1014,2.355,1015,3.018,1016,2.355,1017,2.355,1018,1.868,1019,2.778,1020,1.702,1021,1.868,1022,2.076,1023,1.564,1024,4.755,1025,2.778,1026,2.778,1027,2.778,1028,2.778,1029,2.355,1030,3.422,1031,3.422,1032,2.355,1033,2.355,1034,2.355,1035,2.355,1036,2.355,1037,2.355,1038,2.778,1039,2.355,1040,2.778,1041,4.037,1042,4.904,1043,4.037,1044,3.422,1045,4.037,1046,4.037,1047,4.037,1048,4.037,1049,4.037,1050,4.425,1051,3.018,1052,3.422,1053,4.037,1054,3.018,1055,4.037,1056,4.037,1057,3.422,1058,4.037,1059,4.037,1060,4.037,1061,4.037]],["title/components/CheckoutComponent.html",[0,0.074,97,0.573]],["body/components/CheckoutComponent.html",[0,0.094,1,0.397,2,0.646,3,0.135,4,0.135,5,0.457,6,0.457,7,0.457,8,0.116,12,0.385,13,1.097,14,0.291,15,0.388,16,1.614,17,2.02,18,0.506,22,0.557,23,0.979,27,0.44,28,1.239,30,0.695,32,0.333,36,0.506,41,0.565,44,0.398,46,0.026,47,0.457,48,1.222,49,1.222,50,0.78,52,0.693,53,0.809,54,0.693,56,0.461,57,0.176,58,1.594,60,0.646,66,1.051,67,0.135,68,0.198,74,1.41,76,3.697,77,0.457,78,0.693,79,0.457,80,0.932,81,0.457,82,0.422,83,0.457,84,0.397,85,0.457,86,0.397,87,0.457,88,0.397,89,0.457,90,0.809,91,0.457,92,0.693,93,0.397,94,0.397,95,0.457,96,0.457,97,0.915,98,0.457,99,0.397,100,0.457,101,0.457,102,0.397,103,0.457,104,0.397,105,0.457,106,0.397,107,0.457,108,0.397,109,0.457,110,0.693,111,0.397,112,0.427,113,0.457,114,0.397,115,0.457,116,0.397,117,0.457,118,0.397,119,0.457,120,0.457,121,0.915,122,0.457,123,0.397,124,0.457,125,0.397,126,0.693,127,0.369,128,0.457,129,0.397,130,0.518,131,0.457,132,0.457,133,0.013,134,0.013,140,1.867,141,1.138,142,1.547,148,0.792,150,1.594,152,0.457,156,0.135,157,0.478,158,0.932,160,2.295,161,2.739,162,0.662,164,1.091,165,1.41,166,1.507,167,0.808,168,0.4,169,0.636,170,1.052,173,1.614,185,1.507,188,1.791,189,0.796,190,1.681,194,0.869,195,1.214,197,0.676,198,0.721,199,1.452,204,1.239,205,0.931,207,1.223,208,0.902,216,0.902,220,1.733,222,2.506,237,1.594,242,1.239,255,0.403,262,2.334,273,1.778,278,2.627,282,2.02,283,1.235,287,2.637,289,1.898,291,3.366,292,3.042,295,1.162,297,1.233,299,2.293,300,1.409,303,0.872,304,0.996,314,1.768,320,2.438,326,1.884,327,1.778,328,1.507,346,1.867,349,0.518,350,0.879,354,2.199,356,1.507,360,1.594,361,2.413,363,1.791,364,2.333,371,1.724,384,1.594,385,0.676,386,0.996,387,1.452,401,1.771,417,2.333,421,2.228,422,2.653,423,1.667,439,2.333,451,1.771,455,2.009,466,2.682,467,0.721,468,1.594,475,1.771,477,1.452,511,1.577,512,1.733,564,2.413,571,2.413,576,2.199,589,1.614,590,2.719,596,1.614,604,1.733,623,1.145,656,1.321,687,1.867,704,2.199,705,2.682,714,1.771,725,2.682,726,2.959,731,1.594,767,1.564,845,1.771,847,3.578,849,4.099,862,1.614,868,2.84,875,3.073,883,3.038,887,2.682,891,4.094,900,2.438,905,4.629,935,1.594,970,3.237,971,3.237,972,3.671,976,4.094,988,3.042,990,3.042,991,3.671,996,1.594,997,1.771,1011,1.771,1012,1.771,1013,3.671,1014,2.009,1015,1.771,1017,2.009,1018,2.912,1020,2.199,1021,2.912,1022,1.771,1023,1.334,1029,2.009,1030,3.042,1031,3.042,1032,3.042,1033,2.009,1034,2.009,1035,2.009,1036,2.009,1037,2.009,1042,3.042,1054,1.771,1062,2.009,1063,6.785,1064,3.588,1065,4.33,1066,2.912,1067,3.588,1068,4.33,1069,3.588,1070,3.588,1071,3.588,1072,4.829,1073,2.009,1074,4.829,1075,5.458,1076,3.588,1077,4.829,1078,2.37,1079,2.199,1080,3.588,1081,2.37,1082,5.458,1083,3.248,1084,5.458,1085,4.95,1086,5.458,1087,3.588,1088,2.37,1089,4.829,1090,5.839,1091,3.588,1092,2.37,1093,4.829,1094,2.37,1095,2.37,1096,2.37,1097,3.042,1098,3.588,1099,3.588,1100,3.588,1101,2.37,1102,3.588,1103,4.094,1104,3.588,1105,2.682,1106,2.37,1107,4.33,1108,2.37,1109,3.588,1110,2.37,1111,2.37,1112,3.588,1113,2.37,1114,2.413,1115,2.37,1116,2.37,1117,2.37,1118,1.771,1119,1.233,1120,2.37,1121,2.37,1122,3.588,1123,4.829,1124,2.37,1125,4.33,1126,3.588,1127,2.37,1128,2.37,1129,2.37,1130,2.37,1131,2.37,1132,4.33,1133,4.33,1134,2.37,1135,2.37,1136,2.37,1137,4.33,1138,4.33,1139,2.37,1140,2.37,1141,2.37,1142,2.009,1143,2.37,1144,2.37,1145,2.37,1146,2.02,1147,2.37,1148,2.37,1149,2.37,1150,2.37,1151,1.452,1152,2.009,1153,1.233,1154,2.37,1155,2.37,1156,2.37,1157,2.37,1158,2.009,1159,2.009,1160,2.37,1161,2.37,1162,2.009,1163,2.37,1164,1.771,1165,1.771,1166,2.009,1167,2.37,1168,2.37,1169,2.37,1170,2.37,1171,2.37,1172,3.588,1173,2.37,1174,3.588,1175,3.588]],["title/injectables/EmailService.html",[196,0.755,1176,2.3]],["body/injectables/EmailService.html",[3,0.241,4,0.241,8,0.206,12,0.338,14,0.29,15,0.375,18,0.496,20,1.038,22,0.563,28,1.856,30,0.604,32,0.386,36,0.609,44,0.395,45,0.837,46,0.025,56,0.44,57,0.315,66,1.12,67,0.241,68,0.353,82,0.4,133,0.019,134,0.019,142,1.572,149,4.558,156,0.241,157,0.716,158,1.141,162,0.605,164,1.635,167,0.837,168,0.388,169,0.659,170,1.132,171,2.113,182,1.038,189,0.716,190,2.081,193,2.259,196,1.187,198,1.285,202,1.776,203,1.661,205,0.837,206,1.207,207,1.393,208,1.063,216,1.351,255,0.604,261,0.761,282,3.027,283,1.111,290,5.048,344,2.798,349,0.61,350,0.61,371,1.953,511,1.798,541,2.259,596,2.419,653,1.776,656,2.291,657,3.813,658,2.803,660,2.597,668,3.077,671,2.38,672,3.262,678,2.798,679,3.616,682,1.856,683,2.113,684,2.597,686,2.798,687,2.798,688,2.419,690,1.902,900,3.329,1176,3.616,1177,3.584,1178,5.275,1179,4.651,1180,4.651,1181,4.675,1182,4.542,1183,4.185,1184,5.376,1185,5.376,1186,4.558,1187,5.376,1188,4.558,1189,4.228,1190,5.376,1191,5.376,1192,3.616,1193,3.616,1194,5.376,1195,4.228,1196,3.16,1197,4.228,1198,4.228]],["title/components/HeaderComponent.html",[0,0.074,102,0.573]],["body/components/HeaderComponent.html",[0,0.13,1,0.736,2,0.991,3,0.251,4,0.251,5,0.848,6,0.848,7,0.848,8,0.214,12,0.251,13,1.136,14,0.257,15,0.36,20,1.063,21,2.866,22,0.459,30,0.618,33,4.715,34,4.715,36,0.585,41,0.511,44,0.315,45,0.857,46,0.025,47,0.848,48,1.293,49,1.293,50,1.083,52,1.063,53,1.057,54,1.063,56,0.483,57,0.327,60,0.991,67,0.251,68,0.366,77,0.848,78,1.063,79,0.848,80,1.218,81,0.848,82,0.41,83,0.848,84,0.736,85,0.848,86,0.736,87,0.848,88,0.736,89,0.848,90,0.736,91,0.848,92,1.063,93,0.736,94,0.736,95,0.848,96,0.848,97,0.736,98,0.848,99,1.057,100,1.063,101,0.848,102,1.057,103,0.848,104,0.736,105,0.848,106,0.736,107,0.848,108,0.736,109,0.848,110,1.063,111,0.736,112,0.791,113,0.848,114,0.736,115,0.848,116,0.736,117,0.848,118,0.736,119,0.848,120,0.848,121,0.736,122,0.848,123,0.736,124,0.848,125,0.736,126,1.063,127,0.684,128,0.848,129,0.736,130,0.633,131,0.848,132,0.848,133,0.019,134,0.019,141,1.298,148,1.393,156,0.251,162,0.449,168,0.288,183,4.116,192,2.027,194,0.991,195,1.512,197,1.253,219,2.66,242,1.901,349,0.794,350,0.633,363,1.901,385,1.253,494,3.704,610,3.704,683,2.164,699,2.478,709,4.497,713,3.704,771,3.704,855,3.1,860,3.1,868,2.866,873,3.283,929,2.707,960,3.282,963,4.116,1199,3.723,1200,4.116,1201,5.507,1202,6.016,1203,4.391,1204,4.391,1205,4.391]],["title/components/HomeComponent.html",[0,0.074,104,0.573]],["body/components/HomeComponent.html",[0,0.131,1,0.742,2,0.996,3,0.253,4,0.253,5,0.854,6,0.854,7,0.854,8,0.216,12,0.316,13,1.172,14,0.282,15,0.398,16,2.846,17,3.115,18,0.412,20,0.854,25,0.914,32,0.316,35,4.513,36,0.513,41,0.513,44,0.253,46,0.025,47,0.854,48,1.293,49,1.293,50,1.087,52,1.068,53,1.06,54,1.068,56,0.412,57,0.329,58,2.976,60,0.996,67,0.253,68,0.369,70,3.75,72,3.292,77,0.854,78,1.068,79,0.854,80,1.221,81,0.854,82,0.412,83,0.854,84,0.742,85,0.854,86,0.742,87,0.854,88,0.742,89,0.854,90,0.742,91,0.854,92,1.068,93,0.742,94,0.742,95,0.854,96,0.854,97,0.742,98,0.854,99,0.742,100,0.854,101,0.854,102,0.742,103,0.854,104,1.113,105,0.854,106,0.742,107,0.854,108,0.742,109,0.854,110,1.068,111,0.742,112,0.797,113,0.854,114,0.742,115,0.854,116,0.742,117,0.854,118,0.742,119,0.854,120,0.854,121,0.742,122,0.854,123,0.742,124,0.854,125,0.742,126,1.068,127,0.689,128,0.854,129,0.742,130,0.638,131,0.854,132,0.854,133,0.019,134,0.019,143,2.976,194,0.996,242,1.91,363,1.91,581,3.115,591,1.792,701,3.399,713,3.721,729,3.115,996,3.721,1016,3.75,1119,2.302,1153,2.879,1200,4.136,1206,3.75,1207,5.533,1208,4.136,1209,3.721,1210,5.533,1211,3.39,1212,5.533,1213,5.533,1214,3.307,1215,4.424,1216,5.533,1217,5.533,1218,5.533,1219,6.325,1220,5.533,1221,4.728,1222,5.533,1223,4.69]],["title/components/LoadingComponent.html",[0,0.074,106,0.573]],["body/components/LoadingComponent.html",[0,0.111,1,0.538,2,0.805,3,0.183,4,0.183,5,0.619,6,0.619,7,0.619,8,0.157,12,0.255,13,1.092,14,0.292,15,0.386,18,0.472,22,0.465,23,0.863,27,0.548,30,0.658,32,0.255,36,0.563,40,2.518,41,0.577,44,0.397,45,0.696,46,0.025,47,0.619,48,1.261,49,1.261,50,0.927,52,0.863,53,0.538,54,0.863,56,0.436,57,0.239,60,0.805,64,2.73,67,0.183,68,0.268,72,1.669,77,0.619,78,0.863,79,0.619,80,1.075,81,0.619,82,0.383,83,0.619,84,0.538,85,0.619,86,0.538,87,0.619,88,0.538,89,0.619,90,0.538,91,0.619,92,0.863,93,0.538,94,0.538,95,0.619,96,0.619,97,0.538,98,0.619,99,0.538,100,0.619,101,0.619,102,0.538,103,0.619,104,0.538,105,0.619,106,0.934,107,0.619,108,0.538,109,0.619,110,0.863,111,0.538,112,0.578,113,0.619,114,0.538,115,0.619,116,0.538,117,0.619,118,0.538,119,0.619,120,0.619,121,0.538,122,0.619,123,0.538,124,0.619,125,0.538,126,0.863,127,0.5,128,0.619,129,0.538,130,0.463,131,0.619,132,0.619,133,0.016,134,0.016,141,1.43,156,0.294,157,0.596,158,1.075,161,3.282,162,0.57,164,1.36,167,0.5,168,0.338,169,0.393,170,0.982,171,1.758,177,3.136,182,0.863,188,2.022,189,0.427,190,1.965,192,1.181,194,1.003,195,1.294,197,0.916,198,0.975,200,2.398,204,1.544,205,0.696,207,1.054,216,1.124,219,2.691,237,1.896,242,1.544,255,0.502,273,2.051,282,2.518,283,1.151,287,2.161,289,1.758,295,1.449,299,1.879,300,0.756,326,2.377,328,1.348,334,2.518,349,0.645,350,0.463,354,3.815,367,2.857,373,2.741,385,0.916,589,2.012,591,1.804,604,2.161,621,3.792,686,2.327,694,2.327,699,2.012,748,3.792,767,1.449,830,2.72,855,2.518,860,3.136,868,2.327,929,2.317,1020,2.741,1051,4.535,1052,5.143,1085,3.792,1224,2.72,1225,3.792,1226,4.472,1227,3.792,1228,6.067,1229,5.689,1230,4.365,1231,4.472,1232,5.858,1233,3.208,1234,3.505,1235,4.472,1236,4.472,1237,4.966,1238,4.472,1239,4.164,1240,4.722,1241,3.208,1242,3.008,1243,3.343,1244,3.208,1245,4.472,1246,4.472,1247,3.208,1248,1.966,1249,3.208,1250,3.208,1251,3.208,1252,3.208,1253,3.208,1254,3.208,1255,3.208,1256,4.472,1257,2.398,1258,3.208,1259,2.398,1260,3.208,1261,4.472,1262,5.57,1263,5.646,1264,5.383,1265,4.164,1266,4.472,1267,3.008,1268,4.472,1269,3.792,1270,4.722,1271,3.792,1272,4.472,1273,4.472,1274,4.722,1275,4.472,1276,4.472,1277,3.792,1278,5.383,1279,5.57,1280,4.472,1281,3.343,1282,3.208,1283,3.792,1284,4.472,1285,4.472,1286,4.472,1287,3.792,1288,3.792,1289,4.472,1290,3.792,1291,4.722,1292,3.792,1293,3.792,1294,4.472,1295,4.472,1296,3.343,1297,5.57,1298,4.472,1299,3.792,1300,3.792,1301,4.472,1302,3.208]],["title/injectables/LoadingService.html",[196,0.755,1234,1.925]],["body/injectables/LoadingService.html",[3,0.234,4,0.234,8,0.2,12,0.234,14,0.293,15,0.39,18,0.457,20,1.257,22,0.57,27,0.822,30,0.731,32,0.383,36,0.634,37,2.369,44,0.399,45,0.82,46,0.025,56,0.392,57,0.304,67,0.234,68,0.341,133,0.018,134,0.018,141,1.581,156,0.234,157,0.701,162,0.629,170,1.03,171,2.07,172,2.544,182,1.186,188,2.45,189,0.701,190,1.991,193,2.735,194,1.107,195,1.636,196,1.162,198,1.244,202,1.719,203,1.609,207,1.372,216,1.324,219,3.301,255,0.591,295,1.706,300,1.241,323,4.595,326,2.466,349,0.76,350,0.76,473,1.503,589,2.369,590,2.965,623,2.544,653,1.719,767,2.214,798,5.392,948,4.464,1020,3.767,1229,5.392,1234,2.965,1239,3.936,1243,3.936,1257,3.936,1259,3.936,1303,3.47,1304,5.266,1305,2.74,1306,4.135,1307,5.212,1308,3.542,1309,4.464,1310,5.823,1311,6.147,1312,6.147,1313,4.093,1314,6.147,1315,5.212,1316,4.093,1317,5.266,1318,4.093,1319,5.266,1320,5.266,1321,5.266,1322,5.266,1323,4.093,1324,5.266,1325,5.266,1326,4.093,1327,4.093]],["title/components/MainPageComponent.html",[0,0.074,108,0.573]],["body/components/MainPageComponent.html",[0,0.118,1,0.604,2,0.872,3,0.206,4,0.206,5,0.695,6,0.695,7,0.695,8,0.176,12,0.367,13,1.175,14,0.289,15,0.382,16,2.631,17,2.726,18,0.435,22,0.544,23,1.169,27,0.593,30,0.706,32,0.276,33,3.619,36,0.62,41,0.542,44,0.382,46,0.025,47,0.695,48,1.274,49,1.274,50,0.985,52,0.934,53,0.604,54,0.934,56,0.478,57,0.268,60,0.872,66,1.175,67,0.206,68,0.3,72,2.519,74,2.742,77,0.695,78,0.934,79,0.695,80,1.129,81,0.695,82,0.407,83,0.695,84,0.604,85,0.695,86,0.604,87,0.695,88,0.604,89,0.695,90,0.604,91,0.695,92,0.934,93,0.98,94,0.604,95,0.695,96,0.695,97,0.604,98,0.695,99,0.604,100,0.695,101,0.695,102,0.98,103,0.695,104,0.604,105,0.695,106,0.604,107,0.695,108,1.053,109,1.178,110,0.934,111,0.604,112,0.648,113,0.695,114,0.604,115,0.695,116,0.98,117,0.695,118,0.604,119,0.695,120,0.695,121,0.604,122,0.695,123,0.604,124,0.695,125,0.604,126,0.934,127,0.561,128,0.695,129,0.604,130,0.843,131,0.695,132,0.695,133,0.017,134,0.017,142,1.141,148,1.387,151,2.967,156,0.206,157,0.645,158,1.055,162,0.599,164,1.472,167,0.561,168,0.318,169,0.441,170,1.094,175,2.519,182,1.129,189,0.645,190,1.568,194,0.872,204,1.671,205,0.561,206,1.028,227,2.519,231,2.178,237,2.013,241,4.226,242,1.671,255,0.544,270,5.327,273,2.153,277,2.692,278,3.032,283,1,289,1.903,300,1.141,304,2.457,314,1.568,326,1.671,327,2.313,328,2.034,331,3.256,332,3.256,349,0.519,350,0.519,385,1.028,387,2.207,389,2.207,395,2.028,410,3.053,423,2.019,425,2.692,467,1.472,604,2.339,610,3.256,662,2.519,706,2.519,860,2.726,1015,4.371,1066,3.678,1119,1.874,1200,3.619,1242,3.256,1248,2.967,1328,5.172,1329,5.172,1330,2.692,1331,5.848,1332,4.104,1333,4.104,1334,4.841,1335,3.601,1336,2.967,1337,4.104,1338,3.601,1339,4.957,1340,4.104,1341,4.841,1342,4.841,1343,3.053,1344,3.053,1345,3.053,1346,5.848,1347,5.848,1348,5.848]],["title/components/ModalFilterComponent.html",[0,0.074,111,0.573]],["body/components/ModalFilterComponent.html",[0,0.114,1,0.559,2,0.828,3,0.191,4,0.191,5,0.644,6,0.644,7,0.644,8,0.163,12,0.263,13,0.828,14,0.282,18,0.477,22,0.512,23,1.075,25,1.17,27,0.753,30,0.636,32,0.324,37,2.068,41,0.57,44,0.4,46,0.025,47,0.644,48,1.265,49,1.265,50,0.947,52,0.887,53,0.559,54,0.887,56,0.391,57,0.248,60,0.828,67,0.191,68,0.278,75,2.588,77,0.644,78,0.887,79,0.644,80,1.093,81,0.644,82,0.391,83,0.644,84,0.559,85,0.644,86,0.559,87,0.644,88,0.559,89,0.644,90,0.559,91,0.644,92,0.887,93,0.559,94,0.559,95,0.644,96,0.644,97,0.559,98,0.644,99,0.559,100,0.644,101,0.644,102,0.559,103,0.644,104,0.559,105,0.644,106,0.559,107,0.644,108,0.559,109,0.644,110,0.887,111,0.95,112,1.249,113,0.644,114,0.559,115,0.644,116,0.559,117,0.644,118,0.559,119,0.644,120,0.644,121,0.559,122,0.644,123,0.559,124,0.644,125,0.559,126,0.887,127,0.52,128,0.644,129,0.559,130,0.481,131,0.644,132,0.644,133,0.016,134,0.016,142,1.083,152,0.887,156,0.191,157,0.612,162,0.681,167,0.52,168,0.427,169,0.409,188,1.587,189,0.755,192,1.692,193,1.931,194,0.947,195,1.321,205,0.52,218,2.817,242,1.587,244,2.54,255,0.516,261,1.02,287,2.22,299,2.693,300,1.335,303,1.692,314,1.489,327,1.692,349,0.857,350,0.857,356,2.38,358,3.091,372,2.392,376,1.692,385,0.952,386,1.402,473,1.312,511,1.397,519,3.775,574,2.588,691,2.817,704,2.817,758,3.091,797,2.817,850,4.803,855,2.588,857,3.436,863,4.441,865,2.737,868,3.092,869,3.93,929,2.366,981,3.436,1002,3.436,1066,3.536,1164,3.436,1209,3.091,1306,3.091,1349,5.684,1350,5.012,1351,2.829,1352,4.596,1353,4.803,1354,3.436,1355,4.596,1356,4.792,1357,4.591,1358,4.803,1359,3.896,1360,4.803,1361,5.76,1362,4.596,1363,4.596,1364,4.596,1365,4.457,1366,4.457,1367,4.457,1368,4.803,1369,5.665,1370,3.896,1371,5.665,1372,5.037,1373,4.457,1374,5.257,1375,5.257,1376,3.337,1377,4.922,1378,3.896,1379,3.337,1380,3.337,1381,3.436,1382,5.665,1383,4.792,1384,3.337,1385,3.337,1386,3.436,1387,3.337,1388,3.896,1389,3.337,1390,3.337,1391,3.436,1392,3.337,1393,3.337,1394,3.337,1395,3.436,1396,4.596,1397,2.829,1398,2.829,1399,3.337,1400,3.896,1401,2.829,1402,2.829,1403,4.596,1404,3.337,1405,3.337,1406,3.337,1407,3.337,1408,3.337,1409,3.337,1410,3.091,1411,3.896,1412,3.896]],["title/components/ProfileComponent.html",[0,0.074,114,0.573]],["body/components/ProfileComponent.html",[0,0.081,1,0.315,2,0.539,3,0.107,4,0.107,5,0.362,6,0.362,7,0.362,8,0.092,12,0.382,13,0.893,14,0.289,15,0.394,18,0.518,22,0.53,23,1.01,25,0.771,27,0.683,30,0.523,32,0.309,36,0.579,41,0.566,44,0.397,46,0.026,47,0.362,48,1.185,49,1.185,50,0.672,52,0.578,53,0.315,54,0.578,56,0.441,57,0.14,60,0.539,62,2.238,66,0.893,67,0.107,68,0.157,74,1.949,76,3.282,77,0.362,78,0.578,79,0.362,80,0.822,81,0.362,82,0.317,83,0.362,84,0.315,85,0.362,86,0.315,87,0.362,88,0.315,89,0.362,90,0.315,91,0.362,92,0.578,93,0.714,94,0.315,95,0.362,96,0.362,97,0.315,98,0.362,99,0.315,100,0.362,101,0.362,102,0.714,103,0.362,104,0.315,105,0.362,106,0.315,107,0.362,108,0.315,109,0.362,110,0.578,111,0.315,112,1.112,113,0.362,114,0.831,115,0.362,116,0.315,117,0.362,118,0.315,119,0.362,120,0.362,121,0.315,122,0.362,123,0.315,124,0.362,125,0.315,126,0.578,127,0.292,128,0.362,129,0.315,130,0.615,131,0.362,132,0.362,133,0.01,134,0.01,141,1.55,142,1.635,145,2.102,152,1.075,156,0.171,157,0.399,158,0.721,159,1.151,160,2.291,162,0.682,164,0.91,165,1.177,166,1.258,167,0.466,168,0.401,169,0.367,170,0.906,173,1.347,175,2.581,182,0.578,185,1.955,189,0.858,192,2.422,194,1.179,195,1.661,199,1.151,204,1.034,205,0.663,206,0.536,207,0.706,208,1.4,221,3.185,226,3.612,232,1.102,236,2.014,237,1.375,239,1.558,241,2.014,243,2.288,244,1.804,246,2.511,255,0.336,261,0.937,273,1.568,283,1.244,289,1.674,291,3.341,296,4.039,297,1.558,300,1.47,314,1.849,320,1.686,324,3.336,326,1.034,327,1.102,333,1.835,336,2.238,346,1.558,349,0.841,350,0.841,363,1.471,364,1.446,367,1.347,371,0.571,385,0.536,386,0.789,393,1.263,395,1.057,397,1.057,399,0.977,417,2.396,418,2.791,421,2.651,422,2.852,423,0.648,439,0.907,467,1.582,468,1.263,470,3.612,472,1.263,473,0.855,477,1.835,492,1.151,516,2.569,525,1.263,539,2.399,559,1.592,569,2.792,584,2.014,591,2.021,600,2.538,622,2.238,623,0.907,641,2.538,682,1.471,685,2.014,691,1.835,700,1.686,706,1.558,718,1.263,726,3.311,736,3.612,750,3.945,751,3.612,753,4.721,754,4.549,755,3.612,756,3.707,758,3.84,767,1.38,768,2.538,776,2.014,782,2.62,875,2.399,883,2.971,899,2.538,935,1.263,954,4.58,968,2.791,1002,3.185,1018,1.263,1083,3.634,1118,1.404,1119,0.977,1146,1.686,1151,1.151,1153,0.977,1158,2.538,1165,1.404,1182,3.336,1183,2.014,1193,2.866,1305,1.558,1340,2.538,1344,1.592,1367,3.612,1413,1.592,1414,5.175,1415,2.994,1416,3.341,1417,3.734,1418,3.165,1419,2.994,1420,4.204,1421,3.734,1422,3.734,1423,3.734,1424,3.165,1425,3.734,1426,3.165,1427,3.165,1428,3.734,1429,3.165,1430,3.734,1431,2.994,1432,4.26,1433,4.26,1434,4.26,1435,4.26,1436,4.26,1437,3.612,1438,3.612,1439,4.26,1440,4.26,1441,3.612,1442,2.994,1443,2.014,1444,1.878,1445,2.238,1446,2.994,1447,1.878,1448,4.26,1449,2.994,1450,2.994,1451,2.791,1452,2.994,1453,1.878,1454,1.878,1455,4.26,1456,1.878,1457,1.878,1458,4.26,1459,1.878,1460,2.538,1461,2.994,1462,4.435,1463,1.878,1464,1.878,1465,1.878,1466,4.84,1467,3.612,1468,2.538,1469,2.238,1470,3.707,1471,3.612,1472,1.878,1473,3.185,1474,2.994,1475,1.878,1476,2.994,1477,3.165,1478,1.878,1479,2.994,1480,5.403,1481,4.959,1482,2.994,1483,1.878,1484,5.03,1485,4.26,1486,1.878,1487,1.878,1488,2.994,1489,1.878,1490,4.204,1491,1.878,1492,1.878,1493,1.878,1494,2.994,1495,1.878,1496,1.878,1497,2.994,1498,2.994,1499,1.878,1500,2.994,1501,1.878,1502,1.878,1503,1.878,1504,2.994,1505,1.878,1506,1.878,1507,2.994,1508,1.878,1509,3.165,1510,3.734,1511,5.403,1512,1.878,1513,1.878,1514,1.878,1515,1.878,1516,1.592,1517,2.538,1518,1.878,1519,1.592,1520,3.165,1521,2.538,1522,1.592,1523,2.791,1524,1.592,1525,2.538,1526,1.878,1527,1.592,1528,1.878,1529,3.165,1530,1.592,1531,1.592,1532,2.994,1533,1.592,1534,1.592,1535,1.592,1536,2.994,1537,1.878,1538,1.878,1539,1.878,1540,1.878,1541,1.878,1542,1.878,1543,1.878,1544,3.189,1545,3.189,1546,3.189,1547,3.189,1548,1.592,1549,1.592,1550,1.878,1551,1.835,1552,1.878,1553,1.878,1554,1.592,1555,1.878,1556,1.592,1557,1.878,1558,2.994,1559,2.994,1560,3.734,1561,1.878,1562,1.878,1563,1.878,1564,1.878,1565,1.878,1566,1.878,1567,1.878,1568,1.878,1569,1.878,1570,1.878,1571,1.878,1572,1.878,1573,1.878,1574,1.878,1575,1.878,1576,2.994,1577,3.612,1578,2.994,1579,2.994,1580,2.994,1581,2.994,1582,4.26,1583,3.612,1584,2.538,1585,2.538,1586,2.538,1587,2.238,1588,2.538,1589,2.538,1590,2.994]],["title/components/SearchPageComponent.html",[0,0.074,118,0.573]],["body/components/SearchPageComponent.html",[0,0.089,1,0.364,2,0.604,3,0.124,4,0.124,5,0.419,6,0.419,7,0.419,8,0.106,12,0.38,13,1.022,14,0.293,15,0.39,16,2.075,18,0.443,22,0.535,23,1.186,25,1.089,27,0.73,30,0.761,32,0.314,36,0.617,41,0.634,44,0.396,46,0.025,47,0.419,48,1.208,49,1.208,50,0.738,52,0.647,53,0.364,54,0.647,56,0.443,57,0.161,60,0.604,63,2.055,64,1.509,67,0.124,68,0.181,74,2.699,75,2.968,77,0.419,78,0.647,79,0.419,80,0.89,81,0.419,82,0.409,83,0.419,84,0.364,85,0.419,86,0.364,87,0.419,88,0.364,89,0.419,90,0.364,91,0.419,92,0.647,93,0.364,94,0.773,95,0.419,96,0.419,97,0.364,98,0.419,99,0.364,100,0.419,101,0.419,102,0.773,103,0.419,104,0.364,105,0.419,106,0.364,107,0.419,108,0.364,109,0.419,110,0.647,111,0.773,112,0.604,113,0.419,114,0.364,115,0.419,116,0.773,117,0.419,118,0.884,119,0.962,120,0.419,121,0.364,122,0.419,123,0.364,124,0.419,125,0.364,126,0.647,127,0.338,128,0.419,129,0.364,130,0.76,131,0.419,132,0.419,133,0.012,134,0.012,141,1.242,142,1.175,148,1.018,151,4.141,152,0.962,156,0.124,157,0.447,158,0.791,162,0.662,164,1.02,167,0.776,168,0.425,169,0.611,170,0.952,175,1.745,182,0.647,184,2.757,189,0.756,192,1.235,194,0.738,197,0.619,204,1.158,205,0.718,206,0.619,207,0.511,216,0.843,218,3.648,224,2.256,227,1.745,231,2.075,232,1.235,237,1.509,241,3.697,244,1.98,255,0.377,261,1.049,273,1.698,278,2.768,287,1.048,291,1.888,295,1.708,299,0.911,300,1.338,303,1.509,306,2.597,326,1.158,327,2.09,328,2.095,331,2.256,332,2.256,343,2.843,344,1.745,346,2.595,349,0.819,350,0.926,358,3.819,367,1.844,372,1.745,376,0.799,385,0.619,386,0.911,387,1.33,389,1.33,395,1.222,423,1.158,425,2.507,426,2.507,467,1.246,473,0.619,493,2.507,511,1.516,516,1.509,519,3.747,530,1.622,560,2.597,569,2.597,571,2.256,574,1.888,576,2.055,584,2.256,589,2.075,591,1.928,604,1.62,608,3.91,646,3.102,656,1.698,662,1.745,664,1.459,682,1.82,691,2.512,699,0.976,700,1.888,758,2.256,763,2.256,767,1.494,775,2.055,862,1.509,865,2.876,929,1.844,952,1.622,965,2.843,999,2.507,1023,2.597,1066,2.757,1105,2.507,1119,1.129,1153,1.745,1164,4.108,1209,2.256,1221,2.507,1242,2.256,1274,4.469,1277,2.843,1278,2.843,1305,1.129,1306,3.546,1307,3.91,1330,1.622,1332,2.843,1333,2.843,1339,5.046,1343,1.839,1345,1.839,1350,1.622,1353,4.813,1354,3.448,1356,4.356,1357,3.064,1360,2.843,1361,5.522,1365,3.475,1366,3.475,1368,3.91,1370,2.843,1372,4.227,1373,4.227,1377,3.941,1378,4.469,1381,1.622,1383,3.727,1386,4.108,1388,1.839,1391,3.448,1395,2.507,1397,2.843,1400,1.839,1401,1.839,1402,1.839,1410,2.256,1411,4.469,1412,5.046,1591,5.522,1592,5.522,1593,3.354,1594,4.612,1595,5.272,1596,3.475,1597,4.099,1598,4.227,1599,4.612,1600,4.612,1601,3.354,1602,3.354,1603,3.354,1604,1.839,1605,3.941,1606,3.354,1607,4.244,1608,2.256,1609,5.272,1610,2.17,1611,3.354,1612,2.17,1613,4.612,1614,2.507,1615,2.17,1616,2.17,1617,2.17,1618,2.17,1619,2.17,1620,2.17,1621,2.17,1622,2.17,1623,3.354,1624,2.17,1625,4.099,1626,3.354,1627,2.17,1628,2.17,1629,2.507,1630,3.91,1631,4.813,1632,3.91,1633,2.17,1634,2.17,1635,2.17,1636,4.612,1637,4.612,1638,2.17,1639,3.354,1640,2.17,1641,3.354,1642,3.354,1643,2.17,1644,2.17,1645,2.17,1646,2.17,1647,2.17,1648,2.17,1649,2.17,1650,1.839,1651,2.17,1652,2.17,1653,2.17,1654,2.17,1655,2.17,1656,2.17,1657,2.17,1658,2.17,1659,2.17,1660,4.612,1661,2.843,1662,2.17,1663,2.17,1664,2.17,1665,2.17,1666,2.17,1667,2.17,1668,2.17,1669,2.17,1670,2.17,1671,2.17,1672,2.17,1673,2.17,1674,2.17,1675,3.354,1676,3.354,1677,3.354,1678,3.91,1679,3.354,1680,3.354,1681,2.843,1682,3.354,1683,3.354,1684,3.354]],["title/components/SearchbarComponent.html",[0,0.074,116,0.573]],["body/components/SearchbarComponent.html",[0,0.125,1,0.679,2,0.942,3,0.232,4,0.232,5,0.782,6,0.782,7,0.782,8,0.198,12,0.299,13,1.169,14,0.288,15,0.371,16,2.756,18,0.389,22,0.511,25,1.265,32,0.299,36,0.568,41,0.485,44,0.382,46,0.025,47,0.782,48,1.285,49,1.285,50,1.044,52,1.01,53,0.679,54,1.01,56,0.431,57,0.302,60,0.942,66,0.942,67,0.232,68,0.338,77,0.782,78,1.01,79,0.782,80,1.182,81,0.782,82,0.431,83,0.782,84,0.679,85,0.782,86,0.679,87,0.782,88,0.679,89,0.782,90,0.679,91,0.782,92,1.01,93,0.679,94,0.679,95,0.782,96,0.782,97,0.679,98,0.782,99,0.679,100,0.782,101,0.782,102,0.679,103,0.782,104,0.679,105,0.782,106,0.679,107,0.782,108,0.679,109,0.782,110,1.01,111,0.679,112,0.73,113,0.782,114,0.679,115,0.782,116,1.027,117,0.782,118,0.679,119,1.224,120,0.782,121,0.679,122,0.782,123,0.679,124,0.782,125,0.679,126,1.01,127,0.631,128,0.782,129,0.679,130,0.585,131,0.782,132,0.782,133,0.018,134,0.018,141,1.233,151,4.234,152,0.782,156,0.232,157,0.697,158,1.119,161,3.192,162,0.627,167,0.631,168,0.38,169,0.497,170,0.877,189,0.54,193,2.573,197,1.157,205,0.631,206,1.157,208,1.019,212,3.436,244,2.8,255,0.588,261,0.942,299,2.573,300,0.955,333,3.207,349,0.585,350,0.585,386,1.703,426,4.332,473,1.157,518,3.52,656,1.927,699,2.355,705,3.912,747,3.52,767,1.695,800,4.437,851,4.437,857,3.912,863,4.332,869,3.912,984,4.437,1073,3.436,1221,3.912,1354,3.912,1598,4.914,1661,3.436,1685,3.436,1686,6.494,1687,5.233,1688,3.52,1689,6.695,1690,5.233,1691,5.796,1692,5.233,1693,4.053,1694,4.053,1695,5.233,1696,5.233,1697,5.233,1698,4.437,1699,5.233,1700,4.053,1701,4.053,1702,4.053]],["title/components/SidebarComponent.html",[0,0.074,53,0.573]],["body/components/SidebarComponent.html",[0,0.118,1,0.601,2,0.869,3,0.205,4,0.205,5,0.692,6,0.692,7,0.692,8,0.175,12,0.276,13,1.174,14,0.272,15,0.372,18,0.519,22,0.487,27,0.715,32,0.276,34,3.607,35,5.071,36,0.447,40,2.717,41,0.541,44,0.387,46,0.025,47,0.692,48,1.273,49,1.273,50,0.982,52,0.931,53,0.978,54,0.931,56,0.477,57,0.267,60,0.869,67,0.205,68,0.299,72,2.511,77,0.692,78,0.931,79,0.692,80,1.126,81,0.692,82,0.406,83,0.692,84,0.601,85,0.692,86,0.601,87,0.692,88,0.601,89,0.692,90,0.601,91,0.692,92,0.931,93,0.601,94,0.601,95,0.692,96,0.692,97,0.601,98,0.692,99,0.601,100,0.692,101,0.692,102,0.601,103,0.692,104,0.601,105,0.692,106,0.601,107,0.692,108,0.601,109,0.692,110,0.931,111,0.601,112,0.645,113,0.692,114,0.601,115,0.692,116,0.601,117,0.692,118,0.601,119,0.692,120,0.692,121,0.601,122,0.692,123,0.601,124,0.692,125,0.601,126,0.931,127,0.558,128,0.692,129,0.601,130,0.517,131,0.692,132,0.692,133,0.017,134,0.017,141,1.375,142,1.599,144,4.69,156,0.205,157,0.643,158,1.053,159,2.196,160,2.52,162,0.667,167,0.558,168,0.358,169,0.439,170,0.978,172,2.331,173,2.823,188,2.166,189,0.727,190,1.973,194,1.051,195,1.371,197,1.023,198,1.09,204,1.666,205,0.558,206,1.023,215,3.607,216,1.213,237,2.008,242,1.666,243,3.343,255,0.542,261,0.869,273,2.149,300,1.285,326,2.015,349,0.787,350,0.787,353,4.091,356,2.452,385,1.377,571,3.245,581,2.717,589,2.626,706,2.511,726,3.576,729,3.67,731,2.41,742,4.948,767,1.89,786,3.607,836,3.038,929,2.454,930,3.343,931,4.078,970,4.078,971,4.078,981,3.607,1001,4.091,1008,3.038,1011,2.679,1021,2.41,1022,2.679,1023,2.018,1230,4.625,1267,3.245,1287,4.091,1288,3.038,1305,2.511,1414,4.091,1509,4.091,1703,3.038,1704,4.825,1705,4.825,1706,5.455,1707,5.455,1708,5.836,1709,4.825,1710,3.584,1711,3.584,1712,4.825,1713,4.825,1714,3.584,1715,4.825,1716,3.584,1717,3.584,1718,3.584,1719,4.825,1720,3.584,1721,4.948,1722,3.584,1723,3.584,1724,3.038,1725,3.584,1726,3.584,1727,3.584,1728,5.455,1729,4.825,1730,4.825,1731,3.584,1732,3.584,1733,3.584,1734,3.584,1735,4.825,1736,3.584,1737,4.825,1738,4.091,1739,4.825,1740,4.825]],["title/components/ToastComponent.html",[0,0.074,121,0.573]],["body/components/ToastComponent.html",[0,0.125,1,0.67,2,0.934,3,0.329,4,0.228,5,0.772,6,0.772,7,0.772,8,0.195,12,0.329,13,1.097,14,0.278,18,0.481,22,0.549,32,0.296,46,0.025,47,0.772,48,1.284,49,1.284,50,1.037,52,1.001,53,0.67,54,1.001,56,0.428,57,0.297,60,0.934,66,0.934,67,0.228,68,0.334,77,0.772,78,1.001,79,0.772,80,1.176,81,0.772,82,0.453,83,0.772,84,0.67,85,0.772,86,0.67,87,0.772,88,0.67,89,0.772,90,0.67,91,0.772,92,1.001,93,0.67,94,0.67,95,0.772,96,0.772,97,0.67,98,0.772,99,0.67,100,0.772,101,0.772,102,0.67,103,0.772,104,0.67,105,0.772,106,0.67,107,0.772,108,0.67,109,0.772,110,1.001,111,0.67,112,0.72,113,0.772,114,0.67,115,0.772,116,0.67,117,0.772,118,0.67,119,0.772,120,0.772,121,1.021,122,0.772,123,0.67,124,0.772,125,0.67,126,1.001,127,0.623,128,0.772,129,0.67,130,0.577,131,0.772,132,0.772,133,0.018,134,0.018,148,1.145,156,0.348,157,0.691,158,1.111,162,0.589,167,0.808,168,0.378,169,0.636,170,0.965,172,2.782,189,0.533,205,0.949,227,2.7,230,3.555,231,2.334,239,2.7,255,0.582,261,1.215,262,3.132,283,1.189,297,3.474,300,0.942,303,1.91,363,1.791,399,2.081,421,2.039,574,2.921,612,4.036,716,4.398,718,2.689,1023,3.242,1146,2.921,1269,4.882,1270,4.882,1271,4.882,1281,4.304,1296,4.836,1299,4.882,1416,3.883,1443,3.489,1544,2.45,1545,3.529,1546,3.869,1547,3.869,1741,5.758,1742,3.39,1743,5.187,1744,5.187,1745,5.485,1746,5.758,1747,5.758,1748,5.758,1749,5.758,1750,5.187,1751,5.187,1752,5.187,1753,3.39,1754,3.999,1755,5.758,1756,5.187,1757,3.999,1758,5.187,1759,4.398,1760,5.187,1761,3.999,1762,3.999]],["title/injectables/ToastService.html",[196,0.755,1763,2.3]],["body/injectables/ToastService.html",[3,0.339,4,0.244,8,0.209,12,0.339,14,0.291,15,0.376,18,0.49,20,1.044,22,0.564,23,0.907,25,1.29,27,0.663,30,0.739,32,0.357,36,0.611,37,2.435,44,0.376,45,0.843,46,0.025,56,0.403,57,0.318,66,0.974,67,0.244,68,0.356,82,0.403,133,0.019,134,0.019,142,1.275,156,0.244,157,0.721,158,1.146,162,0.554,164,1.645,167,0.843,168,0.355,169,0.663,170,1.153,171,2.127,182,1.044,189,0.569,196,1.194,202,1.794,203,1.678,205,0.972,206,1.219,227,2.816,230,3.516,231,2.435,261,1.23,262,2.962,297,3.521,300,1.006,363,2.423,364,3.269,399,2.222,421,2.659,521,3.047,574,3.706,596,2.435,653,1.794,684,2.614,1079,3.316,1146,3.047,1151,3.316,1162,4.587,1416,3.898,1544,2.617,1545,3.64,1546,3.949,1547,3.949,1554,4.587,1753,3.62,1759,4.587,1763,3.639,1764,3.62,1765,6.583,1766,5.411,1767,5.411,1768,6.245,1769,5.411,1770,5.411,1771,5.294,1772,5.411,1773,6.245,1774,5.411,1775,5.411,1776,5.411,1777,5.411,1778,4.27,1779,5.411,1780,4.27,1781,5.411,1782,5.411,1783,5.411,1784,4.587]],["title/interfaces/Trip.html",[130,0.493,1785,1.779]],["body/interfaces/Trip.html",[3,0.178,4,0.178,8,0.152,12,0.375,14,0.284,15,0.389,18,0.526,20,1.324,21,2.864,22,0.366,25,1.137,27,0.812,30,0.493,32,0.382,36,0.51,38,4.458,41,0.653,44,0.401,45,1.076,46,0.025,56,0.232,63,2.689,66,0.991,67,0.178,72,2.864,82,0.483,130,0.868,133,0.015,134,0.015,148,0.969,152,0.847,156,0.178,168,0.421,169,0.538,231,1.974,232,1.615,255,0.493,261,1.218,283,1.276,304,3.008,328,1.843,348,3.477,365,5.099,366,5.099,368,5.099,369,5.099,370,5.099,371,1.674,372,2.864,373,3.865,374,3.702,376,1.615,467,1.829,511,1.949,512,1.508,516,2.706,517,2.951,518,3.702,519,3.099,520,3.686,521,3.386,539,2.47,543,3.702,560,3.657,574,2.47,591,2.223,596,1.974,682,1.9,683,2.673,701,2.47,767,1.421,848,3.702,862,1.974,865,2.12,875,3.657,944,3.702,967,4.114,994,3.702,997,4.114,1114,2.951,1152,4.666,1159,4.301,1211,2.689,1248,2.689,1315,3.72,1359,3.72,1551,2.689,1688,4.616,1784,3.72,1785,1.624,1786,2.1,1787,2.646,1788,6.014,1789,6.014,1790,5.074,1791,5.074,1792,5.074,1793,5.074,1794,5.074,1795,5.074,1796,6.014,1797,6.014,1798,5.074,1799,5.074,1800,5.504,1801,5.504,1802,5.504,1803,5.504,1804,4.666,1805,4.666,1806,5.085,1807,4.388,1808,4.388,1809,4.388,1810,5.346,1811,5.504,1812,5.504,1813,5.504,1814,3.28,1815,3.28,1816,3.28,1817,4.388,1818,4.388]],["title/injectables/TripService.html",[196,0.755,278,1.539]],["body/injectables/TripService.html",[3,0.199,4,0.199,8,0.17,12,0.345,14,0.271,15,0.39,18,0.513,20,0.914,22,0.576,23,1.132,25,1.436,27,0.58,28,1.992,32,0.399,36,0.439,41,0.439,44,0.386,45,0.737,46,0.025,56,0.429,57,0.259,66,0.853,67,0.199,68,0.291,74,2.654,82,0.429,130,1.016,133,0.017,134,0.017,152,0.914,156,0.199,157,0.631,162,0.652,167,0.899,168,0.418,169,0.707,170,1.043,171,1.861,172,2.288,182,1.282,185,1.99,189,0.885,190,2.271,196,1.045,198,1.06,202,1.465,203,1.37,205,0.94,207,1.467,208,1.517,216,1.19,218,3.536,220,3.006,222,3.006,224,3.186,255,0.532,261,0.628,266,4.015,268,4.015,276,4.015,278,2.131,283,1.285,294,2.902,303,1.744,304,2.964,306,3.504,314,1.534,347,3.54,349,0.683,350,0.683,371,2.114,376,2.291,389,2.136,423,2.293,439,3.006,467,1.755,473,1.352,492,2.902,511,1.997,541,1.99,642,3.54,653,1.465,656,1.744,658,2.535,660,2.788,662,2.465,663,3.54,664,3.186,668,2.799,672,2.598,678,3.003,682,1.635,688,2.131,689,3.618,690,1.569,693,3.536,694,2.465,695,2.902,890,4.015,918,2.606,1336,2.902,1596,4.892,1614,3.54,1819,2.956,1820,4.892,1821,4.892,1822,4.736,1823,4.736,1824,4.736,1825,3.486,1826,4.736,1827,4.736,1828,4.736,1829,3.486,1830,4.736,1831,3.486,1832,4.736,1833,3.486,1834,4.736,1835,4.736,1836,3.486,1837,4.736,1838,3.486,1839,4.736,1840,3.486,1841,3.54,1842,3.186,1843,3.486,1844,3.486,1845,3.486,1846,3.486,1847,3.486]],["title/interfaces/User.html",[782,1.925,1785,1.779]],["body/interfaces/User.html",[3,0.262,4,0.262,8,0.224,12,0.262,14,0.273,15,0.262,18,0.498,20,1.293,21,2.384,22,0.534,27,0.785,28,1.582,30,0.689,32,0.366,38,4.307,41,0.636,44,0.392,45,1.057,46,0.025,63,2.808,66,1.153,67,0.262,133,0.02,134,0.02,142,1.683,148,1.248,152,0.884,156,0.262,168,0.403,169,0.693,227,2.384,231,2.062,255,0.635,261,1.206,371,2,511,1.865,512,2.213,516,2.96,539,2.58,543,4.307,591,2.199,683,2.517,701,2.58,702,3.884,754,4.125,763,3.803,767,1.987,782,3.606,843,4.917,865,2.963,1114,3.803,1211,2.808,1248,3.465,1451,4.917,1551,3.758,1688,4.567,1785,2.384,1786,3.082,1806,4.787,1814,4.787,1815,4.584,1816,4.584,1848,3.884,1849,5.654,1850,5.654,1851,5.654,1852,5.654,1853,5.654,1854,5.654]],["title/components/VerificationComponent.html",[0,0.074,123,0.573]],["body/components/VerificationComponent.html",[0,0.117,1,0.594,2,0.862,3,0.202,4,0.202,5,0.684,6,0.684,7,0.684,8,0.173,12,0.31,13,1.171,14,0.291,15,0.402,18,0.465,22,0.522,23,0.974,25,0.989,27,0.712,28,1.653,32,0.332,37,2.154,40,2.696,41,0.444,44,0.357,46,0.025,47,0.684,48,1.272,49,1.272,50,0.976,52,0.924,53,0.594,54,0.924,56,0.465,57,0.264,60,0.862,66,1.046,67,0.202,68,0.296,77,0.684,78,0.924,79,0.684,80,1.121,81,0.684,82,0.432,83,0.684,84,0.594,85,0.684,86,0.594,87,0.684,88,0.594,89,0.684,90,0.594,91,0.684,92,0.924,93,0.594,94,0.594,95,0.684,96,0.684,97,0.594,98,0.684,99,0.594,100,0.684,101,0.684,102,0.974,103,0.684,104,0.594,105,0.684,106,0.594,107,0.684,108,0.594,109,0.684,110,0.924,111,0.594,112,0.638,113,0.684,114,0.594,115,0.684,116,0.594,117,0.684,118,0.594,119,0.684,120,0.684,121,0.974,122,0.684,123,0.974,124,0.684,125,0.594,126,0.924,127,0.552,128,0.684,129,0.594,130,0.511,131,0.684,132,0.684,133,0.017,134,0.017,140,2.492,141,1.128,148,1.057,152,0.684,156,0.202,157,0.638,158,1.047,161,3.141,162,0.64,167,0.746,168,0.381,169,0.587,176,3.579,177,2.696,182,0.924,184,3.648,189,0.638,194,0.638,195,1.203,197,1.011,204,1.653,205,0.904,206,1.011,207,1.128,216,1.46,232,1.763,237,1.997,255,0.538,261,1.046,262,2.73,273,2.139,283,0.989,289,1.882,295,1.551,297,2.492,300,1.278,333,2.934,334,2.696,349,0.691,350,0.691,360,2.383,361,3.22,363,1.653,384,2.383,385,1.011,417,1.711,421,2.131,451,2.648,452,4.059,581,2.696,612,2.934,623,2.313,656,1.763,658,2.627,672,2.806,682,2.245,687,2.492,688,2.154,690,1.594,706,2.492,729,2.696,761,4.48,775,2.934,776,3.907,929,2.44,930,3.323,935,3.22,994,3.22,1151,3.832,1181,4.48,1192,3.22,1242,3.22,1305,2.492,1336,2.934,1490,4.059,1604,3.003,1605,4.342,1607,4.342,1608,3.22,1650,3.003,1842,3.22,1855,3.003,1856,5.512,1857,5.809,1858,4.788,1859,4.788,1860,5.423,1861,5.423,1862,4.788,1863,4.788,1864,3.579,1865,4.788,1866,3.543,1867,4.788,1868,3.543,1869,5.809,1870,4.059,1871,4.059,1872,3.543,1873,3.543,1874,4.788,1875,3.543,1876,3.543,1877,3.543,1878,3.543,1879,3.543,1880,3.543,1881,4.788,1882,4.788,1883,4.788,1884,4.788,1885,4.059,1886,4.788]],["title/injectables/VerificationService.html",[196,0.755,1887,2.556]],["body/injectables/VerificationService.html",[3,0.248,4,0.248,8,0.212,12,0.312,14,0.291,15,0.398,18,0.468,20,1.056,22,0.566,24,2.643,25,1.13,27,0.671,30,0.614,32,0.398,44,0.394,45,0.852,46,0.025,56,0.445,57,0.323,66,1.132,67,0.248,68,0.363,82,0.407,133,0.019,134,0.019,142,1.6,156,0.248,157,0.729,158,0.839,162,0.613,167,0.852,168,0.393,169,0.671,170,1.108,171,2.15,182,1.056,189,0.729,190,2.098,196,1.208,198,1.321,202,1.826,203,1.708,205,0.677,206,1.24,207,1.411,208,1.092,216,1.375,232,2.014,255,0.614,261,1.132,283,1.13,349,0.627,350,0.627,541,2.299,653,1.826,656,2.014,658,2.778,660,2.643,668,3.116,671,2.447,672,3.194,678,2.847,682,1.889,688,2.462,690,1.955,761,4.641,771,4.227,797,3.353,1079,3.353,1179,4.09,1180,4.09,1181,4.567,1182,4.641,1183,4.567,1336,3.353,1445,4.09,1841,4.09,1842,3.68,1870,4.638,1871,4.638,1887,4.09,1888,3.684,1889,5.471,1890,5.471,1891,5.471,1892,5.471,1893,5.471,1894,4.346,1895,5.471,1896,4.346]],["title/components/ViewLoginRegisterComponent.html",[0,0.074,125,0.573]],["body/components/ViewLoginRegisterComponent.html",[0,0.081,1,0.318,2,0.543,3,0.108,4,0.108,5,0.366,6,0.366,7,0.366,8,0.093,12,0.375,13,0.897,14,0.292,15,0.373,16,0.853,18,0.469,20,0.582,22,0.496,23,0.96,24,2.406,25,0.623,27,0.716,28,1.042,30,0.213,32,0.371,36,0.59,41,0.567,44,0.4,46,0.026,47,0.366,48,1.196,49,1.186,50,0.677,52,0.582,53,0.718,54,0.582,56,0.465,57,0.141,58,1.275,60,0.543,66,1.031,67,0.108,68,0.158,72,3.334,77,0.366,78,0.582,79,0.366,80,0.827,81,0.366,82,0.403,83,0.366,84,0.318,85,0.366,86,0.318,87,0.366,88,0.318,89,0.366,90,0.318,91,0.366,92,0.582,93,0.318,94,0.318,95,0.366,96,0.366,97,0.318,98,0.366,99,0.318,100,0.366,101,0.366,102,0.318,103,0.366,104,0.318,105,0.366,106,0.318,107,0.366,108,0.318,109,0.366,110,0.582,111,0.318,112,0.341,113,0.366,114,0.318,115,0.366,116,0.318,117,0.366,118,0.318,119,0.366,120,0.366,121,0.318,122,0.366,123,0.318,124,0.366,125,0.835,126,0.961,127,1.097,128,0.366,129,0.318,130,0.273,131,0.366,132,0.366,133,0.011,134,0.011,141,1.278,142,1.582,148,1.264,152,1.046,156,0.108,157,0.402,158,0.725,159,1.162,160,2.195,161,2.873,162,0.664,164,0.917,165,1.186,166,1.267,167,0.585,168,0.396,169,0.461,170,0.835,173,1.357,175,2.592,176,3.202,182,0.582,185,2.092,188,1.479,189,0.804,192,1.996,194,0.771,195,0.758,197,0.541,199,1.162,204,1.042,205,0.775,206,0.541,207,0.885,208,1.077,216,1.252,232,1.834,237,1.383,239,1.57,242,1.042,244,1.815,246,2.527,249,2.809,251,1.275,255,0.339,261,0.897,262,1.691,273,1.577,274,3.202,285,2.029,287,1.457,289,1.957,290,2.255,291,2.412,295,1.956,297,2.821,299,1.267,300,1.442,303,1.577,306,1.699,307,3.202,314,1.388,320,2.412,334,1.699,346,1.57,349,0.826,350,0.882,356,2.755,364,1.457,367,1.357,371,1.302,385,0.541,386,0.796,393,1.275,397,1.067,399,0.987,402,1.275,417,1.815,421,2.589,422,1.162,457,2.558,467,0.576,468,1.275,472,1.275,473,0.861,478,1.417,511,1.143,516,2.576,525,1.275,572,2.255,576,1.849,581,2.804,591,1.388,604,1.457,622,2.809,676,2.809,678,0.987,683,1.683,684,2.069,688,0.853,690,0.853,691,1.849,700,2.412,709,2.809,718,1.275,724,5.501,729,3.74,743,4.854,747,2.527,754,4.061,767,0.977,775,1.849,776,2.029,782,2.804,805,1.607,843,4.053,865,2.406,875,2.804,900,1.699,929,1.691,931,2.809,1083,3.851,1097,3.631,1103,4.428,1119,0.987,1146,1.067,1151,2.303,1176,3.851,1178,2.558,1179,2.255,1180,2.255,1181,3.851,1182,4.278,1183,3.851,1186,2.558,1188,2.558,1192,2.029,1193,3.513,1196,1.417,1208,2.255,1209,2.029,1214,3.202,1223,2.558,1281,1.417,1306,2.881,1308,2.029,1336,3.052,1337,2.558,1398,1.607,1416,3.349,1418,3.186,1420,3.186,1424,3.186,1426,3.186,1427,4.428,1429,3.186,1437,3.631,1438,3.631,1441,3.631,1443,2.029,1445,2.255,1451,3.495,1462,3.723,1466,4.596,1467,4.222,1468,2.558,1469,2.255,1470,3.723,1471,3.631,1473,2.255,1484,4.596,1516,1.607,1517,2.558,1519,1.607,1520,3.631,1521,2.558,1522,1.607,1523,3.495,1524,1.607,1525,1.607,1527,3.631,1529,2.558,1530,1.607,1531,1.607,1533,1.607,1534,1.607,1535,2.558,1544,2.303,1545,2.303,1546,2.303,1547,2.303,1551,1.849,1577,2.558,1583,4.222,1584,3.631,1585,4.222,1586,2.558,1587,3.202,1588,2.558,1589,2.558,1629,2.255,1631,3.631,1678,3.631,1771,2.558,1864,2.255,1885,2.558,1897,4.877,1898,5.531,1899,1.607,1900,4.98,1901,3.017,1902,3.758,1903,3.758,1904,3.017,1905,3.758,1906,3.758,1907,3.758,1908,3.017,1909,4.283,1910,3.017,1911,1.896,1912,2.558,1913,4.283,1914,1.896,1915,3.017,1916,1.896,1917,3.017,1918,3.017,1919,2.558,1920,1.896,1921,3.017,1922,1.896,1923,3.017,1924,1.896,1925,1.896,1926,3.017,1927,4.283,1928,3.017,1929,1.896,1930,6.038,1931,4.98,1932,4.98,1933,4.283,1934,4.283,1935,1.896,1936,1.896,1937,1.896,1938,3.017,1939,1.896,1940,1.896,1941,1.896,1942,3.017,1943,1.896,1944,1.896,1945,1.896,1946,3.017,1947,3.017,1948,1.896,1949,1.896,1950,3.758,1951,3.758,1952,3.758,1953,3.758,1954,1.896,1955,1.896,1956,1.896,1957,1.896,1958,1.896,1959,3.017,1960,1.896,1961,1.896,1962,1.896,1963,1.896,1964,1.896,1965,1.896,1966,3.017,1967,1.896,1968,3.017,1969,1.896,1970,1.896,1971,1.896,1972,3.758,1973,1.896,1974,1.896,1975,1.896,1976,1.896,1977,1.896,1978,1.896,1979,1.896,1980,1.896,1981,1.896,1982,1.896,1983,1.896,1984,3.186,1985,1.896,1986,1.896,1987,1.896,1988,1.607,1989,1.896,1990,1.896,1991,1.896,1992,1.896,1993,1.896,1994,3.017,1995,1.896,1996,1.896,1997,1.896,1998,3.017,1999,3.017,2000,3.017,2001,3.017,2002,3.017,2003,3.017]],["title/components/ViewTripComponent.html",[0,0.074,129,0.573]],["body/components/ViewTripComponent.html",[0,0.092,1,0.386,2,0.633,3,0.132,4,0.132,5,0.445,6,0.445,7,0.445,8,0.113,12,0.373,13,0.972,14,0.286,15,0.397,18,0.51,22,0.527,23,1.125,24,1.697,27,0.765,30,0.666,32,0.293,36,0.622,37,1.581,41,0.592,44,0.393,46,0.026,47,0.445,48,1.217,49,1.217,50,0.766,52,0.678,53,0.386,54,0.678,56,0.479,57,0.171,60,0.633,64,2.142,66,1.068,67,0.132,68,0.192,74,1.871,76,2.681,77,0.445,78,0.678,79,0.445,80,0.919,81,0.445,82,0.317,83,0.445,84,0.386,85,0.445,86,0.386,87,0.445,88,0.386,89,0.445,90,0.386,91,0.445,92,0.678,93,0.386,94,0.386,95,0.445,96,0.445,97,0.386,98,0.445,99,0.386,100,0.445,101,0.445,102,0.798,103,0.445,104,0.386,105,0.445,106,0.798,107,0.445,108,0.386,109,0.445,110,0.678,111,0.386,112,0.415,113,0.445,114,0.386,115,0.445,116,0.386,117,0.445,118,0.386,119,0.445,120,0.445,121,0.386,122,0.445,123,0.386,124,0.445,125,0.386,126,1.042,127,0.359,128,0.445,129,0.905,130,0.856,131,0.445,132,0.445,133,0.012,134,0.012,140,1.828,141,1.273,142,1.364,148,0.776,152,0.678,156,0.132,157,0.468,158,0.919,160,2.417,162,0.653,164,1.068,165,1.381,166,1.476,167,0.359,168,0.404,169,0.283,170,1.096,173,1.581,175,3.012,182,0.919,184,3.202,185,1.476,188,1.213,189,0.683,192,1.293,194,0.766,195,1.357,197,0.658,198,0.701,199,1.413,204,1.213,205,0.841,207,1.273,208,0.883,218,3.309,220,1.114,237,1.567,239,1.828,242,1.213,244,2.057,251,2.863,255,0.394,261,0.766,273,1.753,277,1.723,278,2.84,283,0.726,289,1.381,295,1.138,300,1.208,304,2.883,314,1.138,326,1.213,327,1.293,328,1.476,334,1.978,344,2.478,349,0.81,350,0.873,356,0.968,363,1.644,364,1.697,367,1.581,371,1.76,386,0.968,387,1.413,389,1.413,395,1.298,397,1.298,399,1.2,402,1.55,417,1.697,418,1.723,421,2.451,423,1.213,467,1.448,473,0.658,474,1.954,480,1.954,511,1.87,512,2.609,519,3.04,520,2.153,521,1.978,528,2.363,529,2.363,533,2.363,534,2.978,536,2.626,541,2.269,560,2.681,569,2.681,576,2.153,589,1.581,590,2.681,591,1.138,623,1.697,624,1.954,646,2.363,647,4.327,656,1.293,662,1.828,682,1.213,684,1.697,704,2.918,706,1.828,717,1.954,767,1.138,847,3.869,856,1.723,862,1.581,873,3.35,883,3.246,900,2.397,909,3.609,944,2.363,967,4.327,968,3.182,987,2.978,993,2.978,1012,1.723,1018,2.363,1020,2.153,1023,2.397,1039,1.954,1079,2.153,1083,4.246,1118,1.723,1119,1.2,1146,1.298,1153,1.2,1196,2.626,1208,3.559,1234,3.406,1257,1.723,1259,2.626,1305,1.828,1308,2.363,1357,2.626,1377,4.198,1383,4.327,1391,1.723,1395,1.723,1410,2.363,1416,3.512,1443,2.363,1469,2.626,1544,3.141,1545,3.141,1546,3.141,1547,3.141,1605,4.037,1607,4.037,1608,2.363,1810,2.978,1856,2.978,1897,4.812,1919,2.978,2004,5.457,2005,1.954,2006,3.513,2007,3.513,2008,3.513,2009,4.257,2010,3.513,2011,4.257,2012,4.257,2013,4.257,2014,4.257,2015,4.257,2016,5.125,2017,4.761,2018,4.761,2019,4.761,2020,3.513,2021,3.513,2022,3.513,2023,2.305,2024,4.257,2025,4.257,2026,3.513,2027,2.305,2028,3.513,2029,5.789,2030,2.305,2031,3.513,2032,4.761,2033,2.305,2034,3.513,2035,5.125,2036,3.513,2037,2.305,2038,3.513,2039,2.305,2040,3.513,2041,4.761,2042,4.761,2043,4.761,2044,3.513,2045,3.513,2046,2.305,2047,2.305,2048,4.761,2049,2.305,2050,3.513,2051,2.305,2052,2.305,2053,2.305,2054,2.305,2055,2.305,2056,2.305,2057,2.305,2058,2.305,2059,2.305,2060,2.305,2061,2.305,2062,2.305,2063,2.305,2064,2.305,2065,3.513,2066,3.513,2067,2.305,2068,2.305,2069,3.513,2070,2.305,2071,2.305,2072,2.305,2073,3.513,2074,4.257,2075,5.125,2076,2.305,2077,2.305,2078,2.305,2079,2.305,2080,2.305,2081,2.305,2082,2.305,2083,2.305,2084,3.513,2085,3.513,2086,3.513,2087,3.513,2088,3.513,2089,3.513,2090,3.513]],["title/interfaces/Yacht.html",[348,1.779,1785,1.779]],["body/interfaces/Yacht.html",[3,0.234,4,0.234,8,0.2,12,0.372,14,0.276,15,0.387,18,0.515,20,1.336,21,2.133,25,1.089,27,0.754,28,1.415,30,0.691,32,0.351,36,0.489,37,2.767,38,3.545,41,0.634,44,0.395,45,1.083,46,0.025,63,2.512,67,0.234,82,0.473,133,0.018,134,0.018,141,1.242,152,0.791,156,0.234,168,0.427,169,0.646,185,2.214,186,3.94,231,1.844,255,0.592,261,1.246,283,1.089,348,3.389,356,2.448,371,1.935,372,3.311,373,3.899,374,4.28,511,1.98,512,1.98,516,2.622,521,3.28,539,2.308,543,4.137,560,4.017,591,2.262,596,1.844,645,5.394,646,3.919,647,4.756,662,2.743,682,1.82,683,2.072,684,2.546,701,2.308,767,1.887,865,2.815,994,3.545,1114,3.545,1211,2.512,1214,3.94,1248,3.23,1265,3.94,1473,3.94,1551,3.57,1688,4.677,1785,2.133,1786,2.757,1804,4.468,1805,4.468,1806,5.016,1814,3.94,1815,4.756,1816,4.355,2091,3.475,2092,5.271,2093,5.271,2094,5.271,2095,5.271,2096,5.271,2097,5.271,2098,5.271,2099,5.271]],["title/injectables/YachtService.html",[196,0.755,279,2.095]],["body/injectables/YachtService.html",[3,0.212,4,0.212,8,0.181,12,0.352,14,0.274,15,0.375,18,0.489,20,0.953,21,2.57,22,0.58,23,1.101,25,1.309,28,1.705,30,0.554,32,0.397,36,0.632,41,0.458,44,0.384,45,0.769,46,0.025,56,0.44,57,0.276,67,0.212,68,0.309,75,3.782,82,0.44,133,0.017,134,0.017,152,0.953,156,0.212,157,0.658,158,1.071,162,0.649,164,1.501,167,0.921,168,0.424,169,0.725,170,1.126,171,1.941,172,2.386,182,1.268,189,0.875,190,2.26,193,2.76,196,1.09,198,1.128,202,1.559,203,1.458,205,0.96,206,1.059,207,1.308,208,1.487,220,3.061,222,3.061,255,0.554,261,0.668,279,3.026,283,1.357,303,1.818,306,2.78,314,1.6,327,1.818,348,3.604,349,0.535,350,0.535,371,2.043,376,2.179,390,2.773,423,2.043,439,3.061,467,1.501,476,3.691,492,3.026,511,1.927,541,2.075,548,4.186,550,5.017,553,4.186,560,3.961,653,1.559,656,2.179,658,2.794,660,3.061,662,2.57,663,3.691,664,3.321,668,2.889,671,2.089,672,3.174,682,1.705,690,1.669,693,3.627,694,2.57,695,3.026,797,3.026,918,2.773,920,3.145,1225,4.186,1305,2.57,1614,3.691,1820,5.372,1821,5.017,1842,4.262,2100,3.145,2101,4.938,2102,4.938,2103,4.938,2104,4.938,2105,3.71,2106,4.938,2107,3.71,2108,4.938,2109,3.71,2110,4.938,2111,3.71,2112,4.938,2113,3.71,2114,3.71]],["title/coverage.html",[2115,3.962]],["body/coverage.html",[0,0.155,1,0.746,8,0.217,9,4.072,10,3.773,11,3.773,46,0.025,53,0.746,84,0.746,86,0.746,88,0.746,90,0.746,93,0.746,94,0.746,97,0.746,99,0.746,102,0.746,104,0.746,106,0.746,108,0.746,111,0.746,114,0.746,116,0.746,118,0.746,121,0.746,123,0.746,125,0.746,127,0.865,129,0.746,130,0.642,133,0.019,134,0.019,135,2.994,136,3.327,138,3.773,139,3.773,160,1.749,168,0.292,196,1.519,213,3.773,214,3.773,278,2.003,279,2.727,348,2.316,367,2.003,473,1.27,537,3.773,538,3.773,652,3.327,654,3.773,655,3.773,697,3.773,723,3.773,782,2.506,844,3.773,845,3.327,846,3.773,883,2.316,884,3.773,925,3.773,951,3.773,952,3.327,953,3.773,959,3.773,960,3.327,961,3.773,1062,3.773,1176,2.994,1177,3.773,1199,3.773,1206,3.773,1224,3.773,1234,2.506,1267,4.879,1303,3.773,1328,3.773,1329,3.773,1330,4.151,1349,3.773,1350,3.327,1351,3.773,1413,3.773,1591,3.773,1592,3.773,1685,3.773,1698,5.64,1703,3.773,1742,3.773,1763,2.994,1764,3.773,1785,3.15,1787,3.773,1819,3.773,1848,3.773,1855,3.773,1887,3.327,1888,3.773,1897,4.151,1898,3.773,1899,3.773,2004,3.773,2005,3.773,2091,3.773,2100,3.773,2115,3.773,2116,4.451,2117,4.451,2118,4.451,2119,4.708,2120,3.773,2121,6.748,2122,3.773,2123,4.708,2124,3.773,2125,3.773,2126,6.053,2127,3.773,2128,3.773,2129,4.451,2130,4.451,2131,4.451,2132,4.451,2133,6.523,2134,4.451,2135,4.451,2136,5.553,2137,4.451,2138,4.451,2139,4.451,2140,5.553,2141,6.652,2142,4.451,2143,6.053,2144,3.773,2145,3.773,2146,4.451,2147,5.553,2148,4.451,2149,4.451,2150,4.451,2151,4.451,2152,4.451]],["title/dependencies.html",[2153,2.418,2154,3.488]],["body/dependencies.html",[46,0.025,57,0.401,133,0.022,134,0.022,197,1.54,198,1.64,230,3.037,385,1.54,386,2.266,1724,4.573,2154,4.573,2155,7.057,2156,5.394,2157,6.233,2158,6.233,2159,5.394,2160,5.394,2161,5.394,2162,5.394,2163,5.394,2164,5.394,2165,5.394,2166,5.394,2167,5.394,2168,5.394,2169,5.394,2170,5.394,2171,5.394]],["title/index.html",[156,0.163,1556,2.418,2172,2.852]],["body/index.html",[0,0.094,13,0.782,14,0.289,15,0.378,17,3.371,18,0.407,19,2.923,20,0.839,22,0.524,23,1.004,24,2.099,25,1.338,27,0.81,29,2.663,30,0.488,32,0.312,36,0.507,41,0.613,44,0.378,45,1.009,46,0.025,49,0.782,60,0.782,74,2.15,133,0.019,134,0.019,145,2.447,148,1.208,165,1.708,177,2.447,194,0.782,195,1.092,216,1.092,219,3.036,229,3.249,283,0.898,293,2.923,295,1.408,314,1.94,333,2.663,372,2.262,431,3.249,467,1.321,512,2.099,540,3.684,541,2.299,591,1.408,604,2.643,658,1.826,660,2.893,661,5.076,683,1.708,686,3.441,687,2.262,688,2.914,698,3.684,699,1.955,700,2.447,701,2.447,711,3.684,713,4.357,714,4.09,774,3.684,873,2.262,945,3.249,1054,3.249,1105,3.249,1153,2.262,1356,3.249,1358,3.684,1410,2.923,1587,3.249,1738,3.684,2173,4.346,2174,4.346,2175,5.471,2176,4.346,2177,4.346,2178,4.346,2179,4.346,2180,5.471,2181,4.346,2182,4.346,2183,4.346,2184,4.346,2185,4.346,2186,4.346,2187,4.346,2188,4.346,2189,4.346,2190,4.346,2191,5.471,2192,5.471,2193,4.346,2194,4.346,2195,5.471,2196,4.346,2197,5.471,2198,4.346,2199,4.346,2200,4.346,2201,4.346,2202,4.346,2203,4.346,2204,4.346,2205,4.346,2206,4.346,2207,4.346,2208,4.346,2209,4.346,2210,4.638,2211,4.346,2212,3.684,2213,5.988,2214,4.346,2215,5.471,2216,5.471,2217,4.346,2218,5.471,2219,4.346,2220,4.346,2221,4.346,2222,4.346,2223,4.346,2224,4.346,2225,4.346,2226,4.346,2227,4.346,2228,4.346,2229,4.346,2230,4.346,2231,4.346,2232,4.346,2233,3.684,2234,4.346,2235,4.346,2236,4.346,2237,4.346,2238,4.346,2239,4.346,2240,4.346,2241,4.346,2242,4.346,2243,4.346,2244,4.346,2245,4.346,2246,4.346,2247,4.346,2248,4.346,2249,4.346,2250,4.346,2251,4.346,2252,4.346,2253,4.346]],["title/modules.html",[2254,3.962]],["body/modules.html",[46,0.022,133,0.022,134,0.022,2254,4.782]],["title/overview.html",[2255,3.962]],["body/overview.html",[2,1.008,46,0.022,133,0.022,134,0.022,135,3.765,512,2.704,653,2.352,1142,4.746,1523,4.185,1786,3.765,2255,4.746,2256,5.598]],["title/properties.html",[255,0.462,2153,2.418]],["body/properties.html",[46,0.023,133,0.022,134,0.022,255,0.632,2257,5.625,2258,5.625]],["title/miscellaneous/variables.html",[2259,2.418,2260,3.488]],["body/miscellaneous/variables.html",[14,0.284,15,0.384,18,0.35,20,0.833,22,0.36,23,0.723,25,0.629,27,0.614,28,0.663,30,0.562,32,0.246,36,0.464,40,1.081,41,0.52,44,0.358,45,0.299,46,0.025,48,0.346,64,0.864,66,0.682,69,1.628,112,0.682,127,0.59,133,0.011,134,0.011,141,1.283,142,0.452,143,1.291,145,1.716,148,0.836,150,1.291,152,0.967,156,0.11,160,0.755,161,1.472,165,0.755,166,0.807,168,0.249,170,0.839,173,2.639,177,2.429,194,0.549,195,0.952,208,1.259,216,1.259,219,2.536,224,1.291,230,2.429,232,0.707,239,0.999,262,1.371,283,0.972,293,2.05,295,0.987,312,1.628,320,1.081,326,2.025,349,0.757,350,0.722,354,3.337,363,1.308,364,1.472,367,3.106,376,0.707,405,1.628,406,2.05,408,2.832,417,1.472,421,1.198,440,3.225,467,0.927,473,0.87,477,1.177,494,1.291,590,1.081,591,0.622,604,0.927,612,2.322,620,2.583,623,1.472,657,1.867,658,1.812,683,1.695,686,2.448,694,1.972,704,1.867,706,1.586,707,1.628,725,1.435,727,2.278,729,2.955,747,2.549,761,4.014,765,1.628,771,2.05,775,1.867,786,2.278,826,1.628,827,1.628,865,0.927,963,1.435,996,1.291,999,1.435,1021,1.291,1044,1.628,1050,3.212,1051,2.278,1057,1.628,1079,3.657,1153,1.586,1165,1.435,1166,1.628,1192,1.291,1193,1.291,1211,1.867,1227,1.628,1234,1.081,1237,1.628,1239,1.435,1240,1.628,1243,1.435,1263,5.404,1264,5.8,1265,4.955,1267,4.458,1283,1.628,1290,4.617,1291,5.135,1292,1.628,1293,4.617,1296,2.278,1300,1.628,1308,1.291,1309,1.628,1381,1.435,1386,1.435,1416,1.716,1460,2.583,1462,1.435,1470,2.278,1477,1.628,1548,2.583,1549,5.619,1608,1.291,1629,1.435,1630,1.628,1632,5.619,1681,3.212,1721,2.583,1745,3.212,1763,1.291,1841,2.278,1864,1.435,1912,1.628,1984,1.628,1988,1.628,2119,1.628,2120,3.212,2122,2.583,2123,1.628,2124,3.657,2125,3.212,2127,1.628,2128,3.212,2144,1.628,2145,3.657,2210,2.583,2212,2.583,2233,3.657,2259,1.628,2260,1.628,2261,1.92,2262,3.047,2263,1.92,2264,3.047,2265,1.92,2266,3.047,2267,3.047,2268,1.92,2269,1.92,2270,1.92,2271,1.92,2272,1.92,2273,1.92,2274,1.92,2275,3.047,2276,3.789,2277,1.92,2278,1.92,2279,1.92,2280,3.047,2281,1.92,2282,1.92,2283,3.047,2284,1.92,2285,1.92,2286,1.92,2287,1.92,2288,1.92,2289,4.705,2290,1.92,2291,1.92,2292,1.92,2293,1.92,2294,1.92,2295,1.92,2296,1.92,2297,1.92,2298,1.92,2299,3.047,2300,3.047,2301,1.92,2302,1.92,2303,1.92,2304,1.92,2305,1.92,2306,1.92,2307,1.92,2308,3.047,2309,4.705,2310,1.92,2311,1.92,2312,1.92,2313,1.92,2314,1.92,2315,3.789,2316,3.789,2317,3.789,2318,3.047,2319,1.92,2320,1.92,2321,3.047,2322,1.92,2323,1.92,2324,1.92,2325,3.047,2326,1.92,2327,1.92,2328,1.92,2329,1.92,2330,1.92,2331,1.92,2332,1.92,2333,1.92,2334,1.92,2335,1.92,2336,1.92,2337,1.92,2338,1.92,2339,3.047,2340,1.92,2341,1.92,2342,1.92,2343,1.92,2344,1.92,2345,1.92,2346,5.008,2347,1.92,2348,1.92,2349,3.047,2350,3.047,2351,1.92,2352,1.92,2353,5.446,2354,1.92,2355,3.047,2356,5.249,2357,4.705,2358,3.047,2359,3.047,2360,1.92,2361,1.92,2362,1.92,2363,1.92,2364,1.92,2365,6.628,2366,1.92,2367,6.628,2368,1.92,2369,1.92,2370,1.92,2371,6.679,2372,1.92,2373,6.628,2374,1.92,2375,6.628,2376,1.92,2377,6.628,2378,1.92,2379,6.628,2380,1.92,2381,1.92,2382,1.92,2383,1.92,2384,1.92,2385,1.92,2386,1.92,2387,1.92,2388,1.92,2389,1.92,2390,1.92,2391,1.92,2392,1.92,2393,1.92,2394,1.92,2395,1.92,2396,1.92,2397,1.92,2398,1.92,2399,1.92,2400,1.92,2401,1.92,2402,1.92,2403,1.92,2404,1.92,2405,1.92,2406,1.92,2407,1.92,2408,1.92,2409,1.92,2410,1.92,2411,1.92,2412,1.92,2413,1.92,2414,1.92,2415,1.92,2416,1.92,2417,1.92,2418,1.92,2419,1.92,2420,1.92,2421,1.92,2422,1.92,2423,1.92,2424,1.92,2425,1.92,2426,1.92,2427,1.92,2428,1.92,2429,1.92,2430,1.92,2431,1.92,2432,1.92,2433,1.92,2434,1.92,2435,1.92,2436,1.92,2437,1.92,2438,1.92,2439,1.92,2440,1.92,2441,1.92,2442,1.92,2443,1.92,2444,1.92,2445,1.92,2446,1.92,2447,1.92,2448,1.92,2449,1.92,2450,1.92,2451,1.92,2452,1.92,2453,1.92,2454,1.92,2455,1.92,2456,1.92,2457,1.92,2458,1.92,2459,1.92,2460,1.92,2461,1.92,2462,1.92,2463,1.92,2464,1.92,2465,1.92,2466,1.92,2467,1.92,2468,1.92,2469,1.92,2470,1.92,2471,1.92,2472,1.92,2473,1.92,2474,1.92,2475,1.92,2476,1.92,2477,1.92,2478,1.92,2479,1.92,2480,1.92,2481,1.92,2482,1.92,2483,1.92,2484,1.92,2485,1.92,2486,1.92,2487,1.92,2488,1.92,2489,1.92,2490,1.92,2491,1.92,2492,1.92,2493,1.92,2494,1.92,2495,1.92,2496,1.92,2497,1.92,2498,1.92,2499,1.92,2500,1.92,2501,1.92,2502,1.92,2503,1.92,2504,1.92,2505,1.92,2506,1.92,2507,1.92,2508,1.92,2509,1.92,2510,1.92,2511,1.92,2512,1.92,2513,1.92,2514,1.92,2515,1.92,2516,1.92,2517,1.92,2518,1.92,2519,1.92,2520,1.92,2521,1.92,2522,1.92,2523,1.92,2524,1.92,2525,1.92,2526,1.92,2527,1.92,2528,1.92,2529,1.92,2530,1.92,2531,1.92,2532,1.92,2533,1.92,2534,1.92,2535,1.92,2536,1.92,2537,1.92,2538,1.92,2539,1.92,2540,1.92,2541,1.92,2542,1.92,2543,1.92,2544,1.92,2545,1.92,2546,1.92,2547,1.92,2548,1.92,2549,1.92,2550,1.92,2551,1.92,2552,1.92,2553,1.92,2554,1.92,2555,1.92,2556,1.92,2557,1.92,2558,1.92,2559,1.92,2560,1.92,2561,1.92,2562,1.92,2563,1.92,2564,1.92,2565,1.92,2566,1.92,2567,1.92,2568,1.92,2569,1.92,2570,1.92,2571,1.92,2572,1.92,2573,1.92,2574,1.92,2575,1.92,2576,1.92,2577,1.92,2578,1.92,2579,1.92,2580,1.92,2581,1.92,2582,1.92,2583,1.92,2584,1.92,2585,1.92,2586,1.92,2587,1.92,2588,1.92,2589,1.92,2590,1.92,2591,1.92,2592,1.92,2593,1.92,2594,1.92,2595,1.92,2596,1.92,2597,1.92,2598,3.789,2599,3.047,2600,3.047,2601,3.047,2602,3.047,2603,3.047,2604,3.047,2605,3.047,2606,3.047,2607,3.047,2608,3.047,2609,1.92,2610,1.92,2611,1.92,2612,1.92,2613,1.92,2614,1.92,2615,1.92,2616,1.92,2617,1.92,2618,1.92,2619,1.92,2620,1.92,2621,1.92,2622,1.92,2623,1.92,2624,1.92,2625,1.92,2626,1.92,2627,1.92,2628,1.92,2629,1.92,2630,1.92,2631,1.92,2632,1.92,2633,3.789,2634,1.92,2635,3.047,2636,5.008,2637,1.92,2638,4.314,2639,1.92,2640,1.92,2641,1.92,2642,1.92,2643,3.047,2644,3.047,2645,3.047,2646,3.047,2647,3.047,2648,3.047,2649,3.047,2650,3.047,2651,3.047,2652,3.047,2653,3.047,2654,3.789,2655,3.789,2656,5.008,2657,3.789,2658,5.249,2659,3.047,2660,3.789,2661,3.047,2662,1.92,2663,1.92,2664,4.314,2665,5.249,2666,1.92,2667,4.314,2668,5.609,2669,4.705,2670,3.789,2671,3.047,2672,3.789,2673,3.047,2674,3.789,2675,1.92,2676,4.314,2677,3.789,2678,3.789,2679,3.789,2680,3.789,2681,3.789,2682,5.446,2683,3.789,2684,1.92,2685,1.92,2686,1.92,2687,1.92,2688,1.92,2689,1.92,2690,3.047,2691,3.789,2692,1.92,2693,3.047,2694,5.008,2695,3.047,2696,5.446,2697,3.047,2698,3.047,2699,1.92,2700,5.008,2701,1.92,2702,5.968,2703,1.92,2704,1.92,2705,5.446,2706,5.446,2707,3.047,2708,3.047,2709,3.789,2710,3.047,2711,3.047,2712,5.747,2713,3.047,2714,3.047,2715,6.268,2716,3.047,2717,3.047,2718,3.047,2719,5.249,2720,3.047,2721,6.136,2722,3.047,2723,3.047,2724,1.92,2725,3.047,2726,3.047,2727,3.047,2728,3.047,2729,3.047,2730,3.047,2731,4.314,2732,3.047,2733,3.047,2734,3.047,2735,5.446,2736,3.047,2737,3.047,2738,3.047,2739,3.047,2740,3.789,2741,5.968,2742,5.446,2743,3.047,2744,3.047,2745,3.047,2746,3.047,2747,3.047,2748,3.047,2749,3.047,2750,3.047,2751,4.314,2752,3.047,2753,1.92,2754,3.789,2755,4.705,2756,1.92,2757,1.92,2758,3.047,2759,3.047,2760,1.92,2761,1.92,2762,3.047,2763,1.92,2764,1.92,2765,1.92,2766,1.92,2767,1.92,2768,1.92,2769,1.92,2770,1.92,2771,1.92,2772,1.92,2773,1.92,2774,1.92,2775,1.92]]],"invertedIndex":[["",{"_index":46,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":367,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2258,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.15.0",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.25",{"_index":2068,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["0.25rem",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.2s",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.3",{"_index":1148,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["0.375rem",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5rem",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.6",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.625rem",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":1294,"title":{},"body":{"components/LoadingComponent.html":{}}}],["0.75rem",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.875rem",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["0000",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01t08:00:00",{"_index":1798,"title":{},"body":{"interfaces/Trip.html":{}}}],["01t20:00:00",{"_index":1799,"title":{},"body":{"interfaces/Trip.html":{}}}],["020617",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["022c22",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0284c7",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["030712",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0369a1",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["042f2e",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["047857",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["052e16",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["059669",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06",{"_index":1797,"title":{},"body":{"interfaces/Trip.html":{}}}],["064e3b",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["065f46",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06b6d4",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07222d",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["075985",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["082f49",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["083344",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0891b2",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09090b",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0a0a0a",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0b3648",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0c0a09",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0c4a6e",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0d9488",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0e7490",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0ea5e9",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0f172a",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0f4a64",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0f766e",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":512,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"index.html":{},"overview.html":{}}}],["1).subscribe",{"_index":1170,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["1.125rem",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.25rem",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":2121,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1267,"title":{},"body":{"components/LoadingComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1023,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/ViewTripComponent.html":{}}}],["102f41",{"_index":1268,"title":{},"body":{"components/LoadingComponent.html":{}}}],["10b981",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":1292,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["111827",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["115e59",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1792,"title":{},"body":{"interfaces/Trip.html":{}}}],["12/12",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":2043,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["12px",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13/13",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["134e4a",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14532d",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["145f7f",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14b8a6",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1584,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["15/15",{"_index":2139,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":2045,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["1500",{"_index":1159,"title":{},"body":{"components/CheckoutComponent.html":{},"interfaces/Trip.html":{}}}],["150px",{"_index":1297,"title":{},"body":{"components/LoadingComponent.html":{}}}],["155e75",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15803d",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1134,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["16/16",{"_index":2132,"title":{},"body":{"coverage.html":{}}}],["164e63",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["166534",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16a34a",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["171717",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["172554",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1470,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["18/18",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["18181b",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18739a",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.0.5",{"_index":2161,"title":{},"body":{"dependencies.html":{}}}],["19.0.6",{"_index":2166,"title":{},"body":{"dependencies.html":{}}}],["19.1.0",{"_index":2155,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":2131,"title":{},"body":{"coverage.html":{}}}],["19/22",{"_index":2138,"title":{},"body":{"coverage.html":{}}}],["1a2e05",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1c1917",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1c87b5",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1d4ed8",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1e1b4b",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1e293b",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1e3a8a",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1e40af",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1f2937",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1px",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1rem",{"_index":1745,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":1042,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["2).touppercase",{"_index":1540,"title":{},"body":{"components/ProfileComponent.html":{}}}],["2.3.0",{"_index":2169,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2000",{"_index":1164,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["2023",{"_index":2093,"title":{},"body":{"interfaces/Yacht.html":{}}}],["2025",{"_index":1796,"title":{},"body":{"interfaces/Trip.html":{}}}],["20px",{"_index":1300,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["22",{"_index":2256,"title":{},"body":{"overview.html":{}}}],["22/23",{"_index":2130,"title":{},"body":{"coverage.html":{}}}],["22c55e",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22d3ee",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2035,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["25/28",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":1630,"title":{},"body":{"components/SearchPageComponent.html":{},"miscellaneous/variables.html":{}}}],["2563eb",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25px",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["262626",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27272a",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["292524",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2])\\/\\d{2",{"_index":1129,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["2dd4bf",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e1065",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":1291,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":1142,"title":{},"body":{"components/CheckoutComponent.html":{},"overview.html":{}}}],["3/3",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1152,"title":{},"body":{"components/CheckoutComponent.html":{},"interfaces/Trip.html":{}}}],["300",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["312e81",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["334155",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34d399",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3500",{"_index":1803,"title":{},"body":{"interfaces/Trip.html":{}}}],["365314",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3730a3",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["374151",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["375f75",{"_index":1266,"title":{},"body":{"components/LoadingComponent.html":{}}}],["38bdf8",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b0764",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b82f6",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f3f46",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3f6212",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1054,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"index.html":{}}}],["4.0.0",{"_index":2163,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1549,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["401",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["403",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404040",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["422006",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["431407",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4338ca",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44403c",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["450a0a",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["451a03",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["475569",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["479ec3",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a044e",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4ade80",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4b5563",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c0519",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c1d95",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4d7c0f",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4f46e5",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5/5",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1265,"title":{},"body":{"components/LoadingComponent.html":{},"interfaces/Yacht.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1632,"title":{},"body":{"components/SearchPageComponent.html":{},"miscellaneous/variables.html":{}}}],["500724",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["525252",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52525b",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57534e",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["581c87",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5b21b6",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5eead4",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5s",{"_index":1286,"title":{},"body":{"components/LoadingComponent.html":{}}}],["60",{"_index":2041,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["600",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60a5fa",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6366f1",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64748b",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65a30d",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["67e8f9",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6b21a8",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6b7280",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6d28d9",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6ee7b7",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6px",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":2165,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2167,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1150,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["700",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["701a75",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["713f12",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71717a",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["72b5d1",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["737373",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":2761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["78350f",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["78716c",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7c2d12",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7c3aed",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7dd3fc",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7e22ce",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7f1d1d",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1678,"title":{},"body":{"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["8/8",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2090,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["800",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["818cf8",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["831843",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84cc16",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["854d0e",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["8601",{"_index":1813,"title":{},"body":{"interfaces/Trip.html":{}}}],["86198f",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86efac",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["881337",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["8b5cf6",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8px",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1523,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"overview.html":{}}}],["9._",{"_index":1522,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["9/9",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1749,"title":{},"body":{"components/ToastComponent.html":{}}}],["900",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92400e",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9333ea",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93c5fd",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94a3b8",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["950",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["991b1b",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99f6e4",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{8}[a",{"_index":1963,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["9]{9,15",{"_index":1516,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["9]|1[0",{"_index":1128,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["9a3412",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9ca3af",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9d174d",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9dcbdf",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9f1239",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a16207",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a1a1aa",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a21caf",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a3a3a3",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a3e635",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a5b4fc",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a5f3fc",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a78bfa",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a7f3d0",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a855f7",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a8a29e",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abierto/cerrado",{"_index":1715,"title":{},"body":{"components/SidebarComponent.html":{}}}],["abre",{"_index":1358,"title":{},"body":{"components/ModalFilterComponent.html":{},"index.html":{}}}],["acc",{"_index":1039,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/ViewTripComponent.html":{}}}],["acceder",{"_index":147,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["accept",{"_index":444,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["acceso",{"_index":1608,"title":{},"body":{"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["acciones",{"_index":648,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["acción",{"_index":285,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/BookingCardComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["actions",{"_index":527,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["activa",{"_index":1308,"title":{},"body":{"injectables/LoadingService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["activa/desactiva",{"_index":1253,"title":{},"body":{"components/LoadingComponent.html":{}}}],["activar",{"_index":1239,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":1605,"title":{},"body":{"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{}}}],["activatedroutesnapshot",{"_index":179,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["activebackground",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activecolor",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activeform",{"_index":1905,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["actual",{"_index":590,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"injectables/LoadingService.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":132,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["actualiza",{"_index":346,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["actualizaciones",{"_index":1321,"title":{},"body":{"injectables/LoadingService.html":{}}}],["actualización",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{}}}],["actualizado",{"_index":492,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["actualizados",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizando",{"_index":1173,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["actualizar",{"_index":439,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["addmessage",{"_index":1752,"title":{},"body":{"components/ToastComponent.html":{}}}],["addmessage(severity",{"_index":1756,"title":{},"body":{"components/ToastComponent.html":{}}}],["address",{"_index":1952,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["además",{"_index":224,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"miscellaneous/variables.html":{}}}],["adicional",{"_index":1214,"title":{},"body":{"components/HomeComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{}}}],["adicionales",{"_index":2088,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["admin",{"_index":50,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["adminhomepagecomponent",{"_index":1,"title":{"components/AdminHomepageComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["administración",{"_index":215,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/SidebarComponent.html":{}}}],["administrador",{"_index":19,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["administradores",{"_index":217,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["administrar",{"_index":73,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["adminroleguard",{"_index":136,"title":{"guards/AdminRoleGuard.html":{}},"body":{"guards/AdminRoleGuard.html":{},"coverage.html":{}}}],["admintripscomponent",{"_index":84,"title":{"components/AdminTripsComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["adminyachtscomponent",{"_index":86,"title":{"components/AdminYachtsComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["advertencia",{"_index":1770,"title":{},"body":{"injectables/ToastService.html":{}}}],["afterviewinit",{"_index":238,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["age",{"_index":1529,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["agrega",{"_index":1758,"title":{},"body":{"components/ToastComponent.html":{}}}],["aguas",{"_index":1794,"title":{},"body":{"interfaces/Trip.html":{}}}],["ahora",{"_index":1882,"title":{},"body":{"components/VerificationComponent.html":{}}}],["ajusta",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":66,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchbarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["alerta",{"_index":588,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["align",{"_index":1279,"title":{},"body":{"components/LoadingComponent.html":{}}}],["alltrips",{"_index":1596,"title":{},"body":{"components/SearchPageComponent.html":{},"injectables/TripService.html":{}}}],["almacena",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{},"components/SearchbarComponent.html":{}}}],["almacenado",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["almacenamiento",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["almacenar",{"_index":377,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["alojada",{"_index":2176,"title":{},"body":{"index.html":{}}}],["alterna",{"_index":1001,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/SidebarComponent.html":{}}}],["altura",{"_index":578,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["amber",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anchorgutter",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":604,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular.json",{"_index":2247,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1724,"title":{},"body":{"components/SidebarComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":385,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":690,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"injectables/YachtService.html":{}}}],["angular/compiler",{"_index":2156,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":57,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":386,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2157,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":197,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"dependencies.html":{}}}],["animaciones",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animación",{"_index":1857,"title":{},"body":{"components/VerificationComponent.html":{}}}],["animate",{"_index":1723,"title":{},"body":{"components/SidebarComponent.html":{}}}],["animate('300ms",{"_index":1730,"title":{},"body":{"components/SidebarComponent.html":{}}}],["animation",{"_index":1285,"title":{},"body":{"components/LoadingComponent.html":{}}}],["animations",{"_index":1725,"title":{},"body":{"components/SidebarComponent.html":{}}}],["anterior",{"_index":1488,"title":{},"body":{"components/ProfileComponent.html":{}}}],["antes",{"_index":145,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["antigua",{"_index":1590,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apellidos",{"_index":1577,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["apertura",{"_index":1719,"title":{},"body":{"components/SidebarComponent.html":{}}}],["api",{"_index":660,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{},"index.html":{}}}],["apiservice",{"_index":652,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["apiurl",{"_index":668,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["aplica",{"_index":1386,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"miscellaneous/variables.html":{}}}],["aplicación",{"_index":219,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["aplicados",{"_index":1620,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["aplican",{"_index":1381,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"miscellaneous/variables.html":{}}}],["aplicar",{"_index":1360,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["app",{"_index":49,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":711,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.component.ts",{"_index":2236,"title":{},"body":{"index.html":{}}}],["app.config.ts",{"_index":2237,"title":{},"body":{"index.html":{}}}],["app.routes.ts",{"_index":2238,"title":{},"body":{"index.html":{}}}],["app/model/trip",{"_index":941,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["app/services/auth.service",{"_index":1008,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/SidebarComponent.html":{}}}],["app/services/booking.service",{"_index":1009,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["app/services/loading.service",{"_index":1247,"title":{},"body":{"components/LoadingComponent.html":{}}}],["app/services/trip.service",{"_index":1010,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["appcomponent",{"_index":88,"title":{"components/AppComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2128,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":695,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["applicationconfig",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyfilters",{"_index":1368,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["archivo",{"_index":2215,"title":{},"body":{"index.html":{}}}],["array",{"_index":1614,"title":{},"body":{"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["array.from(modelsset",{"_index":1659,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["asegura",{"_index":1926,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["asegurarse",{"_index":1479,"title":{},"body":{"components/ProfileComponent.html":{}}}],["asegúrate",{"_index":2192,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":1248,"title":{},"body":{"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["asociada",{"_index":65,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AppComponent.html":{}}}],["asociado",{"_index":997,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/Trip.html":{}}}],["asyncpipe",{"_index":1230,"title":{},"body":{"components/LoadingComponent.html":{},"components/SidebarComponent.html":{}}}],["asíncrona",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asíncronas",{"_index":1227,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["autenticación",{"_index":173,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["autenticado",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{}}}],["autenticar",{"_index":1853,"title":{},"body":{"interfaces/User.html":{}}}],["authinterceptor",{"_index":2120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":826,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authreq",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":160,"title":{"injectables/AuthService.html":{}},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice.gettoken",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.logout",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authstatus",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["auto",{"_index":1747,"title":{},"body":{"components/ToastComponent.html":{}}}],["autores",{"_index":2250,"title":{},"body":{"index.html":{}}}],["autónomo",{"_index":404,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["available",{"_index":839,"title":{},"body":{"injectables/AuthService.html":{}}}],["avatar",{"_index":1448,"title":{},"body":{"components/ProfileComponent.html":{}}}],["avatars.com/api/?name=${initials}&background=0d8abc&color=fff",{"_index":1541,"title":{},"body":{"components/ProfileComponent.html":{}}}],["avatars.com/api/?name=xx&background=0d8abc&color=fff",{"_index":1537,"title":{},"body":{"components/ProfileComponent.html":{}}}],["añadido",{"_index":2084,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["años",{"_index":1471,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["b",{"_index":502,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["b45309",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b91c1c",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":688,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"index.html":{}}}],["backendurl",{"_index":1860,"title":{},"body":{"components/VerificationComponent.html":{}}}],["background",{"_index":1263,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["backgroundfill",{"_index":1262,"title":{},"body":{"components/LoadingComponent.html":{}}}],["bae6fd",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barco",{"_index":1410,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{}}}],["barra",{"_index":33,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/HeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["basada",{"_index":353,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/SidebarComponent.html":{}}}],["basado",{"_index":2031,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["basados",{"_index":1593,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["base",{"_index":541,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"index.html":{}}}],["baseprice",{"_index":2011,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["bbf7d0",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["be123c",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["be185d",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bef264",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject(false",{"_index":1322,"title":{},"body":{"injectables/LoadingService.html":{}}}],["behaviorsubject(null",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.currentuserid).asobservable",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.hastoken",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["bfdbfe",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bg",{"_index":1049,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["bienvenido",{"_index":1998,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["birthdate",{"_index":1527,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["birthdate.getdate",{"_index":1971,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["birthdate.getfullyear",{"_index":1531,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["birthdate.getmonth",{"_index":1534,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["birthdatevalid",{"_index":1420,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["blue",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":841,"title":{},"body":{"injectables/AuthService.html":{}}}],["booking",{"_index":91,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["booking.trip_id",{"_index":1575,"title":{},"body":{"components/ProfileComponent.html":{}}}],["booking_date",{"_index":2081,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["bookingcardcomponent",{"_index":90,"title":{"components/BookingCardComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["bookingid",{"_index":914,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingservice",{"_index":883,"title":{"injectables/BookingService.html":{}},"body":{"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["booktrip",{"_index":2017,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["boolean",{"_index":192,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["booleano",{"_index":1307,"title":{},"body":{"injectables/LoadingService.html":{},"components/SearchPageComponent.html":{}}}],["border.radius.md",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border.radius.sm",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border.radius.xl",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bordercolor",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["borderradius",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["borra",{"_index":319,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["borrado",{"_index":498,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["borrar",{"_index":493,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/SearchPageComponent.html":{}}}],["botones",{"_index":611,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["break",{"_index":453,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["breeze",{"_index":1801,"title":{},"body":{"interfaces/Trip.html":{}}}],["breve",{"_index":1783,"title":{},"body":{"injectables/ToastService.html":{}}}],["brindar",{"_index":1743,"title":{},"body":{"components/ToastComponent.html":{}}}],["browser",{"_index":2158,"title":{},"body":{"dependencies.html":{}}}],["buscar",{"_index":1221,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{}}}],["busqueda",{"_index":1676,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["button",{"_index":249,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["buttonmodule",{"_index":968,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/ProfileComponent.html":{},"components/ViewTripComponent.html":{}}}],["básica",{"_index":702,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{}}}],["búsqueda",{"_index":151,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{}}}],["búsquedas",{"_index":1687,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["c026d3",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c084fc",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c2410c",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c4b5fd",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c7d2fe",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c9e2ed",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ca8a04",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cada",{"_index":996,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["cadena",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/User.html":{}}}],["caducado",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calcula",{"_index":993,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/ViewTripComponent.html":{}}}],["calculado",{"_index":2050,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["calcular",{"_index":966,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["calculatetotal",{"_index":2018,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["cambia",{"_index":691,"title":{},"body":{"injectables/ApiService.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["cambiada",{"_index":685,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/ProfileComponent.html":{}}}],["cambiando",{"_index":1566,"title":{},"body":{"components/ProfileComponent.html":{}}}],["cambiar",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["cambio",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{}}}],["cambios",{"_index":1460,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":1688,"title":{},"body":{"components/SearchbarComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["campos",{"_index":307,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["canactivate",{"_index":153,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["canactivate(route",{"_index":178,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["cancelado",{"_index":916,"title":{},"body":{"injectables/BookingService.html":{}}}],["cancelled",{"_index":456,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["capacidad",{"_index":647,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{}}}],["capacity",{"_index":374,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"interfaces/Trip.html":{},"interfaces/Yacht.html":{}}}],["capturar",{"_index":1109,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["caracteres",{"_index":1851,"title":{},"body":{"interfaces/User.html":{}}}],["card",{"_index":95,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["card'},{'name",{"_index":92,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["card.component",{"_index":1117,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["card.component.html",{"_index":853,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{}}}],["card.component.ts",{"_index":846,"title":{},"body":{"components/BookingCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:23",{"_index":859,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["card.component.ts:28",{"_index":864,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["card.component.ts:33",{"_index":866,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["card/booking",{"_index":845,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CheckoutComponent.html":{},"coverage.html":{}}}],["cardcomponent",{"_index":93,"title":{"components/CardComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["carddetailscomponent",{"_index":94,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["cardnumber",{"_index":1122,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cardowner",{"_index":1131,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["carga",{"_index":326,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["cargando",{"_index":323,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckTicketsComponent.html":{},"injectables/LoadingService.html":{}}}],["cargar",{"_index":1015,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{}}}],["caribe",{"_index":1789,"title":{},"body":{"interfaces/Trip.html":{}}}],["carrito",{"_index":987,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/ViewTripComponent.html":{}}}],["case",{"_index":449,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["caso",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["catcherror((error",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catering",{"_index":2042,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["cbd5e1",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccfbf1",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cd",{"_index":2207,"title":{},"body":{"index.html":{}}}],["center",{"_index":1278,"title":{},"body":{"components/LoadingComponent.html":{},"components/SearchPageComponent.html":{}}}],["cerrando",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cerrar",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["cffafe",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changeorigin",{"_index":2220,"title":{},"body":{"index.html":{}}}],["changepassword",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["changepassword(oldpassword",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassworddata",{"_index":1421,"title":{},"body":{"components/ProfileComponent.html":{}}}],["check",{"_index":100,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["checkbox",{"_index":2009,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["checkout",{"_index":1064,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout'},{'name",{"_index":98,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["checkout.component.html",{"_index":1067,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutcomponent",{"_index":97,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["checkticketscomponent",{"_index":99,"title":{"components/CheckTicketsComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["ciclo",{"_index":331,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["cierra",{"_index":981,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/ModalFilterComponent.html":{},"components/SidebarComponent.html":{}}}],["cierre",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["ciertas",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":68,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["class=\"mt",{"_index":1677,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["class=\"my",{"_index":1041,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["class=\"w",{"_index":1046,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["clave",{"_index":1637,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["cli",{"_index":2196,"title":{},"body":{"index.html":{}}}],["clic",{"_index":985,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["clickedelement",{"_index":1025,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["clickedelement.closest('#cartdropdown",{"_index":1027,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["clickedelement.closest('#togglecart",{"_index":1028,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["client",{"_index":1950,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["cliente",{"_index":1864,"title":{},"body":{"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["clona",{"_index":2200,"title":{},"body":{"index.html":{}}}],["clonar",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clone",{"_index":2203,"title":{},"body":{"index.html":{}}}],["close",{"_index":1737,"title":{},"body":{"components/SidebarComponent.html":{}}}],["closedropdown",{"_index":974,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["closedropdown(event",{"_index":979,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["closemodal",{"_index":1369,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["coalescencia",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coinciden",{"_index":1481,"title":{},"body":{"components/ProfileComponent.html":{}}}],["coincidentes",{"_index":1500,"title":{},"body":{"components/ProfileComponent.html":{}}}],["col",{"_index":1680,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["color",{"_index":1264,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["colorscheme",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1276,"title":{},"body":{"components/LoadingComponent.html":{}}}],["commonmodule",{"_index":243,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{}}}],["como",{"_index":232,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"injectables/BookingService.html":{},"components/CardDetailsComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["comodidades",{"_index":1805,"title":{},"body":{"interfaces/Trip.html":{},"interfaces/Yacht.html":{}}}],["complet",{"_index":1775,"title":{},"body":{"injectables/ToastService.html":{}}}],["completa",{"_index":1629,"title":{},"body":{"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["completada",{"_index":1102,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{},"index.html":{}}}],["component/booking",{"_index":1116,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["component/card",{"_index":1644,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["component/card/card.component",{"_index":1344,"title":{},"body":{"components/MainPageComponent.html":{},"components/ProfileComponent.html":{}}}],["component/header/header.component",{"_index":395,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["component/loading/loading.component",{"_index":717,"title":{},"body":{"components/AppComponent.html":{},"components/ViewTripComponent.html":{}}}],["component/modal",{"_index":1646,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["component/searchbar/searchbar.component",{"_index":1343,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["component/sidebar/sidebar.component",{"_index":58,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["component/toast/toast.component",{"_index":401,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{}}}],["component_template",{"_index":81,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{}}}],["componentes",{"_index":229,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AppComponent.html":{},"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"overview.html":{}}}],["comportamiento",{"_index":1324,"title":{},"body":{"injectables/LoadingService.html":{}}}],["compra",{"_index":1061,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["comprado",{"_index":936,"title":{},"body":{"components/CardComponent.html":{}}}],["comprar",{"_index":945,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"index.html":{}}}],["comprobación",{"_index":577,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["comunicación",{"_index":2235,"title":{},"body":{"index.html":{}}}],["común",{"_index":603,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["con",{"_index":25,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/HomeComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["conectar",{"_index":2214,"title":{},"body":{"index.html":{}}}],["config",{"_index":2225,"title":{},"body":{"index.html":{}}}],["configura",{"_index":2212,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["configuraciones",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuración",{"_index":686,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configurados",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":495,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["confirmaciones",{"_index":284,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["confirmación",{"_index":236,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["confirmadas",{"_index":899,"title":{},"body":{"injectables/BookingService.html":{},"components/ProfileComponent.html":{}}}],["confirmado",{"_index":915,"title":{},"body":{"injectables/BookingService.html":{}}}],["confirmar",{"_index":641,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{}}}],["confirmationservice",{"_index":240,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["confirmeventtype",{"_index":398,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["confirmeventtype.cancel",{"_index":454,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["confirmeventtype.reject",{"_index":450,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["confirmpassword",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["confirmpassword).subscribe",{"_index":1563,"title":{},"body":{"components/ProfileComponent.html":{}}}],["confirmpopup",{"_index":545,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["confirmpopupmodule",{"_index":250,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["confirmsubmit",{"_index":265,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["confirmsubmit(event",{"_index":286,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["conoce",{"_index":2099,"title":{},"body":{"interfaces/Yacht.html":{}}}],["console.error",{"_index":1984,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["console.error('error",{"_index":422,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["console.error('no",{"_index":1017,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["console.error('toastcomponent",{"_index":412,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["console.error('tripservice",{"_index":415,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["console.error(`error",{"_index":1574,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log",{"_index":1988,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["console.log('confirm",{"_index":619,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["console.log('datos",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('interceptando",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":152,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":158,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["constructor(authservice",{"_index":159,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/CheckTicketsComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["constructor(http",{"_index":671,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["constructor(loadingservice",{"_index":1233,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(messageservice",{"_index":1753,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["constructor(private",{"_index":206,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"injectables/EmailService.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"injectables/YachtService.html":{}}}],["constructor(public",{"_index":1762,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(route",{"_index":1604,"title":{},"body":{"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{}}}],["constructor(router",{"_index":1073,"title":{},"body":{"components/CheckoutComponent.html":{},"components/SearchbarComponent.html":{}}}],["constructor(tripservice",{"_index":277,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/MainPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["constructor(yachtservice",{"_index":554,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["consulta",{"_index":1609,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["container",{"_index":1269,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToastComponent.html":{}}}],["contener",{"_index":38,"title":{},"body":{"components/AdminHomepageComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["content",{"_index":694,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/LoadingComponent.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["contexto",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contiene",{"_index":700,"title":{},"body":{"components/AppComponent.html":{},"injectables/BookingService.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"index.html":{}}}],["continuar",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contrario",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["contraseña",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["contraseñas",{"_index":1480,"title":{},"body":{"components/ProfileComponent.html":{}}}],["contrastcolor",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":1622,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["controla",{"_index":1490,"title":{},"body":{"components/ProfileComponent.html":{},"components/VerificationComponent.html":{}}}],["controlar",{"_index":1304,"title":{},"body":{"injectables/LoadingService.html":{}}}],["correctamente",{"_index":477,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["correcto",{"_index":1198,"title":{},"body":{"injectables/EmailService.html":{}}}],["correo",{"_index":1182,"title":{},"body":{"injectables/EmailService.html":{},"components/ProfileComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["correos",{"_index":1179,"title":{},"body":{"injectables/EmailService.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["correspondiente",{"_index":1834,"title":{},"body":{"injectables/TripService.html":{}}}],["corriendo",{"_index":2197,"title":{},"body":{"index.html":{}}}],["corrige",{"_index":1557,"title":{},"body":{"components/ProfileComponent.html":{}}}],["costo",{"_index":1818,"title":{},"body":{"interfaces/Trip.html":{}}}],["cover",{"_index":1284,"title":{},"body":{"components/LoadingComponent.html":{}}}],["coverage",{"_index":2115,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":302,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/ApiService.html":{}}}],["creación",{"_index":294,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/BookingService.html":{},"injectables/TripService.html":{}}}],["creación/edición",{"_index":381,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["creado",{"_index":476,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/YachtService.html":{}}}],["crear",{"_index":220,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/BookingService.html":{},"components/CheckoutComponent.html":{},"injectables/TripService.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["createreservation",{"_index":886,"title":{},"body":{"injectables/BookingService.html":{}}}],["createreservation(reservation",{"_index":893,"title":{},"body":{"injectables/BookingService.html":{}}}],["createtrip",{"_index":266,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/TripService.html":{}}}],["createtrip(trip",{"_index":1828,"title":{},"body":{"injectables/TripService.html":{}}}],["createuser",{"_index":669,"title":{},"body":{"injectables/ApiService.html":{}}}],["createuser(userdata",{"_index":674,"title":{},"body":{"injectables/ApiService.html":{}}}],["createyacht",{"_index":2102,"title":{},"body":{"injectables/YachtService.html":{}}}],["createyacht(yacht",{"_index":2104,"title":{},"body":{"injectables/YachtService.html":{}}}],["cristalinas",{"_index":1795,"title":{},"body":{"interfaces/Trip.html":{}}}],["criterios",{"_index":1594,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["crédito",{"_index":1084,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cuando",{"_index":865,"title":{},"body":{"components/BookingCardComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{},"miscellaneous/variables.html":{}}}],["cuenta",{"_index":1856,"title":{},"body":{"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{}}}],["cumplen",{"_index":1611,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["curr",{"_index":2071,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["currency",{"_index":531,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["currentuserid",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuserrole",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["customsort",{"_index":267,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["customsort(event",{"_index":310,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["customtheme",{"_index":2145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cuyo",{"_index":901,"title":{},"body":{"injectables/BookingService.html":{}}}],["cvc",{"_index":1090,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cyan",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["código",{"_index":1089,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["d1d5db",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1fae5",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d4d4d4",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d4d4d8",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d6d3d1",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d8b4fe",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d946ef",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d97706",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d9f99d",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dado",{"_index":1184,"title":{},"body":{"injectables/EmailService.html":{}}}],["dark",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darkmodeselector",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":418,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ProfileComponent.html":{},"components/ViewTripComponent.html":{}}}],["data.price",{"_index":2061,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["date",{"_index":525,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["date().toisostring().split('t')[0",{"_index":474,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ViewTripComponent.html":{}}}],["date(datestring",{"_index":943,"title":{},"body":{"components/CardComponent.html":{}}}],["date(this.editeduser.client.birthdate",{"_index":1528,"title":{},"body":{"components/ProfileComponent.html":{}}}],["date(this.trip.enddate",{"_index":486,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["date(this.trip.startdate",{"_index":485,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["date(this.userdata.client.birthdate",{"_index":1967,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["date:'dd",{"_index":877,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":946,"title":{},"body":{"components/CardComponent.html":{}}}],["date:\\'dd",{"_index":882,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":950,"title":{},"body":{"components/CardComponent.html":{}}}],["datepicker",{"_index":253,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["datepipe",{"_index":852,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{}}}],["datestring",{"_index":940,"title":{},"body":{"components/CardComponent.html":{}}}],["datos",{"_index":314,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"injectables/TripService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"index.html":{}}}],["datos:*postgresql",{"_index":2187,"title":{},"body":{"index.html":{}}}],["daydiff",{"_index":1969,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["db2777",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbeafe",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dc2626",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dcfce7",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddd6fe",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["de",{"_index":14,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":683,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debes",{"_index":1586,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["decorators",{"_index":360,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/VerificationComponent.html":{}}}],["default",{"_index":349,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":573,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["define",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":162,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["definepreset(aura",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definido",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["del",{"_index":18,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":1161,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["delete",{"_index":858,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["deletereservation",{"_index":887,"title":{},"body":{"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["deletereservation(id",{"_index":895,"title":{},"body":{"injectables/BookingService.html":{}}}],["deletereservation(reservationid",{"_index":988,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["deletetrip",{"_index":268,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/TripService.html":{}}}],["deletetrip(id",{"_index":1830,"title":{},"body":{"injectables/TripService.html":{}}}],["deletetrip(trip",{"_index":317,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["deleteyacht",{"_index":548,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/YachtService.html":{}}}],["deleteyacht(id",{"_index":2106,"title":{},"body":{"injectables/YachtService.html":{}}}],["deleteyacht(yacht",{"_index":562,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["deletion",{"_index":496,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["denegado",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dentro",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{},"components/LoadingComponent.html":{}}}],["departure",{"_index":365,"title":{},"body":{"components/AdminTripsComponent.html":{},"interfaces/Trip.html":{}}}],["dependencias",{"_index":2210,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":2154,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependiendo",{"_index":292,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckoutComponent.html":{}}}],["desactiva",{"_index":1309,"title":{},"body":{"injectables/LoadingService.html":{},"miscellaneous/variables.html":{}}}],["desactivar",{"_index":1243,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"miscellaneous/variables.html":{}}}],["desarrollado",{"_index":2179,"title":{},"body":{"index.html":{}}}],["desarrollo",{"_index":2222,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":521,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["descubre",{"_index":1346,"title":{},"body":{"components/MainPageComponent.html":{}}}],["desde",{"_index":328,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/CardDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"components/ViewTripComponent.html":{}}}],["desea",{"_index":677,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{}}}],["deseas",{"_index":438,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["desplegable",{"_index":983,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["después",{"_index":320,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["detail",{"_index":1547,"title":{},"body":{"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["details",{"_index":955,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details'},{'name",{"_index":96,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["details.component",{"_index":1645,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["details.component.html",{"_index":956,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts",{"_index":953,"title":{},"body":{"components/CardDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:23",{"_index":957,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/card",{"_index":952,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["detallada",{"_index":1784,"title":{},"body":{"injectables/ToastService.html":{},"interfaces/Trip.html":{}}}],["detalle",{"_index":1760,"title":{},"body":{"components/ToastComponent.html":{}}}],["detalles",{"_index":862,"title":{},"body":{"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"components/ViewTripComponent.html":{}}}],["detección",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectar",{"_index":1238,"title":{},"body":{"components/LoadingComponent.html":{}}}],["detectroutetransitions",{"_index":1232,"title":{},"body":{"components/LoadingComponent.html":{}}}],["determina",{"_index":183,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/CheckTicketsComponent.html":{},"components/HeaderComponent.html":{}}}],["determinar",{"_index":927,"title":{},"body":{"components/CardComponent.html":{}}}],["devuelve",{"_index":1382,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["dialogmodule",{"_index":1417,"title":{},"body":{"components/ProfileComponent.html":{}}}],["diccionario",{"_index":1636,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["diferente",{"_index":298,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["diferentes",{"_index":1766,"title":{},"body":{"injectables/ToastService.html":{}}}],["dinámica",{"_index":1704,"title":{},"body":{"components/SidebarComponent.html":{}}}],["dirección",{"_index":1473,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{}}}],["direction",{"_index":1275,"title":{},"body":{"components/LoadingComponent.html":{}}}],["directive",{"_index":79,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["directives",{"_index":131,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["disabledbackground",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disabledcolor",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disabledopacity",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disfrutar",{"_index":1883,"title":{},"body":{"components/VerificationComponent.html":{}}}],["dispar",{"_index":561,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["display",{"_index":1273,"title":{},"body":{"components/LoadingComponent.html":{}}}],["displaychangepasswordmodal",{"_index":1422,"title":{},"body":{"components/ProfileComponent.html":{}}}],["displaymodal",{"_index":1423,"title":{},"body":{"components/ProfileComponent.html":{}}}],["disponible",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["disponibles",{"_index":218,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"components/ViewTripComponent.html":{}}}],["dni",{"_index":1930,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["dnipattern",{"_index":1962,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["dnipattern.test(this.userdata.client.dni",{"_index":1965,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["dnivalid",{"_index":1424,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["documentation",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["donde",{"_index":1359,"title":{},"body":{"components/ModalFilterComponent.html":{},"interfaces/Trip.html":{}}}],["duración",{"_index":520,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/Trip.html":{},"components/ViewTripComponent.html":{}}}],["durante",{"_index":1240,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["duration",{"_index":522,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["duration_hours",{"_index":368,"title":{},"body":{"components/AdminTripsComponent.html":{},"interfaces/Trip.html":{}}}],["dynamic",{"_index":2159,"title":{},"body":{"dependencies.html":{}}}],["d{4",{"_index":1125,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["dígitos",{"_index":1585,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["e",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e0e7ff",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e0f2fe",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e11d48",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e8f0",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e4e4e7",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e5e5e5",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e5e7eb",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e7e5e4",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e879f9",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e9d5ff",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ea580c",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eab308",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ease",{"_index":1287,"title":{},"body":{"components/LoadingComponent.html":{},"components/SidebarComponent.html":{}}}],["ec4899",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ecfccb",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ecfdf5",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ecfeff",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edad",{"_index":1468,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["ede9fe",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edición",{"_index":296,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{}}}],["editando",{"_index":1494,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editar",{"_index":221,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{}}}],["editeduser",{"_index":1425,"title":{},"body":{"components/ProfileComponent.html":{}}}],["edittrip",{"_index":269,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["edittrip(trip",{"_index":321,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["edityacht",{"_index":549,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["edityacht(yacht",{"_index":565,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["eef2ff",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ef4444",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eff6ff",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ejecución",{"_index":2199,"title":{},"body":{"index.html":{}}}],["ejecuta",{"_index":333,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ProfileComponent.html":{},"components/SearchbarComponent.html":{},"components/VerificationComponent.html":{},"index.html":{}}}],["ejecutar",{"_index":2190,"title":{},"body":{"index.html":{}}}],["ejemplo",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{}}}],["el",{"_index":44,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["electrónico",{"_index":1183,"title":{},"body":{"injectables/EmailService.html":{},"components/ProfileComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["electrónicos",{"_index":1180,"title":{},"body":{"injectables/EmailService.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["elegir",{"_index":1947,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["element",{"_index":78,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["elige",{"_index":1552,"title":{},"body":{"components/ProfileComponent.html":{}}}],["elimina",{"_index":564,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["eliminación",{"_index":642,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/BookingService.html":{},"injectables/TripService.html":{}}}],["eliminado",{"_index":2108,"title":{},"body":{"injectables/YachtService.html":{}}}],["eliminar",{"_index":222,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["eliminarlas",{"_index":964,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["email",{"_index":1193,"title":{},"body":{"injectables/EmailService.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["emailpattern",{"_index":1519,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["emailpattern.test(this.editeduser.email",{"_index":1526,"title":{},"body":{"components/ProfileComponent.html":{}}}],["emailpattern.test(this.userdata.email",{"_index":1961,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["emailservice",{"_index":1176,"title":{"injectables/EmailService.html":{}},"body":{"injectables/EmailService.html":{},"components/ViewLoginRegisterComponent.html":{},"coverage.html":{}}}],["emailvalid",{"_index":1426,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["embarque",{"_index":2085,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["emerald",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emergente",{"_index":558,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["emergentes",{"_index":1443,"title":{},"body":{"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["emite",{"_index":193,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/LoadingService.html":{},"components/ModalFilterComponent.html":{},"components/SearchbarComponent.html":{},"injectables/YachtService.html":{}}}],["emitevent",{"_index":1138,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["emitido",{"_index":850,"title":{},"body":{"components/BookingCardComponent.html":{},"components/ModalFilterComponent.html":{}}}],["emitir",{"_index":871,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["empieza",{"_index":1220,"title":{},"body":{"components/HomeComponent.html":{}}}],["en",{"_index":27,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["encabezado",{"_index":610,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["encabezados",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encargado",{"_index":171,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["encuentran",{"_index":1684,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["end",{"_index":526,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["enddate",{"_index":370,"title":{},"body":{"components/AdminTripsComponent.html":{},"interfaces/Trip.html":{}}}],["enddate.toisostring",{"_index":489,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["enlaces",{"_index":39,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["enrutamiento",{"_index":705,"title":{},"body":{"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/SearchbarComponent.html":{}}}],["entrada",{"_index":699,"title":{},"body":{"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"index.html":{}}}],["entre",{"_index":176,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["enviado",{"_index":1895,"title":{},"body":{"injectables/VerificationService.html":{}}}],["enviados",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["enviamos",{"_index":1197,"title":{},"body":{"injectables/EmailService.html":{}}}],["enviar",{"_index":290,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/EmailService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["envía",{"_index":1097,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["envío",{"_index":1178,"title":{},"body":{"injectables/EmailService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["err",{"_index":1172,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["error",{"_index":421,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["error('user",{"_index":838,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.error.error",{"_index":1550,"title":{},"body":{"components/ProfileComponent.html":{}}}],["error.status",{"_index":1548,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["errores",{"_index":1477,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["errormessage",{"_index":1427,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["es",{"_index":591,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/CheckTicketsComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["escucha",{"_index":1252,"title":{},"body":{"components/LoadingComponent.html":{}}}],["escuchar",{"_index":1236,"title":{},"body":{"components/LoadingComponent.html":{}}}],["especifica",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["especificadas",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["especificar",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["específica",{"_index":71,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["específico",{"_index":407,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["espera",{"_index":1145,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["esperan",{"_index":2002,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["est",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{}}}],["esta",{"_index":63,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["establece",{"_index":2034,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["establecer",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["estado",{"_index":188,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ModalFilterComponent.html":{},"components/SidebarComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["estamos",{"_index":355,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["estar",{"_index":2221,"title":{},"body":{"index.html":{}}}],["este",{"_index":20,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/LoadingService.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["estilizada",{"_index":1744,"title":{},"body":{"components/ToastComponent.html":{}}}],["estilos",{"_index":2245,"title":{},"body":{"index.html":{}}}],["estilos:*tailwind",{"_index":2186,"title":{},"body":{"index.html":{}}}],["estructura",{"_index":701,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{},"index.html":{}}}],["están",{"_index":336,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/ProfileComponent.html":{}}}],["estás",{"_index":436,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["etc",{"_index":1771,"title":{},"body":{"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["etiquetas",{"_index":606,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["eur",{"_index":532,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["event",{"_index":287,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["event.data.sort((a",{"_index":501,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["event.field.split",{"_index":506,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["event.order",{"_index":515,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["event.preventdefault",{"_index":627,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["event.query.tolowercase",{"_index":427,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["event.target",{"_index":432,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{}}}],["event.target.value",{"_index":1398,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["event.target.value.replace(/\\d/g",{"_index":1132,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["eventcoalescing",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":863,"title":{},"body":{"components/BookingCardComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchbarComponent.html":{}}}],["evento",{"_index":299,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/BookingCardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["eventos",{"_index":1237,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["eventtarget",{"_index":433,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["example",{"_index":45,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"injectables/VerificationService.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["excede",{"_index":2024,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["exclamation",{"_index":442,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["existe",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["existente",{"_index":347,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/TripService.html":{}}}],["exitosa",{"_index":1774,"title":{},"body":{"injectables/ToastService.html":{}}}],["exitoso",{"_index":1103,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["exp",{"_index":1174,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["expdate",{"_index":1126,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["experiencia",{"_index":1219,"title":{},"body":{"components/HomeComponent.html":{}}}],["experiencias",{"_index":1223,"title":{},"body":{"components/HomeComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["expiración",{"_index":1093,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["expirada",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expirado",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["explorar",{"_index":1738,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["export",{"_index":67,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["exports",{"_index":1119,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["expresión",{"_index":1931,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["extra",{"_index":2012,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["extractyachtmodels",{"_index":1599,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["extrae",{"_index":1613,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["extras",{"_index":2029,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["extrascost",{"_index":2069,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["extrasprices",{"_index":2013,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["extraído",{"_index":2032,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["f0abfc",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0f9ff",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0fdf4",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f0fdfa",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f1f5f9",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f3e8ff",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f3f4f6",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f43f5e",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f472b6",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f4f4f5",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f4f9fb",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f59e0b",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f5d0fe",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f5f3ff",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f5f5f4",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f5f5f5",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f7fee7",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f87171",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f8fafc",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f97316",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9a8d4",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f9fafb",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facc15",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fae8ff",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faf5ff",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fafaf9",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fafafa",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["falla",{"_index":1913,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["fallo",{"_index":1858,"title":{},"body":{"components/VerificationComponent.html":{}}}],["false",{"_index":195,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":468,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["fb",{"_index":1074,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["fb7185",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb923c",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fbbf24",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fbcfe8",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fca5a5",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fcd34d",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fce7f3",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fda4af",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fdba74",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fde047",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fde68a",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fdf2f8",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fdf4ff",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features",{"_index":2230,"title":{},"body":{"index.html":{}}}],["fecaca",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fecdd3",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fecha",{"_index":875,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Trip.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["fechas",{"_index":471,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["fed7aa",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fee2e2",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fef08a",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fef2f2",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fef3c7",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fef9c3",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fefce8",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffe4e6",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffedd5",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff1f2",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff7ed",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fffbeb",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":507,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["fieldpath",{"_index":505,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"coverage.html":{}}}],["fill",{"_index":1301,"title":{},"body":{"components/LoadingComponent.html":{}}}],["filledbackground",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filledfocusbackground",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filledhoverbackground",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1363,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter'},{'name",{"_index":113,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["filter.component",{"_index":1647,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["filter.component.html",{"_index":1364,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts",{"_index":1351,"title":{},"body":{"components/ModalFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:25",{"_index":1380,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:31",{"_index":1384,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":1379,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:41",{"_index":1376,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:46",{"_index":1394,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:51",{"_index":1392,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:56",{"_index":1393,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:61",{"_index":1390,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:68",{"_index":1387,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:76",{"_index":1389,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter.component.ts:84",{"_index":1385,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filter/modal",{"_index":1350,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["filteredyachts",{"_index":256,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["filters",{"_index":1619,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["filters.prices.foreach(price",{"_index":1673,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["filtersapplied",{"_index":1374,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["filtra",{"_index":343,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/SearchPageComponent.html":{}}}],["filtrada",{"_index":352,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["filtrado",{"_index":1595,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["filtrados",{"_index":1641,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["filtrar",{"_index":1353,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["filtro",{"_index":1378,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["filtros",{"_index":1361,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["fin",{"_index":1258,"title":{},"body":{"components/LoadingComponent.html":{}}}],["finalización",{"_index":1811,"title":{},"body":{"interfaces/Trip.html":{}}}],["finalizar",{"_index":1060,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["finalize",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixed",{"_index":1271,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToastComponent.html":{}}}],["flex",{"_index":1274,"title":{},"body":{"components/LoadingComponent.html":{},"components/SearchPageComponent.html":{}}}],["floatlabel",{"_index":245,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["floatlabelactivecolor",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["floatlabelcolor",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["floatlabelfocuscolor",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["floatlabelinvalidcolor",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flotantes",{"_index":607,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["focusbackground",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focusbordercolor",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focuscolor",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focusring",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fontsize",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fontweight",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.field.invalid.placeholder.color",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forma",{"_index":1938,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["formatcardnumber",{"_index":1069,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formatcardnumber(event",{"_index":1080,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formatcvc",{"_index":1070,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formatcvc(event",{"_index":1087,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formatea",{"_index":1082,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formatexpdate",{"_index":1071,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formatexpdate(event",{"_index":1091,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formato",{"_index":848,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/Trip.html":{}}}],["formbuilder",{"_index":1075,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formfield",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formgroup",{"_index":1107,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formsmodule",{"_index":244,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["formulario",{"_index":291,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["formularios",{"_index":233,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["forwards",{"_index":1289,"title":{},"body":{"components/LoadingComponent.html":{}}}],["framework",{"_index":2185,"title":{},"body":{"index.html":{}}}],["framework:*angular",{"_index":2183,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":714,"title":{},"body":{"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"index.html":{}}}],["frontend.git",{"_index":2206,"title":{},"body":{"index.html":{}}}],["frontend2",{"_index":2208,"title":{},"body":{"index.html":{}}}],["fuchsia",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fuera",{"_index":986,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["full",{"_index":1047,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["funcionalidades",{"_index":540,"title":{},"body":{"components/AdminYachtsComponent.html":{},"index.html":{}}}],["funcione",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["funciones",{"_index":1884,"title":{},"body":{"components/VerificationComponent.html":{}}}],["gap",{"_index":1681,"title":{},"body":{"components/SearchPageComponent.html":{},"miscellaneous/variables.html":{}}}],["generada",{"_index":1452,"title":{},"body":{"components/ProfileComponent.html":{}}}],["gestiona",{"_index":175,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/CheckTicketsComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["gestionada",{"_index":2178,"title":{},"body":{"index.html":{}}}],["gestionadas",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gestionar",{"_index":172,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/LoadingService.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["gestión",{"_index":226,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ProfileComponent.html":{}}}],["getauthenticateduser",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["getavatarurl",{"_index":1431,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getavatarurl(username",{"_index":1446,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getconfirmedreservations",{"_index":888,"title":{},"body":{"injectables/BookingService.html":{}}}],["getconfirmedreservations(userid",{"_index":897,"title":{},"body":{"injectables/BookingService.html":{}}}],["getpendingreservationsbyuser",{"_index":889,"title":{},"body":{"injectables/BookingService.html":{}}}],["getpendingreservationsbyuser(userid",{"_index":903,"title":{},"body":{"injectables/BookingService.html":{}}}],["getting",{"_index":1556,"title":{"index.html":{}},"body":{"components/ProfileComponent.html":{}}}],["gettoken",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettotalprice",{"_index":975,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["gettripbyid",{"_index":890,"title":{},"body":{"injectables/BookingService.html":{},"injectables/TripService.html":{}}}],["gettripbyid(id",{"_index":1832,"title":{},"body":{"injectables/TripService.html":{}}}],["gettripbyid(tripid",{"_index":906,"title":{},"body":{"injectables/BookingService.html":{}}}],["gettripsbooked",{"_index":1432,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getuserid",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserrole",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":670,"title":{},"body":{"injectables/ApiService.html":{}}}],["getyachts",{"_index":550,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/YachtService.html":{}}}],["git",{"_index":2202,"title":{},"body":{"index.html":{}}}],["globales",{"_index":2246,"title":{},"body":{"index.html":{}}}],["gray",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["green",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guard",{"_index":135,"title":{"guards/AdminRoleGuard.html":{}},"body":{"guards/AdminRoleGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guarda",{"_index":584,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{}}}],["guardado",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["guardar",{"_index":559,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{}}}],["guardarlos",{"_index":1476,"title":{},"body":{"components/ProfileComponent.html":{}}}],["guards",{"_index":137,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["guia",{"_index":2040,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["guía",{"_index":2089,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["ha",{"_index":623,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/CardComponent.html":{},"components/CheckoutComponent.html":{},"injectables/LoadingService.html":{},"components/ProfileComponent.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["hace",{"_index":984,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/SearchbarComponent.html":{}}}],["hacen",{"_index":1482,"title":{},"body":{"components/ProfileComponent.html":{}}}],["hacer",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hacia",{"_index":659,"title":{},"body":{"injectables/ApiService.html":{}}}],["hasta",{"_index":1412,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["hastoken",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["hay",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{},"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":494,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":103,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["header.component.html",{"_index":1201,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1875,"title":{},"body":{"components/VerificationComponent.html":{}}}],["headercomponent",{"_index":102,"title":{"components/HeaderComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["headers",{"_index":693,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["height",{"_index":621,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/LoadingComponent.html":{}}}],["herramientas",{"_index":43,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["hidechangepasswordmodal",{"_index":1433,"title":{},"body":{"components/ProfileComponent.html":{}}}],["hidemodal",{"_index":1434,"title":{},"body":{"components/ProfileComponent.html":{}}}],["highlight",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight.background",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight.color",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight.focus.background",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight.focus.color",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":105,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["home.component.html",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":104,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["homepage",{"_index":51,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["homepage'},{'name",{"_index":83,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["homepage.component.html",{"_index":55,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["homepage.component.ts",{"_index":11,"title":{},"body":{"components/AdminHomepageComponent.html":{},"coverage.html":{}}}],["homepage/admin",{"_index":10,"title":{},"body":{"components/AdminHomepageComponent.html":{},"coverage.html":{}}}],["hora",{"_index":1810,"title":{},"body":{"interfaces/Trip.html":{},"components/ViewTripComponent.html":{}}}],["horas",{"_index":944,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/Trip.html":{},"components/ViewTripComponent.html":{}}}],["hours",{"_index":523,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["hover:bg",{"_index":1058,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["hoverbackground",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hoverbordercolor",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hovercolor",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hovermutedcolor",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":60,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{}}}],["htmlelement",{"_index":1026,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["http",{"_index":658,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2228,"title":{},"body":{"index.html":{}}}],["http://localhost:8000",{"_index":2218,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api",{"_index":681,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["http://localhost:8000/api/booking",{"_index":917,"title":{},"body":{"injectables/BookingService.html":{}}}],["http://localhost:8000/api/send",{"_index":1191,"title":{},"body":{"injectables/EmailService.html":{}}}],["http://localhost:8000/api/trip",{"_index":1837,"title":{},"body":{"injectables/TripService.html":{}}}],["http://localhost:8000/api/user/verify",{"_index":1871,"title":{},"body":{"components/VerificationComponent.html":{},"injectables/VerificationService.html":{}}}],["http://localhost:8000/api/yacht",{"_index":2112,"title":{},"body":{"injectables/YachtService.html":{}}}],["httpclient",{"_index":672,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["httpclientmodule",{"_index":1903,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["httpcontexttoken",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httphandlerfn",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":689,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/TripService.html":{}}}],["httpinterceptorfn",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequest",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/tu",{"_index":2204,"title":{},"body":{"index.html":{}}}],["https://ui",{"_index":1536,"title":{},"body":{"components/ProfileComponent.html":{}}}],["hubo",{"_index":1565,"title":{},"body":{"components/ProfileComponent.html":{}}}],["icon",{"_index":440,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"miscellaneous/variables.html":{}}}],["iconcolor",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconsize",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":371,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/ProfileComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["identificador",{"_index":1114,"title":{},"body":{"components/CheckoutComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["identificar",{"_index":1854,"title":{},"body":{"interfaces/User.html":{}}}],["identifier",{"_index":2117,"title":{},"body":{"coverage.html":{}}}],["identifique",{"_index":1817,"title":{},"body":{"interfaces/Trip.html":{}}}],["igual",{"_index":1928,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["image",{"_index":373,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Trip.html":{},"interfaces/Yacht.html":{}}}],["image_url",{"_index":2094,"title":{},"body":{"interfaces/Yacht.html":{}}}],["imagen",{"_index":645,"title":{},"body":{"components/AdminYachtsComponent.html":{},"interfaces/Yacht.html":{}}}],["implements",{"_index":204,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["importación",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importado",{"_index":61,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["importados",{"_index":720,"title":{},"body":{"components/AppComponent.html":{}}}],["importantes",{"_index":708,"title":{},"body":{"components/AppComponent.html":{}}}],["importprovidersfrom(toastmodule",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":52,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["incluir",{"_index":69,"title":{},"body":{"components/AdminHomepageComponent.html":{},"miscellaneous/variables.html":{}}}],["incluye",{"_index":1200,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainPageComponent.html":{}}}],["incluyendo",{"_index":539,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["incompleta",{"_index":1918,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["incorrectos",{"_index":1997,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["increíble",{"_index":1793,"title":{},"body":{"interfaces/Trip.html":{}}}],["independiente",{"_index":721,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":156,"title":{"index.html":{}},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":2242,"title":{},"body":{"index.html":{}}}],["indica",{"_index":589,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/ViewTripComponent.html":{}}}],["indicador",{"_index":354,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["indicar",{"_index":1315,"title":{},"body":{"injectables/LoadingService.html":{},"interfaces/Trip.html":{}}}],["indigo",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["individual",{"_index":2006,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["información",{"_index":185,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/TripService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{}}}],["informativos",{"_index":1769,"title":{},"body":{"injectables/ToastService.html":{}}}],["ingresa",{"_index":1086,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ingresada",{"_index":1474,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ingresado",{"_index":1485,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ingresados",{"_index":1167,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inicia",{"_index":1912,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["inicial",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["iniciales",{"_index":1450,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inicializa",{"_index":571,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{}}}],["inicialización",{"_index":334,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/LoadingComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["inicializados",{"_index":337,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["inicializar",{"_index":1340,"title":{},"body":{"components/MainPageComponent.html":{},"components/ProfileComponent.html":{}}}],["inicialmente",{"_index":1325,"title":{},"body":{"injectables/LoadingService.html":{}}}],["iniciar",{"_index":581,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["inicio",{"_index":72,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Trip.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["initialized",{"_index":413,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["initializeyacht",{"_index":551,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["initials",{"_index":1538,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject",{"_index":1843,"title":{},"body":{"injectables/TripService.html":{}}}],["inject(authservice",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(httpclient",{"_index":1839,"title":{},"body":{"injectables/TripService.html":{}}}],["inject(loadingservice",{"_index":2766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(toastservice",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":196,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/LoadingService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/LoadingService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{},"coverage.html":{}}}],["injectables",{"_index":653,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/LoadingService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{},"overview.html":{}}}],["input",{"_index":868,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/ModalFilterComponent.html":{}}}],["inputnumber",{"_index":251,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["inputs",{"_index":855,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/ModalFilterComponent.html":{}}}],["inputtext",{"_index":246,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["inset",{"_index":1272,"title":{},"body":{"components/LoadingComponent.html":{}}}],["instala",{"_index":2209,"title":{},"body":{"index.html":{}}}],["instalación",{"_index":2198,"title":{},"body":{"index.html":{}}}],["instalado",{"_index":2193,"title":{},"body":{"index.html":{}}}],["install3",{"_index":2211,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1256,"title":{},"body":{"components/LoadingComponent.html":{}}}],["integra",{"_index":31,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["intenta",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["intentar",{"_index":1190,"title":{},"body":{"injectables/EmailService.html":{}}}],["interactuar",{"_index":225,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["interceptor",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interceptores",{"_index":2233,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["interceptors",{"_index":2232,"title":{},"body":{"index.html":{}}}],["interface",{"_index":1785,"title":{"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}},"body":{"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{},"coverage.html":{}}}],["interfaces",{"_index":1786,"title":{},"body":{"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{},"overview.html":{}}}],["interfaz",{"_index":231,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardDetailsComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["introduce",{"_index":1583,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["introducido",{"_index":1699,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["inténtalo",{"_index":1163,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["invalidbordercolor",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalidplaceholdercolor",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invoca",{"_index":867,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["inválido",{"_index":1165,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["inyección",{"_index":1841,"title":{},"body":{"injectables/TripService.html":{},"injectables/VerificationService.html":{},"miscellaneous/variables.html":{}}}],["inyecta",{"_index":164,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["inyectar",{"_index":281,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["ir",{"_index":1886,"title":{},"body":{"components/VerificationComponent.html":{}}}],["isadmin",{"_index":211,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{}}}],["isauthenticated",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["isbooking",{"_index":2014,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["iseditmode",{"_index":257,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["isloading",{"_index":970,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/SidebarComponent.html":{}}}],["isloggedin",{"_index":971,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/SidebarComponent.html":{}}}],["isnan(id",{"_index":2060,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["iso",{"_index":1812,"title":{},"body":{"interfaces/Trip.html":{}}}],["ispastdate",{"_index":932,"title":{},"body":{"components/CardComponent.html":{}}}],["ispastdate(datestring",{"_index":938,"title":{},"body":{"components/CardComponent.html":{}}}],["ispastdate(trip.startdate",{"_index":947,"title":{},"body":{"components/CardComponent.html":{}}}],["issidebaropen",{"_index":1706,"title":{},"body":{"components/SidebarComponent.html":{}}}],["isvalid",{"_index":1511,"title":{},"body":{"components/ProfileComponent.html":{}}}],["item",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1280,"title":{},"body":{"components/LoadingComponent.html":{}}}],["john_doe",{"_index":1849,"title":{},"body":{"interfaces/User.html":{}}}],["jorgeariasmartin",{"_index":2252,"title":{},"body":{"index.html":{}}}],["justify",{"_index":1277,"title":{},"body":{"components/LoadingComponent.html":{},"components/SearchPageComponent.html":{}}}],["key",{"_index":1395,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["keyframes",{"_index":1261,"title":{},"body":{"components/LoadingComponent.html":{}}}],["la",{"_index":15,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":1631,"title":{},"body":{"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["las",{"_index":283,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lateral",{"_index":34,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["le",{"_index":149,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/EmailService.html":{}}}],["legend",{"_index":77,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["letra",{"_index":1934,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["lg",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["light",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lighter",{"_index":1059,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["lime",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limita",{"_index":2036,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["list",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lista",{"_index":327,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["listado",{"_index":902,"title":{},"body":{"injectables/BookingService.html":{}}}],["listar",{"_index":223,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["listbox",{"_index":248,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["literal",{"_index":1391,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["llama",{"_index":1339,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["llamamos",{"_index":2082,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["llamando",{"_index":2026,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["llenar",{"_index":1342,"title":{},"body":{"components/MainPageComponent.html":{}}}],["lo",{"_index":954,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["loader",{"_index":1104,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["loading",{"_index":1229,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{}}}],["loading'},{'name",{"_index":107,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["loading.component.html",{"_index":1231,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":106,"title":{"components/LoadingComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["loadinginterceptor",{"_index":2124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadingoff",{"_index":1311,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingon",{"_index":1312,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadingservice",{"_index":1234,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ViewTripComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadingservice.loadingoff",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadingservice.loadingon",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadingsubject",{"_index":1310,"title":{},"body":{"injectables/LoadingService.html":{}}}],["loadpendingreservations",{"_index":976,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["loadtrips",{"_index":270,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/MainPageComponent.html":{}}}],["loadyachts",{"_index":271,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["local",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["localmente",{"_index":2177,"title":{},"body":{"index.html":{}}}],["localstorage.getitem('authtoken",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('authtoken",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('authtoken",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":127,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login(user",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{}}}],["los",{"_index":23,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["luego",{"_index":1919,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["lugar",{"_index":517,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/Trip.html":{}}}],["lujo",{"_index":1804,"title":{},"body":{"interfaces/Trip.html":{},"interfaces/Yacht.html":{}}}],["luxury",{"_index":1802,"title":{},"body":{"interfaces/Trip.html":{}}}],["lógica",{"_index":70,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/HomeComponent.html":{}}}],["m",{"_index":1532,"title":{},"body":{"components/ProfileComponent.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["main.ts",{"_index":2243,"title":{},"body":{"index.html":{}}}],["mainpagecomponent",{"_index":108,"title":{"components/MainPageComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["maneja",{"_index":704,"title":{},"body":{"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ModalFilterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["manejar",{"_index":282,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/BookingService.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{}}}],["manejo",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{},"miscellaneous/variables.html":{}}}],["manera",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mantienen",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{}}}],["map(role",{"_index":835,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(user",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["marca",{"_index":602,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{}}}],["margin",{"_index":1298,"title":{},"body":{"components/LoadingComponent.html":{}}}],["mask",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matchesboattype",{"_index":1668,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["matchesprice",{"_index":1671,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["matchessearch",{"_index":1664,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["matching",{"_index":134,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(this.trip.yacht.capacity",{"_index":2067,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["math.random",{"_index":1147,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["max",{"_index":1748,"title":{},"body":{"components/ToastComponent.html":{}}}],["maxprice",{"_index":1372,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["maxtickets",{"_index":2015,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["mayor",{"_index":1469,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["md",{"_index":1057,"title":{},"body":{"components/CheckTicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["mediante",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"components/ModalFilterComponent.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["mejorar",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mejores",{"_index":1347,"title":{},"body":{"components/MainPageComponent.html":{}}}],["men",{"_index":982,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["menos",{"_index":1588,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["mensaje",{"_index":297,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["mensajería",{"_index":1755,"title":{},"body":{"components/ToastComponent.html":{}}}],["mensajes",{"_index":364,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":1740,"title":{},"body":{"components/SidebarComponent.html":{}}}],["message",{"_index":434,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["messageservice",{"_index":1416,"title":{},"body":{"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":47,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["methods",{"_index":157,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["miami",{"_index":1791,"title":{},"body":{"interfaces/Trip.html":{}}}],["mientras",{"_index":1085,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{}}}],["miscellaneous",{"_index":2259,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["misma",{"_index":703,"title":{},"body":{"components/AppComponent.html":{}}}],["mix(in",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mmmm",{"_index":878,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["modal",{"_index":112,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["modales",{"_index":235,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["modalfilter",{"_index":1352,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["modalfiltercomponent",{"_index":111,"title":{"components/ModalFilterComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["model",{"_index":372,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"interfaces/Yacht.html":{},"index.html":{}}}],["model/trip",{"_index":389,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"components/ViewTripComponent.html":{}}}],["model/user",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["model/yacht",{"_index":390,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/YachtService.html":{}}}],["modelo",{"_index":646,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{}}}],["modelos",{"_index":1356,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"index.html":{}}}],["models",{"_index":1407,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["modelsset",{"_index":1653,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["modelsset.add(trip.yacht.model",{"_index":1657,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["modificada",{"_index":1194,"title":{},"body":{"injectables/EmailService.html":{}}}],["modificado",{"_index":2038,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["modificar",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modo",{"_index":293,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2254,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monthdiff",{"_index":1968,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["mostrando",{"_index":2007,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["mostrar",{"_index":363,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["mricofer",{"_index":2251,"title":{},"body":{"index.html":{}}}],["mt",{"_index":1048,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["muestra",{"_index":289,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/BookingCardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["muestran",{"_index":1642,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["mutedcolor",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mytheme.ts",{"_index":2239,"title":{},"body":{"index.html":{}}}],["máxima",{"_index":2095,"title":{},"body":{"interfaces/Yacht.html":{}}}],["máximo",{"_index":1377,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["método",{"_index":182,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["métodos",{"_index":663,"title":{},"body":{"injectables/ApiService.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["módulo",{"_index":406,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["módulos",{"_index":719,"title":{},"body":{"components/AppComponent.html":{}}}],["nacimiento",{"_index":1467,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["nada",{"_index":1697,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["name",{"_index":82,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["navega",{"_index":1695,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["navegación",{"_index":40,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/LoadingComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"miscellaneous/variables.html":{}}}],["navegador",{"_index":2227,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["necesario",{"_index":999,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/SearchPageComponent.html":{},"miscellaneous/variables.html":{}}}],["necesarios",{"_index":166,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["necesita",{"_index":722,"title":{},"body":{"components/AppComponent.html":{}}}],["neutral",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":473,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"injectables/LoadingService.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"injectables/TripService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newmaxprice",{"_index":1625,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["newpassword",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["next",{"_index":417,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["next(authreq).pipe",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":2223,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":272,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["ngclass",{"_index":931,"title":{},"body":{"components/CardComponent.html":{},"components/SidebarComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["ngform",{"_index":378,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["ngforof",{"_index":1066,"title":{},"body":{"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["ngif",{"_index":929,"title":{},"body":{"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["ngoninit",{"_index":273,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["nicas",{"_index":2000,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["nico",{"_index":1814,"title":{},"body":{"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["ninguna",{"_index":1915,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["nivel",{"_index":1781,"title":{},"body":{"injectables/ToastService.html":{}}}],["niveles",{"_index":1767,"title":{},"body":{"injectables/ToastService.html":{}}}],["node.js",{"_index":2194,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":516,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{}}}],["none",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificaciones",{"_index":612,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"miscellaneous/variables.html":{}}}],["notificación",{"_index":1765,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":2195,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/ProfileComponent.html":{}}}],["nuevamente",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nuevo",{"_index":303,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckoutComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ToastComponent.html":{},"injectables/TripService.html":{},"components/ViewLoginRegisterComponent.html":{},"injectables/YachtService.html":{}}}],["nuevos",{"_index":664,"title":{},"body":{"injectables/ApiService.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["null",{"_index":356,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ModalFilterComponent.html":{},"components/SidebarComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{}}}],["nulo",{"_index":2098,"title":{},"body":{"interfaces/Yacht.html":{}}}],["number",{"_index":511,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["number(params.get('id",{"_index":2059,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["number_of_guest",{"_index":2079,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["numero",{"_index":1579,"title":{},"body":{"components/ProfileComponent.html":{}}}],["numéricos",{"_index":613,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["número",{"_index":1083,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["números",{"_index":2003,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["o",{"_index":295,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1949,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["object.keys(this.selectedmodels).filter(key",{"_index":1401,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["object.keys(this.selectedprices).filter(key",{"_index":1404,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["objeto",{"_index":376,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["objetos",{"_index":1826,"title":{},"body":{"injectables/TripService.html":{}}}],["obligatorio",{"_index":1806,"title":{},"body":{"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["obligatorios",{"_index":639,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["observable",{"_index":190,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/SidebarComponent.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["obtención",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"miscellaneous/variables.html":{}}}],["obtener",{"_index":423,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["obtenida",{"_index":600,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{}}}],["obtenidos",{"_index":1341,"title":{},"body":{"components/MainPageComponent.html":{}}}],["obteniendo",{"_index":1509,"title":{},"body":{"components/ProfileComponent.html":{},"components/SidebarComponent.html":{}}}],["obtiene",{"_index":569,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/CheckTicketsComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["obtienen",{"_index":1105,"title":{},"body":{"components/CheckoutComponent.html":{},"components/SearchPageComponent.html":{},"index.html":{}}}],["obtén",{"_index":2076,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["ocean",{"_index":1800,"title":{},"body":{"interfaces/Trip.html":{}}}],["oceanlux",{"_index":713,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["oculta",{"_index":1455,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ocultar",{"_index":2021,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["ocurra",{"_index":1497,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ocurri",{"_index":1554,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/ToastService.html":{}}}],["ocurrido",{"_index":624,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/ViewTripComponent.html":{}}}],["offset",{"_index":620,"title":{},"body":{"components/AdminYachtsComponent.html":{},"miscellaneous/variables.html":{}}}],["offsetheight",{"_index":617,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["ola",{"_index":1217,"title":{},"body":{"components/HomeComponent.html":{}}}],["oldpassword",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["omite",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omitir",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondelete",{"_index":854,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["onfilterchange",{"_index":1600,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onfiltersapplied",{"_index":1601,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onfiltersapplied(filters",{"_index":1617,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["oninit",{"_index":237,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["onpricechange",{"_index":1370,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["onpricechange(event",{"_index":1388,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["onpricechanged",{"_index":1602,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onpricechanged(newmaxprice",{"_index":1623,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onsearch",{"_index":1603,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["onsearch(query",{"_index":1626,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["opcional",{"_index":1815,"title":{},"body":{"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["opciones",{"_index":1946,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["opción",{"_index":963,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1739,"title":{},"body":{"components/SidebarComponent.html":{}}}],["openmodal",{"_index":1371,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["operaciones",{"_index":1820,"title":{},"body":{"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["operación",{"_index":1773,"title":{},"body":{"injectables/ToastService.html":{}}}],["option",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":169,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["optiongroup",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orange",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ordenación",{"_index":316,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["ordenar",{"_index":313,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["oscuro",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otras",{"_index":42,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["otro",{"_index":1553,"title":{},"body":{"components/ProfileComponent.html":{}}}],["otros",{"_index":707,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":1288,"title":{},"body":{"components/LoadingComponent.html":{},"components/SidebarComponent.html":{}}}],["output",{"_index":869,"title":{},"body":{"components/BookingCardComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchbarComponent.html":{}}}],["outputs",{"_index":857,"title":{},"body":{"components/BookingCardComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchbarComponent.html":{}}}],["overlay",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":2255,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2153,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":2248,"title":{},"body":{"index.html":{}}}],["padding",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paddingx",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paddingy",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["padre",{"_index":851,"title":{},"body":{"components/BookingCardComponent.html":{},"components/SearchbarComponent.html":{}}}],["page",{"_index":1332,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page'},{'name",{"_index":110,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["page.component.html",{"_index":1333,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts",{"_index":1330,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:112",{"_index":1633,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:123",{"_index":1612,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:137",{"_index":1616,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:147",{"_index":1624,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:158",{"_index":1627,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:168",{"_index":1610,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:191",{"_index":1621,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:205",{"_index":1618,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:34",{"_index":1334,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:37",{"_index":1640,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:44",{"_index":1628,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:49",{"_index":1338,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:50",{"_index":1634,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:56",{"_index":1643,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:58",{"_index":1335,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:63",{"_index":1635,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:70",{"_index":1638,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:76",{"_index":1606,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:93",{"_index":1615,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page/main",{"_index":1329,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["page/search",{"_index":1592,"title":{},"body":{"components/SearchPageComponent.html":{},"coverage.html":{}}}],["pago",{"_index":1063,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["pantalla",{"_index":2022,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["paquetes:*npm",{"_index":2184,"title":{},"body":{"index.html":{}}}],["para",{"_index":22,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":205,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["parameters",{"_index":167,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["params['query",{"_index":1651,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["params['token",{"_index":1877,"title":{},"body":{"components/VerificationComponent.html":{}}}],["parte",{"_index":1808,"title":{},"body":{"interfaces/Trip.html":{}}}],["partir",{"_index":908,"title":{},"body":{"injectables/BookingService.html":{}}}],["parámetro",{"_index":1870,"title":{},"body":{"components/VerificationComponent.html":{},"injectables/VerificationService.html":{}}}],["parámetros",{"_index":1607,"title":{},"body":{"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{}}}],["pasa",{"_index":1889,"title":{},"body":{"injectables/VerificationService.html":{}}}],["pasado",{"_index":928,"title":{},"body":{"components/CardComponent.html":{}}}],["pasajeros",{"_index":2086,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["paseos",{"_index":2174,"title":{},"body":{"index.html":{}}}],["password",{"_index":843,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["passwordsmismatch",{"_index":1428,"title":{},"body":{"components/ProfileComponent.html":{}}}],["paymentform",{"_index":1068,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["pendiente",{"_index":990,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["pendientes",{"_index":905,"title":{},"body":{"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["pendingreservations",{"_index":972,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["pepper",{"_index":2044,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["pequeño",{"_index":1160,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["perfil",{"_index":1414,"title":{},"body":{"components/ProfileComponent.html":{},"components/SidebarComponent.html":{}}}],["permisos",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permite",{"_index":216,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["permitido",{"_index":2025,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["permitiendo",{"_index":2008,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["permitirle",{"_index":146,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["personalizado",{"_index":312,"title":{},"body":{"components/AdminTripsComponent.html":{},"miscellaneous/variables.html":{}}}],["personalizados",{"_index":1362,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["personas",{"_index":2096,"title":{},"body":{"interfaces/Yacht.html":{}}}],["peticiones",{"_index":1842,"title":{},"body":{"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["phone_number",{"_index":1953,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["phonepattern",{"_index":1515,"title":{},"body":{"components/ProfileComponent.html":{}}}],["phonepattern.test(this.editeduser.client.phone_number",{"_index":1518,"title":{},"body":{"components/ProfileComponent.html":{}}}],["phoneregex",{"_index":1958,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["phoneregex.test(this.userdata.client.phone_number",{"_index":1960,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["phonevalid",{"_index":1429,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["php",{"_index":2180,"title":{},"body":{"index.html":{}}}],["pi",{"_index":441,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["pink",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{},"components/LoadingComponent.html":{}}}],["placeholdercolor",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plantilla",{"_index":29,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"index.html":{}}}],["plataforma",{"_index":1885,"title":{},"body":{"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["popover",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popup",{"_index":579,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["por",{"_index":467,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["posibilidad",{"_index":1415,"title":{},"body":{"components/ProfileComponent.html":{}}}],["position",{"_index":1270,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToastComponent.html":{}}}],["postgresql",{"_index":2175,"title":{},"body":{"index.html":{}}}],["precio",{"_index":519,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"components/ViewTripComponent.html":{}}}],["precios",{"_index":1357,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["prepara",{"_index":567,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["presenta",{"_index":1215,"title":{},"body":{"components/HomeComponent.html":{}}}],["preset",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previos",{"_index":2189,"title":{},"body":{"index.html":{}}}],["price",{"_index":366,"title":{},"body":{"components/AdminTripsComponent.html":{},"interfaces/Trip.html":{}}}],["pricechanged",{"_index":1375,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["priceranges",{"_index":1597,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["prices",{"_index":1408,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["primary",{"_index":1050,"title":{},"body":{"components/CheckTicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["primary.100",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.200",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.300",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.400",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.50",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.500",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.600",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.700",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.800",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary.color",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primeicons",{"_index":2164,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":230,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["primeng/api",{"_index":399,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["primeng/button",{"_index":397,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["primeng/checkbox",{"_index":2054,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["primeng/confirmpopup",{"_index":400,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["primeng/datepicker",{"_index":391,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["primeng/dialog",{"_index":1503,"title":{},"body":{"components/ProfileComponent.html":{}}}],["primeng/floatlabel",{"_index":392,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["primeng/inputnumber",{"_index":402,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["primeng/inputtext",{"_index":393,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["primeng/listbox",{"_index":396,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["primeng/password",{"_index":1956,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["primeng/selectbutton",{"_index":1955,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["primeng/table",{"_index":403,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["primeng/textarea",{"_index":394,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["primeng/themes",{"_index":2160,"title":{},"body":{"dependencies.html":{}}}],["primeng/toast",{"_index":718,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["primitive",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["principal",{"_index":17,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/MainPageComponent.html":{},"index.html":{}}}],["principales",{"_index":2231,"title":{},"body":{"index.html":{}}}],["private",{"_index":207,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["privilegios",{"_index":26,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["problema",{"_index":1498,"title":{},"body":{"components/ProfileComponent.html":{}}}],["procesa",{"_index":1098,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["procesado",{"_index":1154,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["procesando",{"_index":1144,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["procesar",{"_index":1162,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/ToastService.html":{}}}],["proceso",{"_index":1020,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ViewTripComponent.html":{}}}],["profile",{"_index":1158,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":115,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["profile.component.html",{"_index":1419,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":114,"title":{"components/ProfileComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["programática",{"_index":1865,"title":{},"body":{"components/VerificationComponent.html":{}}}],["promise",{"_index":191,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["propagar",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":255,"title":{"properties.html":{}},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"properties.html":{}}}],["propiedad",{"_index":860,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{}}}],["propietario",{"_index":1175,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["proporciona",{"_index":662,"title":{},"body":{"injectables/ApiService.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["proporcionado",{"_index":1337,"title":{},"body":{"components/MainPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["proporcionando",{"_index":1901,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["proporcionar",{"_index":1809,"title":{},"body":{"interfaces/Trip.html":{}}}],["protected",{"_index":259,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["proveedor",{"_index":408,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"miscellaneous/variables.html":{}}}],["proveedores",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":202,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/LoadingService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["providehttpclient",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideprimeng",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":239,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proxy",{"_index":2213,"title":{},"body":{"index.html":{}}}],["proxy.conf.json",{"_index":2216,"title":{},"body":{"index.html":{}}}],["proxy.conf.json5",{"_index":2226,"title":{},"body":{"index.html":{}}}],["proyecto",{"_index":2191,"title":{},"body":{"index.html":{}}}],["próxima",{"_index":1222,"title":{},"body":{"components/HomeComponent.html":{}}}],["public",{"_index":1751,"title":{},"body":{"components/ToastComponent.html":{}}}],["pudo",{"_index":1018,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewTripComponent.html":{}}}],["puede",{"_index":37,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"injectables/LoadingService.html":{},"components/ModalFilterComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{}}}],["pueden",{"_index":1942,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["puerto",{"_index":1790,"title":{},"body":{"interfaces/Trip.html":{}}}],["punto",{"_index":698,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["purple",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["px",{"_index":1053,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["py",{"_index":1055,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["página",{"_index":16,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["que",{"_index":36,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":426,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{}}}],["query.trim().tolowercase",{"_index":1662,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["queryparams",{"_index":1701,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["quieres",{"_index":628,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["r",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{}}}],["r.total_price",{"_index":1040,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["rango",{"_index":1411,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["rangos",{"_index":1639,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["raulcruzadodelgado1",{"_index":2253,"title":{},"body":{"index.html":{}}}],["rea",{"_index":609,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/CheckTicketsComponent.html":{}}}],["reactiveformsmodule",{"_index":1065,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["reactivo",{"_index":1077,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["reactivos",{"_index":605,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["readonly",{"_index":260,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["realiza",{"_index":576,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["realizados",{"_index":1461,"title":{},"body":{"components/ProfileComponent.html":{}}}],["realizan",{"_index":1225,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/YachtService.html":{}}}],["realizar",{"_index":656,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["recibe",{"_index":861,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["recibi",{"_index":1985,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["recibido",{"_index":1869,"title":{},"body":{"components/VerificationComponent.html":{}}}],["recibir",{"_index":1320,"title":{},"body":{"injectables/LoadingService.html":{}}}],["red",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["red.300",{"_index":2765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["red.400",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["red.600",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirección",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirige",{"_index":150,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"miscellaneous/variables.html":{}}}],["redirigiendo",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirigir",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"components/SearchbarComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["refencia",{"_index":1112,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["referencia",{"_index":1874,"title":{},"body":{"components/VerificationComponent.html":{}}}],["register",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["register'},{'name",{"_index":128,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["register(userdata",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":1904,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts",{"_index":1899,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{},"coverage.html":{}}}],["register.component.ts:100",{"_index":1943,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:106",{"_index":1910,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:123",{"_index":1914,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:129",{"_index":1936,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:146",{"_index":1935,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:158",{"_index":1929,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:169",{"_index":1925,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:195",{"_index":1924,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:204",{"_index":1916,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:240",{"_index":1922,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:251",{"_index":1920,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:271",{"_index":1911,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:51",{"_index":1945,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:60",{"_index":1954,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:79",{"_index":1941,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:80",{"_index":1940,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:81",{"_index":1939,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:82",{"_index":1944,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:88",{"_index":1937,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register.component.ts:94",{"_index":1948,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["register/view",{"_index":1898,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{},"coverage.html":{}}}],["registra",{"_index":1917,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["registrado",{"_index":1816,"title":{},"body":{"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["registrar",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrarse",{"_index":1900,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["registrarte",{"_index":1589,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["registro",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["registros",{"_index":542,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["regular",{"_index":1932,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["reject",{"_index":447,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["rejected",{"_index":452,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/VerificationComponent.html":{}}}],["relacionadas",{"_index":1821,"title":{},"body":{"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["relacionados",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rellena",{"_index":469,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["rendimiento",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositorio",{"_index":2201,"title":{},"body":{"index.html":{}}}],["representa",{"_index":21,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/CardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["representan",{"_index":1827,"title":{},"body":{"injectables/TripService.html":{}}}],["req",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.context.get(skipauth",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.context.get(skiploading",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.endswith('/logaccount",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.endswith('/send",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('/verify",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiere",{"_index":405,"title":{},"body":{"components/AdminTripsComponent.html":{},"miscellaneous/variables.html":{}}}],["requisitos",{"_index":2188,"title":{},"body":{"index.html":{}}}],["res.id",{"_index":1037,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["reserva",{"_index":847,"title":{},"body":{"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ViewTripComponent.html":{}}}],["reservado",{"_index":949,"title":{},"body":{"components/CardComponent.html":{}}}],["reservados",{"_index":1458,"title":{},"body":{"components/ProfileComponent.html":{}}}],["reservas",{"_index":76,"title":{},"body":{"components/AdminHomepageComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewTripComponent.html":{}}}],["reservation",{"_index":856,"title":{},"body":{"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/ViewTripComponent.html":{}}}],["reservation.number_of_guest",{"_index":874,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CheckTicketsComponent.html":{}}}],["reservation.status",{"_index":1171,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["reservation.total_price",{"_index":881,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CheckTicketsComponent.html":{}}}],["reservation.trip",{"_index":1034,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["reservation.trip?.date",{"_index":876,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["reservation.trip?.departure",{"_index":880,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["reservation.trip?.name",{"_index":872,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CheckTicketsComponent.html":{}}}],["reservationid",{"_index":991,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["reservations",{"_index":1030,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["resetea",{"_index":340,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["resetform",{"_index":274,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["responsable",{"_index":1207,"title":{},"body":{"components/HomeComponent.html":{}}}],["response",{"_index":622,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["response.id",{"_index":1980,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["response.token",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["respuesta",{"_index":678,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["restablece",{"_index":1921,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["result",{"_index":510,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["resultado",{"_index":1100,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["resultados",{"_index":1354,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{}}}],["results",{"_index":133,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumen",{"_index":1782,"title":{},"body":{"injectables/ToastService.html":{}}}],["retraso",{"_index":1713,"title":{},"body":{"components/SidebarComponent.html":{}}}],["return",{"_index":208,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/ProfileComponent.html":{},"components/SearchbarComponent.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":189,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["reutilizables",{"_index":2241,"title":{},"body":{"index.html":{}}}],["revisa",{"_index":1166,"title":{},"body":{"components/CheckoutComponent.html":{},"miscellaneous/variables.html":{}}}],["revisar",{"_index":962,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["rgba(0",{"_index":1293,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(0,0,0,0.4",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(0,0,0,0.6",{"_index":2763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(18",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(255,255,255,.87",{"_index":2762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["right",{"_index":1746,"title":{},"body":{"components/ToastComponent.html":{}}}],["rol",{"_index":144,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/SidebarComponent.html":{}}}],["role",{"_index":836,"title":{},"body":{"injectables/AuthService.html":{},"components/SidebarComponent.html":{}}}],["role.guard.ts",{"_index":139,"title":{},"body":{"guards/AdminRoleGuard.html":{},"coverage.html":{}}}],["role.guard.ts:17",{"_index":163,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["role.guard.ts:35",{"_index":181,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["role_admin",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["role_user",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["roles",{"_index":174,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{}}}],["root",{"_index":203,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/LoadingService.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"injectables/YachtService.html":{}}}],["root'},{'name",{"_index":89,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["rose",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rounded",{"_index":1056,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["route",{"_index":184,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{}}}],["routeconfigloadend",{"_index":1245,"title":{},"body":{"components/LoadingComponent.html":{}}}],["routeconfigloadstart",{"_index":1246,"title":{},"body":{"components/LoadingComponent.html":{}}}],["router",{"_index":161,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"components/SearchbarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/logaccount",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/logaccount']).then",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":930,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{}}}],["routerlink=\"/checkout",{"_index":1045,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["routermodule",{"_index":709,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["routeroutlet",{"_index":710,"title":{},"body":{"components/AppComponent.html":{}}}],["routerstatesnapshot",{"_index":180,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["row",{"_index":1682,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["ruta",{"_index":64,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/LoadingComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["rutas",{"_index":177,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/LoadingComponent.html":{},"components/VerificationComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":198,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/SidebarComponent.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":201,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{}}}],["salida",{"_index":518,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/BookingCardComponent.html":{},"components/SearchbarComponent.html":{},"interfaces/Trip.html":{}}}],["saltando",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["savechanges",{"_index":1435,"title":{},"body":{"components/ProfileComponent.html":{}}}],["saveyacht",{"_index":552,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["scripts",{"_index":2249,"title":{},"body":{"index.html":{}}}],["se",{"_index":30,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":1927,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["sean",{"_index":308,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["search",{"_index":119,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["searchbar",{"_index":1686,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["searchbar'},{'name",{"_index":117,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["searchbar.component.html",{"_index":1690,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["searchbarcomponent",{"_index":116,"title":{"components/SearchbarComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["searchevent",{"_index":1691,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["searchpagecomponent",{"_index":118,"title":{"components/SearchPageComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["searchquery",{"_index":1598,"title":{},"body":{"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{}}}],["searchyachts",{"_index":275,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["searchyachts(event",{"_index":341,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["secure",{"_index":2219,"title":{},"body":{"index.html":{}}}],["securepassword123",{"_index":1850,"title":{},"body":{"interfaces/User.html":{}}}],["seguidos",{"_index":1933,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["segura",{"_index":1852,"title":{},"body":{"interfaces/User.html":{}}}],["seguro",{"_index":437,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["según",{"_index":344,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["seleccionado",{"_index":358,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["seleccionados",{"_index":1383,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["selección",{"_index":1355,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["select",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectbuttonmodule",{"_index":1902,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["selectedbackground",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectedcolor",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectedfocusbackground",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectedfocuscolor",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectedmodels",{"_index":1365,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["selectedmodelsarray",{"_index":1400,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["selectedmodelsarray.includes(trip.yacht?.model",{"_index":1670,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["selectedmodelsarray.length",{"_index":1669,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["selectedprices",{"_index":1366,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["selectedpricesarray",{"_index":1403,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["selectedtrip",{"_index":258,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["selectedyacht",{"_index":546,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["selector",{"_index":48,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["semantic",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sending",{"_index":1990,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["sendverificationemail",{"_index":1186,"title":{},"body":{"injectables/EmailService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["sendverificationemail(userid",{"_index":1188,"title":{},"body":{"injectables/EmailService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["sent",{"_index":1989,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["ser",{"_index":684,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{}}}],["serve",{"_index":2224,"title":{},"body":{"index.html":{}}}],["service.service.ts",{"_index":655,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["service.service.ts:20",{"_index":673,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:34",{"_index":680,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:44",{"_index":675,"title":{},"body":{"injectables/ApiService.html":{}}}],["services",{"_index":2234,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":199,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["services/booking.service",{"_index":1118,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewTripComponent.html":{}}}],["services/email.service",{"_index":1957,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["services/loading.service",{"_index":2056,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["services/trip.service",{"_index":387,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{}}}],["services/yacht.service",{"_index":388,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["servicio",{"_index":170,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/TripService.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["servicios",{"_index":165,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servidor",{"_index":687,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/VerificationComponent.html":{},"index.html":{}}}],["serán",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sesión",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":1654,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["setheaders",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmaxtickets",{"_index":2019,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["settimeout",{"_index":1021,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["severidad",{"_index":1768,"title":{},"body":{"injectables/ToastService.html":{}}}],["severity",{"_index":1545,"title":{},"body":{"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["shadow",{"_index":1290,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["shopped",{"_index":933,"title":{},"body":{"components/CardComponent.html":{}}}],["shortdate",{"_index":535,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["showanimation",{"_index":1861,"title":{},"body":{"components/VerificationComponent.html":{}}}],["showcartdropdown",{"_index":973,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["showchangepasswordmodal",{"_index":1436,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showmessage",{"_index":1777,"title":{},"body":{"injectables/ToastService.html":{}}}],["showmessage(severity",{"_index":1779,"title":{},"body":{"injectables/ToastService.html":{}}}],["showmodal",{"_index":1367,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{}}}],["showsidebar",{"_index":1202,"title":{},"body":{"components/HeaderComponent.html":{}}}],["si",{"_index":141,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"miscellaneous/variables.html":{}}}],["sidebar",{"_index":35,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":120,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["sidebar.component.html",{"_index":1705,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":1204,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidebarcomponent",{"_index":53,"title":{"components/SidebarComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["sido",{"_index":935,"title":{},"body":{"components/CardComponent.html":{},"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/VerificationComponent.html":{}}}],["siente",{"_index":1216,"title":{},"body":{"components/HomeComponent.html":{}}}],["siguiente",{"_index":2217,"title":{},"body":{"index.html":{}}}],["simula",{"_index":1019,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["simulación",{"_index":1149,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["simulando",{"_index":1712,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sin",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sistema",{"_index":543,"title":{},"body":{"components/AdminYachtsComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"interfaces/Yacht.html":{}}}],["sitio",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":1283,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["skipauth",{"_index":2122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["skiploading",{"_index":2125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sky",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slate",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(0",{"_index":1133,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["sm",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sm:flex",{"_index":1679,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["sobre",{"_index":186,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/BookingService.html":{},"interfaces/Yacht.html":{}}}],["solicitada",{"_index":187,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["solicitado",{"_index":910,"title":{},"body":{"injectables/BookingService.html":{}}}],["solicitud",{"_index":1079,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/ToastService.html":{},"injectables/VerificationService.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["solicitudes",{"_index":657,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"miscellaneous/variables.html":{}}}],["solid",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solo",{"_index":1016,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/HomeComponent.html":{}}}],["son",{"_index":638,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["src",{"_index":2229,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../loading.interceptor.ts",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mytheme.ts",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":697,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:29",{"_index":715,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/admin",{"_index":9,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"coverage.html":{}}}],["src/app/features/checkout/checkout.component.ts",{"_index":1062,"title":{},"body":{"components/CheckoutComponent.html":{},"coverage.html":{}}}],["src/app/features/checkout/checkout.component.ts:122",{"_index":1078,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:139",{"_index":1081,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:151",{"_index":1092,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:165",{"_index":1088,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:175",{"_index":1096,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:203",{"_index":1101,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:225",{"_index":1094,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:38",{"_index":1111,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:44",{"_index":1108,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:50",{"_index":1106,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:56",{"_index":1110,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:62",{"_index":1113,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:68",{"_index":1076,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/checkout/checkout.component.ts:99",{"_index":1095,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1206,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/main",{"_index":1328,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/profile.component.ts",{"_index":1413,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/profile.component.ts:113",{"_index":1457,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:132",{"_index":1464,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:140",{"_index":1456,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:150",{"_index":1475,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:174",{"_index":1483,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:186",{"_index":1472,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:198",{"_index":1465,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:216",{"_index":1447,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:228",{"_index":1459,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:281",{"_index":1463,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:291",{"_index":1454,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:299",{"_index":1444,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:332",{"_index":1478,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:349",{"_index":1453,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:42",{"_index":1502,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:48",{"_index":1491,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:54",{"_index":1489,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:60",{"_index":1493,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:66",{"_index":1492,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:67",{"_index":1501,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:68",{"_index":1495,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:69",{"_index":1486,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:75",{"_index":1496,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:81",{"_index":1487,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:91",{"_index":1499,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:97",{"_index":1442,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/search",{"_index":1591,"title":{},"body":{"components/SearchPageComponent.html":{},"coverage.html":{}}}],["src/app/features/view",{"_index":1897,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["src/app/guards/admin",{"_index":138,"title":{},"body":{"guards/AdminRoleGuard.html":{},"coverage.html":{}}}],["src/app/interceptors/auth.interceptor.ts",{"_index":2119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interceptors/loading.interceptor.ts",{"_index":2123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/trip.ts",{"_index":1787,"title":{},"body":{"interfaces/Trip.html":{},"coverage.html":{}}}],["src/app/model/user.ts",{"_index":1848,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/model/yacht.ts",{"_index":2091,"title":{},"body":{"interfaces/Yacht.html":{},"coverage.html":{}}}],["src/app/mytheme.ts",{"_index":2144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/api",{"_index":654,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:100",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:109",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:118",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:128",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:139",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:159",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:168",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:180",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:201",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:28",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:38",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:55",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:71",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:90",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/booking.service.ts",{"_index":884,"title":{},"body":{"injectables/BookingService.html":{},"coverage.html":{}}}],["src/app/services/booking.service.ts:19",{"_index":892,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/services/booking.service.ts:34",{"_index":894,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/services/booking.service.ts:45",{"_index":904,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/services/booking.service.ts:55",{"_index":896,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/services/booking.service.ts:66",{"_index":913,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/services/booking.service.ts:76",{"_index":898,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/services/booking.service.ts:86",{"_index":907,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/services/email.service.ts",{"_index":1177,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/app/services/email.service.ts:21",{"_index":1187,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/services/email.service.ts:36",{"_index":1189,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/app/services/loading.service.ts",{"_index":1303,"title":{},"body":{"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading.service.ts:23",{"_index":1323,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:29",{"_index":1318,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:36",{"_index":1316,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading.service.ts:45",{"_index":1313,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/toast.service.ts",{"_index":1764,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/services/toast.service.ts:16",{"_index":1778,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:31",{"_index":1780,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/trip.service.ts",{"_index":1819,"title":{},"body":{"injectables/TripService.html":{},"coverage.html":{}}}],["src/app/services/trip.service.ts:24",{"_index":1838,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:29",{"_index":1840,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:37",{"_index":1829,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:48",{"_index":1833,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:57",{"_index":1825,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:67",{"_index":1831,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/trip.service.ts:78",{"_index":1836,"title":{},"body":{"injectables/TripService.html":{}}}],["src/app/services/verification.service.ts",{"_index":1888,"title":{},"body":{"injectables/VerificationService.html":{},"coverage.html":{}}}],["src/app/services/verification.service.ts:21",{"_index":1892,"title":{},"body":{"injectables/VerificationService.html":{}}}],["src/app/services/verification.service.ts:34",{"_index":1894,"title":{},"body":{"injectables/VerificationService.html":{}}}],["src/app/services/yacht.service.ts",{"_index":2100,"title":{},"body":{"injectables/YachtService.html":{},"coverage.html":{}}}],["src/app/services/yacht.service.ts:23",{"_index":2103,"title":{},"body":{"injectables/YachtService.html":{}}}],["src/app/services/yacht.service.ts:39",{"_index":2105,"title":{},"body":{"injectables/YachtService.html":{}}}],["src/app/services/yacht.service.ts:49",{"_index":2109,"title":{},"body":{"injectables/YachtService.html":{}}}],["src/app/services/yacht.service.ts:59",{"_index":2107,"title":{},"body":{"injectables/YachtService.html":{}}}],["src/app/services/yacht.service.ts:70",{"_index":2111,"title":{},"body":{"injectables/YachtService.html":{}}}],["src/component/booking",{"_index":844,"title":{},"body":{"components/BookingCardComponent.html":{},"coverage.html":{}}}],["src/component/card",{"_index":951,"title":{},"body":{"components/CardDetailsComponent.html":{},"coverage.html":{}}}],["src/component/card/card.component.ts",{"_index":925,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/component/card/card.component.ts:29",{"_index":934,"title":{},"body":{"components/CardComponent.html":{}}}],["src/component/card/card.component.ts:34",{"_index":937,"title":{},"body":{"components/CardComponent.html":{}}}],["src/component/card/card.component.ts:42",{"_index":939,"title":{},"body":{"components/CardComponent.html":{}}}],["src/component/check",{"_index":959,"title":{},"body":{"components/CheckTicketsComponent.html":{},"coverage.html":{}}}],["src/component/header/header.component.ts",{"_index":1199,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/component/header/header.component.ts:26",{"_index":1203,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/component/loading/loading.component.ts",{"_index":1224,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/component/loading/loading.component.ts:27",{"_index":1244,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/component/loading/loading.component.ts:36",{"_index":1235,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/component/loading/loading.component.ts:57",{"_index":1241,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/component/modal",{"_index":1349,"title":{},"body":{"components/ModalFilterComponent.html":{},"coverage.html":{}}}],["src/component/searchbar/searchbar.component.ts",{"_index":1685,"title":{},"body":{"components/SearchbarComponent.html":{},"coverage.html":{}}}],["src/component/searchbar/searchbar.component.ts:21",{"_index":1693,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["src/component/searchbar/searchbar.component.ts:26",{"_index":1692,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["src/component/searchbar/searchbar.component.ts:38",{"_index":1694,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["src/component/sidebar/sidebar.component.ts",{"_index":1703,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/component/sidebar/sidebar.component.ts:41",{"_index":1718,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/component/sidebar/sidebar.component.ts:46",{"_index":1716,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/component/sidebar/sidebar.component.ts:51",{"_index":1717,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/component/sidebar/sidebar.component.ts:56",{"_index":1709,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/component/sidebar/sidebar.component.ts:67",{"_index":1711,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/component/sidebar/sidebar.component.ts:81",{"_index":1714,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/component/sidebar/sidebar.component.ts:88",{"_index":1710,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/component/toast/toast.component.ts",{"_index":1742,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/component/toast/toast.component.ts:27",{"_index":1754,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/component/toast/toast.component.ts:33",{"_index":1761,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/component/toast/toast.component.ts:41",{"_index":1757,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/component/verification/verification.component.ts",{"_index":1855,"title":{},"body":{"components/VerificationComponent.html":{},"coverage.html":{}}}],["src/component/verification/verification.component.ts:26",{"_index":1873,"title":{},"body":{"components/VerificationComponent.html":{}}}],["src/component/verification/verification.component.ts:31",{"_index":1872,"title":{},"body":{"components/VerificationComponent.html":{}}}],["src/component/verification/verification.component.ts:36",{"_index":1863,"title":{},"body":{"components/VerificationComponent.html":{}}}],["src/component/verification/verification.component.ts:50",{"_index":1866,"title":{},"body":{"components/VerificationComponent.html":{}}}],["src/component/verification/verification.component.ts:63",{"_index":1868,"title":{},"body":{"components/VerificationComponent.html":{}}}],["srgb",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":242,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/SidebarComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["start",{"_index":524,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["startdate",{"_index":369,"title":{},"body":{"components/AdminTripsComponent.html":{},"interfaces/Trip.html":{}}}],["startdate.toisostring",{"_index":488,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["started",{"_index":2172,"title":{"index.html":{}},"body":{}}],["state",{"_index":155,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["statements",{"_index":2118,"title":{},"body":{"coverage.html":{}}}],["stateoptions",{"_index":1906,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["status",{"_index":912,"title":{},"body":{"injectables/BookingService.html":{}}}],["status/${bookingid",{"_index":922,"title":{},"body":{"injectables/BookingService.html":{}}}],["stone",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":261,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"injectables/EmailService.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["style",{"_index":1721,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":1741,"title":{},"body":{"components/ToastComponent.html":{}}}],["styles.css",{"_index":2244,"title":{},"body":{"index.html":{}}}],["su",{"_index":28,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AppComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["submenuicon",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["submenulabel",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["submitform",{"_index":1072,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["subscribe",{"_index":1260,"title":{},"body":{"components/LoadingComponent.html":{}}}],["success",{"_index":1146,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["summary",{"_index":1546,"title":{},"body":{"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["super",{"_index":2092,"title":{},"body":{"interfaces/Yacht.html":{}}}],["surface",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.0",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.100",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.200",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.300",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.400",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.50",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.500",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.600",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.700",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.800",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.900",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface.950",{"_index":2764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surname",{"_index":1951,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["sus",{"_index":324,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/ProfileComponent.html":{}}}],["suscribe",{"_index":1242,"title":{},"body":{"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{}}}],["suscribir",{"_index":1319,"title":{},"body":{"injectables/LoadingService.html":{}}}],["svg",{"_index":1295,"title":{},"body":{"components/LoadingComponent.html":{}}}],["switch",{"_index":448,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["switchmap",{"_index":2055,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["switchmap(params",{"_index":2058,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["symfony",{"_index":661,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["tabla",{"_index":315,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["tablas",{"_index":234,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["table",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["tablemodule",{"_index":252,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["tailwindcss/postcss",{"_index":2162,"title":{},"body":{"dependencies.html":{}}}],["tap",{"_index":200,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/LoadingComponent.html":{}}}],["tap((event",{"_index":1255,"title":{},"body":{"components/LoadingComponent.html":{}}}],["tap(isadmin",{"_index":210,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["tap(response",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap(user",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{}}}],["tareas",{"_index":1226,"title":{},"body":{"components/LoadingComponent.html":{}}}],["target",{"_index":431,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"index.html":{}}}],["tarjeta",{"_index":849,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckoutComponent.html":{}}}],["tarjetas",{"_index":1331,"title":{},"body":{"components/MainPageComponent.html":{}}}],["te",{"_index":2001,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["teal",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tecnologías",{"_index":2181,"title":{},"body":{"index.html":{}}}],["teléfono",{"_index":1484,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["tema",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temas",{"_index":2240,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["templateurl",{"_index":54,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["tener",{"_index":1587,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"index.html":{}}}],["teniendo",{"_index":2028,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["terminado",{"_index":948,"title":{},"body":{"components/CardComponent.html":{},"injectables/LoadingService.html":{}}}],["text",{"_index":1051,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["text.color",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text.hover.color",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text.muted.color",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textarea",{"_index":247,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["texto",{"_index":608,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/SearchPageComponent.html":{}}}],["theme",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.activeform",{"_index":1986,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.adminroleguard.canactivate(route",{"_index":154,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["this.alltrips",{"_index":1648,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.alltrips.filter(trip",{"_index":1663,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.alltrips.foreach(trip",{"_index":1655,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.apiservice.createuser(userdata).subscribe(response",{"_index":667,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.apiservice.getusers",{"_index":666,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.applyfilters",{"_index":1660,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.authservice.changepassword(oldpassword",{"_index":1562,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.authservice.getauthenticateduser().subscribe",{"_index":1504,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.authservice.getuserid().subscribe",{"_index":1012,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/ViewTripComponent.html":{}}}],["this.authservice.getuserrole().subscribe(role",{"_index":1733,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.isadmin().pipe",{"_index":209,"title":{},"body":{"guards/AdminRoleGuard.html":{}}}],["this.authservice.isauthenticated",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/SidebarComponent.html":{}}}],["this.authservice.login(this.user).subscribe",{"_index":1995,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.authservice.login(user).subscribe(response",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.logout",{"_index":1736,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.authservice.register(this.userdata).subscribe",{"_index":1979,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.authservice.updateuser(this.editeduser).subscribe",{"_index":1543,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.authstatus.asobservable",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatus.next(false",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatus.next(true",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.baseprice",{"_index":2048,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.birthdatevalid",{"_index":1535,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["this.bookingservice.createreservation(reservation).subscribe",{"_index":2083,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.bookingservice.createreservation(reservation).subscribe(response",{"_index":885,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingservice.deletereservation(reservationid).subscribe",{"_index":1035,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.bookingservice.getconfirmedreservations(this.user.id).subscribe",{"_index":1569,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bookingservice.getpendingreservationsbyuser(this.userid).subscribe",{"_index":1029,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.bookingservice.gettripbyid(booking.trip_id).subscribe",{"_index":1572,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.bookingservice.updatereservationstatus(reservation.id",{"_index":1169,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.calculatetotal",{"_index":2063,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.changepassworddata",{"_index":1559,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.changepassworddata.confirmpassword",{"_index":1568,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.changepassworddata.newpassword",{"_index":1567,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.closemodal",{"_index":1409,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["this.confirmationservice.confirm",{"_index":430,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["this.confirmpopup",{"_index":615,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.confirmpopup.nativeelement",{"_index":616,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.confirmpopup.nativeelement.offsetheight",{"_index":618,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.createtrip",{"_index":446,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.currentuserid",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuserrole.asobservable",{"_index":833,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuserrole.next(user.rol",{"_index":832,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.delete.emit(this.reservation.id",{"_index":870,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["this.detectroutetransitions",{"_index":1251,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.displaychangepasswordmodal",{"_index":1558,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.displaymodal",{"_index":1510,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dnivalid",{"_index":1964,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.editeduser",{"_index":1506,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.emailservice.sendverificationemail(userid).subscribe",{"_index":1987,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.emailservice.sendverificationemail(userid).subscribe(response",{"_index":1185,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.emailvalid",{"_index":1525,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["this.errormessage",{"_index":1994,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.extra.reduce((acc",{"_index":2070,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.extractyachtmodels",{"_index":1649,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.extrasprices[curr",{"_index":2072,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.fb.group",{"_index":1121,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.filteredyachts",{"_index":420,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.filtersapplied.emit",{"_index":1406,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["this.getauthenticateduser().pipe",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettoken",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettripsbooked",{"_index":1508,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserrole().pipe",{"_index":834,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getyachts",{"_index":614,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.hidechangepasswordmodal",{"_index":1564,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${id",{"_index":1846,"title":{},"body":{"injectables/TripService.html":{}}}],["this.http.delete(`${this.apiurl}/delete/${id",{"_index":920,"title":{},"body":{"injectables/BookingService.html":{},"injectables/YachtService.html":{}}}],["this.http.get(`${this.apiurl}/${id",{"_index":1844,"title":{},"body":{"injectables/TripService.html":{}}}],["this.http.get(`${this.apiurl}/all",{"_index":2113,"title":{},"body":{"injectables/YachtService.html":{}}}],["this.http.get(`${this.apiurl}/confirmed/${userid",{"_index":923,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.http.get(`${this.apiurl}/list",{"_index":1845,"title":{},"body":{"injectables/TripService.html":{}}}],["this.http.get(`${this.apiurl}/pending/${userid",{"_index":919,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.http.get(`${this.apiurl}/user/me",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.apiurl}/users",{"_index":692,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${this.apiurl}?token=${token",{"_index":1896,"title":{},"body":{"injectables/VerificationService.html":{}}}],["this.http.get(`${this.backendurl}?token=${token}`).subscribe",{"_index":1879,"title":{},"body":{"components/VerificationComponent.html":{}}}],["this.http.get(`/api/trip/${tripid",{"_index":924,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.http.post(`${this.apiurl}/create",{"_index":918,"title":{},"body":{"injectables/BookingService.html":{},"injectables/TripService.html":{},"injectables/YachtService.html":{}}}],["this.http.post(`${this.apiurl}/login_check",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/user/create",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.apiurl}/users",{"_index":696,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(this.apiurl",{"_index":1195,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.http.put(`${this.apiurl}/${id",{"_index":1847,"title":{},"body":{"injectables/TripService.html":{}}}],["this.http.put(`${this.apiurl}/update",{"_index":921,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.http.put(`${this.apiurl}/update/${id",{"_index":2114,"title":{},"body":{"injectables/YachtService.html":{}}}],["this.http.put(`${this.apiurl}/user/change",{"_index":842,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(`${this.apiurl}/user/update/${this.currentuserid",{"_index":840,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initializeyacht",{"_index":594,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.isbooking",{"_index":2075,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.iseditmode",{"_index":435,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["this.isloading",{"_index":1022,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/SidebarComponent.html":{}}}],["this.isloggedin",{"_index":1011,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/SidebarComponent.html":{}}}],["this.issidebaropen",{"_index":1735,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.loading",{"_index":1249,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingservice.loading",{"_index":1250,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.loadingservice.loadingoff",{"_index":1259,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ViewTripComponent.html":{}}}],["this.loadingservice.loadingon",{"_index":1257,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/ViewTripComponent.html":{}}}],["this.loadingsubject.asobservable",{"_index":1317,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(false",{"_index":1327,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadingsubject.next(true",{"_index":1326,"title":{},"body":{"injectables/LoadingService.html":{}}}],["this.loadpendingreservations",{"_index":1014,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.loadtrips",{"_index":410,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/MainPageComponent.html":{}}}],["this.loadyachts",{"_index":409,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.maxprice",{"_index":1397,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.maxtickets",{"_index":2065,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.messageservice.add",{"_index":1544,"title":{},"body":{"components/ProfileComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["this.onsearch(params['query",{"_index":1652,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.passwordsmismatch",{"_index":1560,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.paymentform",{"_index":1120,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.paymentform.patchvalue",{"_index":1137,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.paymentform.reset",{"_index":1156,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.paymentform.valid",{"_index":1143,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.pendingreservations",{"_index":1031,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.pendingreservations.filter(res",{"_index":1036,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.pendingreservations.foreach(reservation",{"_index":1032,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.pendingreservations.length",{"_index":1168,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.pendingreservations.reduce((acc",{"_index":1038,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["this.phonevalid",{"_index":1517,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["this.pricechanged.emit(this.maxprice",{"_index":1399,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["this.resetform",{"_index":478,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["this.route.parammap.pipe",{"_index":2057,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":1650,"title":{},"body":{"components/SearchPageComponent.html":{},"components/VerificationComponent.html":{}}}],["this.router.events",{"_index":1254,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.router.navigate",{"_index":1996,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.router.navigate(['/logaccount']).then(r",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/profile",{"_index":1157,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.router.navigate(['/search",{"_index":212,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/SearchbarComponent.html":{}}}],["this.saveyacht",{"_index":630,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.searchevent.emit(query",{"_index":1702,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.searchquery",{"_index":1661,"title":{},"body":{"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{}}}],["this.searchquery.trim",{"_index":1700,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.selectedmodels[key",{"_index":1402,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.selectedmodels[model",{"_index":1672,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.selectedprices[key",{"_index":1405,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["this.selectedprices[price",{"_index":1674,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.selectedtrip",{"_index":479,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.selectedyacht",{"_index":625,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.sendverificationemail(response.id",{"_index":1983,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.setmaxtickets",{"_index":2062,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.showanimation",{"_index":1880,"title":{},"body":{"components/VerificationComponent.html":{}}}],["this.showcartdropdown",{"_index":1024,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["this.showmodal",{"_index":1396,"title":{},"body":{"components/ModalFilterComponent.html":{}}}],["this.toast",{"_index":411,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.toast.addmessage('error",{"_index":466,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.toast.addmessage('info",{"_index":451,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckoutComponent.html":{},"components/VerificationComponent.html":{}}}],["this.toast.addmessage('success",{"_index":475,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.toast.addmessage('warn",{"_index":455,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.toastservice.showmessage('error",{"_index":1776,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.showmessage('success",{"_index":1772,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.totalprice",{"_index":2073,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.trip",{"_index":480,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ViewTripComponent.html":{}}}],["this.trip.description",{"_index":465,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.trip.duration_hours",{"_index":464,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.trip.enddate",{"_index":459,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.trip.name",{"_index":462,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.trip.price",{"_index":463,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.trip.startdate",{"_index":458,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.trip.yacht",{"_index":460,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.trip.yacht.capacity",{"_index":2066,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.trip.yacht.id",{"_index":461,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.trip?.yacht?.capacity",{"_index":2064,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.tripform",{"_index":499,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.tripform.resetform",{"_index":500,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.tripid",{"_index":2078,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.trips",{"_index":425,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.tripsbooked",{"_index":1570,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.tripsbooked.foreach((booking",{"_index":1571,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.tripsbooked[index].trip",{"_index":1573,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.tripservice",{"_index":414,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.tripservice.alltrips().subscribe",{"_index":424,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.tripservice.alltrips().subscribe(trips",{"_index":1345,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.tripservice.createtrip(newtrip).subscribe(response",{"_index":1822,"title":{},"body":{"injectables/TripService.html":{}}}],["this.tripservice.deletetrip(1).subscribe(response",{"_index":1824,"title":{},"body":{"injectables/TripService.html":{}}}],["this.tripservice.deletetrip(trip.id!).subscribe",{"_index":497,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.tripservice.gettripbyid(1).subscribe(response",{"_index":1823,"title":{},"body":{"injectables/TripService.html":{}}}],["this.tripservice.gettripbyid(reservation.trip_id).subscribe(trip",{"_index":1033,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.tripservice.updatetrip(this.selectedtrip.id",{"_index":490,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.updatereservationstatus",{"_index":1155,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.updatetrip",{"_index":445,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.updateyacht",{"_index":629,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.user",{"_index":1505,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.password",{"_index":1993,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.user.username",{"_index":1992,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.user?.id",{"_index":1507,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdata",{"_index":1991,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.client.address",{"_index":1978,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.client.birthdate",{"_index":1966,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.client.dni",{"_index":1977,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.client.name",{"_index":1975,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.client.phone_number",{"_index":1959,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.client.surname",{"_index":1976,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.email",{"_index":1974,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.password",{"_index":1972,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userdata.username",{"_index":1973,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["this.userid",{"_index":1013,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.userrole",{"_index":1734,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.validatebirthdate",{"_index":1514,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.validateemail",{"_index":1513,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.validateform",{"_index":1542,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.validatepasswordform",{"_index":1561,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.validatephonenumber",{"_index":1512,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.value",{"_index":2074,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["this.verificationservice.verifyemail(token).subscribe(response",{"_index":1890,"title":{},"body":{"injectables/VerificationService.html":{}}}],["this.verifyaccount(token",{"_index":1878,"title":{},"body":{"components/VerificationComponent.html":{}}}],["this.yacht",{"_index":626,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yacht).subscribe",{"_index":632,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yacht.capacity",{"_index":637,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yacht.description",{"_index":635,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yacht.image",{"_index":634,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yacht.model",{"_index":636,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yacht.name",{"_index":633,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yachtform.resetform",{"_index":644,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yachtmodels",{"_index":1658,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.yachts",{"_index":419,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["this.yachts.filter(yacht",{"_index":428,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["this.yachtservice.createyacht(newyacht).subscribe(response",{"_index":2101,"title":{},"body":{"injectables/YachtService.html":{}}}],["this.yachtservice.createyacht(this.yacht).subscribe",{"_index":640,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yachtservice.deleteyacht(yacht.id!).subscribe",{"_index":643,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["this.yachtservice.getyachts().subscribe",{"_index":416,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["this.yachtservice.updateyacht(this.selectedyacht.id",{"_index":631,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["throw",{"_index":837,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tickets",{"_index":873,"title":{},"body":{"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/HeaderComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{}}}],["tickets'},{'name",{"_index":101,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["tickets.component",{"_index":1205,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tickets.component.html",{"_index":969,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts",{"_index":961,"title":{},"body":{"components/CheckTicketsComponent.html":{},"coverage.html":{}}}],["tickets.component.ts:101",{"_index":980,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:112",{"_index":995,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:137",{"_index":989,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:153",{"_index":992,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:31",{"_index":1006,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:36",{"_index":1003,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:41",{"_index":1004,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:46",{"_index":1005,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:51",{"_index":978,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:66",{"_index":998,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets.component.ts:92",{"_index":1000,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["tickets/check",{"_index":960,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["tiene",{"_index":143,"title":{},"body":{"guards/AdminRoleGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["tienes",{"_index":1044,"title":{},"body":{"components/CheckTicketsComponent.html":{},"miscellaneous/variables.html":{}}}],["tipo",{"_index":574,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{}}}],["title",{"_index":712,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":262,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/CheckoutComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["toast'},{'name",{"_index":122,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["toast.component.html",{"_index":1750,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.component",{"_index":1876,"title":{},"body":{"components/VerificationComponent.html":{}}}],["toastcomponent",{"_index":121,"title":{"components/ToastComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["toastmodule",{"_index":1418,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["toastservice",{"_index":1763,"title":{"injectables/ToastService.html":{}},"body":{"injectables/ToastService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastservice.showmessage('error",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todas",{"_index":994,"title":{},"body":{"components/CheckTicketsComponent.html":{},"interfaces/Trip.html":{},"components/VerificationComponent.html":{},"interfaces/Yacht.html":{}}}],["today",{"_index":472,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["today.getdate",{"_index":1970,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["today.getfullyear",{"_index":1530,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["today.getmonth",{"_index":1533,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["todos",{"_index":306,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"components/ViewLoginRegisterComponent.html":{},"injectables/YachtService.html":{}}}],["togglecartdropdown",{"_index":977,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["togglesidebar",{"_index":1708,"title":{},"body":{"components/SidebarComponent.html":{}}}],["token",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":1299,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToastComponent.html":{}}}],["total",{"_index":967,"title":{},"body":{"components/CheckTicketsComponent.html":{},"interfaces/Trip.html":{},"components/ViewTripComponent.html":{}}}],["total_price",{"_index":2080,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["totalprice",{"_index":2016,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["tour",{"_index":1788,"title":{},"body":{"interfaces/Trip.html":{}}}],["tours",{"_index":1348,"title":{},"body":{"components/MainPageComponent.html":{}}}],["transacción",{"_index":1099,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["transform",{"_index":1728,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transiciones",{"_index":1228,"title":{},"body":{"components/LoadingComponent.html":{}}}],["transition",{"_index":1722,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transition(':enter",{"_index":1727,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transition(':leave",{"_index":1732,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transition.duration",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transitionduration",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":1729,"title":{},"body":{"components/SidebarComponent.html":{}}}],["translatex(0",{"_index":1731,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transparent",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transportar",{"_index":2097,"title":{},"body":{"interfaces/Yacht.html":{}}}],["tras",{"_index":679,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{}}}],["través",{"_index":1305,"title":{},"body":{"injectables/LoadingService.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["triangle",{"_index":443,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["trigger",{"_index":1720,"title":{},"body":{"components/SidebarComponent.html":{}}}],["trigger('sidebaranimation",{"_index":1726,"title":{},"body":{"components/SidebarComponent.html":{}}}],["trim",{"_index":1136,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["trip",{"_index":130,"title":{"interfaces/Trip.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["trip.component.html",{"_index":2010,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts",{"_index":2005,"title":{},"body":{"components/ViewTripComponent.html":{},"coverage.html":{}}}],["trip.component.ts:122",{"_index":2030,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:154",{"_index":2033,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:164",{"_index":2027,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:175",{"_index":2023,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:44",{"_index":2051,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:50",{"_index":2052,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:56",{"_index":2039,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:62",{"_index":2053,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:68",{"_index":2037,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:74",{"_index":2047,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:80",{"_index":2046,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:90",{"_index":2049,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.component.ts:96",{"_index":2020,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.departure",{"_index":529,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/ViewTripComponent.html":{}}}],["trip.departure.tolowercase().includes(this.searchquery.tolowercase",{"_index":1665,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["trip.description",{"_index":534,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ViewTripComponent.html":{}}}],["trip.duration_hours",{"_index":533,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/ViewTripComponent.html":{}}}],["trip.enddate",{"_index":483,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trip.enddate.split('t')[0",{"_index":484,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trip.name",{"_index":528,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/ViewTripComponent.html":{}}}],["trip.name.tolowercase().includes(this.searchquery.tolowercase",{"_index":1666,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["trip.price",{"_index":530,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardDetailsComponent.html":{},"components/SearchPageComponent.html":{}}}],["trip.startdate",{"_index":481,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{}}}],["trip.startdate.split('t')[0",{"_index":482,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trip.yacht.capacity",{"_index":2087,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["trip.yacht.model",{"_index":536,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/ViewTripComponent.html":{}}}],["trip.yacht.name",{"_index":958,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["trip.yacht?.model",{"_index":1656,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["trip.yacht?.name?.tolowercase().includes(this.searchquery.tolowercase",{"_index":1667,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["trip/view",{"_index":2004,"title":{},"body":{"components/ViewTripComponent.html":{},"coverage.html":{}}}],["trip_id",{"_index":2077,"title":{},"body":{"components/ViewTripComponent.html":{}}}],["tripdate",{"_index":942,"title":{},"body":{"components/CardComponent.html":{}}}],["tripform",{"_index":263,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["tripid",{"_index":909,"title":{},"body":{"injectables/BookingService.html":{},"components/ViewTripComponent.html":{}}}],["trips",{"_index":241,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{}}}],["trips'},{'name",{"_index":85,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["trips.component.html",{"_index":254,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts",{"_index":214,"title":{},"body":{"components/AdminTripsComponent.html":{},"coverage.html":{}}}],["trips.component.ts:112",{"_index":338,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:121",{"_index":330,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:133",{"_index":329,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:148",{"_index":325,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:164",{"_index":342,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:175",{"_index":288,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:199",{"_index":301,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:246",{"_index":322,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:260",{"_index":345,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:291",{"_index":318,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:313",{"_index":339,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:345",{"_index":311,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:367",{"_index":359,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:56",{"_index":362,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:59",{"_index":380,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:62",{"_index":375,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:81",{"_index":383,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:84",{"_index":351,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:87",{"_index":382,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:90",{"_index":357,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.component.ts:93",{"_index":280,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["trips.length",{"_index":1675,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["trips/admin",{"_index":213,"title":{},"body":{"components/AdminTripsComponent.html":{},"coverage.html":{}}}],["tripsbooked",{"_index":1430,"title":{},"body":{"components/ProfileComponent.html":{}}}],["tripservice",{"_index":278,"title":{"injectables/TripService.html":{}},"body":{"components/AdminTripsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["triptosend",{"_index":487,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["triptosend).subscribe",{"_index":491,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["true",{"_index":194,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2168,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1153,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tus",{"_index":1582,"title":{},"body":{"components/ProfileComponent.html":{}}}],["type",{"_index":168,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":513,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["término",{"_index":1689,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["título",{"_index":716,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["ubicación",{"_index":1807,"title":{},"body":{"interfaces/Trip.html":{}}}],["un",{"_index":32,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["una",{"_index":148,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"components/ToastComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["updatepassword",{"_index":1908,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["updatepassword(event",{"_index":1923,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["updatereservationstatus",{"_index":891,"title":{},"body":{"injectables/BookingService.html":{},"components/CheckoutComponent.html":{}}}],["updatereservationstatus(bookingid",{"_index":911,"title":{},"body":{"injectables/BookingService.html":{}}}],["updatetrip",{"_index":276,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/TripService.html":{}}}],["updatetrip(id",{"_index":1835,"title":{},"body":{"injectables/TripService.html":{}}}],["updateuser",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser(user",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateyacht",{"_index":553,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/YachtService.html":{}}}],["updateyacht(id",{"_index":2110,"title":{},"body":{"injectables/YachtService.html":{}}}],["updating",{"_index":1555,"title":{},"body":{"components/ProfileComponent.html":{}}}],["url",{"_index":682,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EmailService.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["url('/img_1.png",{"_index":1282,"title":{},"body":{"components/LoadingComponent.html":{}}}],["url(\\'/img_1.png",{"_index":1302,"title":{},"body":{"components/LoadingComponent.html":{}}}],["usa",{"_index":1314,"title":{},"body":{"injectables/LoadingService.html":{}}}],["usamos",{"_index":1981,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["usando",{"_index":1449,"title":{},"body":{"components/ProfileComponent.html":{}}}],["usar",{"_index":59,"title":{},"body":{"components/AdminHomepageComponent.html":{}}}],["user",{"_index":782,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"coverage.html":{}}}],["user).pipe",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.client?.name",{"_index":1576,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.client?.phone_number",{"_index":1580,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.client?.surname",{"_index":1578,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.email",{"_index":1581,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.id",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":1196,"title":{},"body":{"injectables/EmailService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["userdata",{"_index":676,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["userid",{"_index":900,"title":{},"body":{"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["username",{"_index":1451,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["username.substring(0",{"_index":1539,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userrole",{"_index":1707,"title":{},"body":{"components/SidebarComponent.html":{}}}],["users",{"_index":665,"title":{},"body":{"injectables/ApiService.html":{}}}],["uso",{"_index":62,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["usuario",{"_index":142,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SidebarComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["usuario/oceanlux",{"_index":2205,"title":{},"body":{"index.html":{}}}],["usuarios",{"_index":24,"title":{},"body":{"components/AdminHomepageComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"index.html":{}}}],["utiliza",{"_index":227,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AppComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{}}}],["utilizadas",{"_index":2182,"title":{},"body":{"index.html":{}}}],["utilizado",{"_index":596,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"injectables/ToastService.html":{},"interfaces/Trip.html":{},"interfaces/Yacht.html":{}}}],["utilizando",{"_index":1336,"title":{},"body":{"components/MainPageComponent.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["utilizar",{"_index":601,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["vacía",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["vacío",{"_index":1696,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["valida",{"_index":1466,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["validaciones",{"_index":457,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["validación",{"_index":470,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/ProfileComponent.html":{}}}],["validar",{"_index":1445,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["validatebirthdate",{"_index":1437,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["validatedni",{"_index":1909,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["validateemail",{"_index":1438,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["validateform",{"_index":1439,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validatepasswordform",{"_index":1440,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validatephonenumber",{"_index":1441,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["validators",{"_index":1115,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.pattern(/^(0[1",{"_index":1127,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.pattern(/^\\d{3",{"_index":1130,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.pattern(/^\\d{4",{"_index":1124,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.required",{"_index":1123,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["valor",{"_index":1306,"title":{},"body":{"injectables/LoadingService.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["valores",{"_index":572,"title":{},"body":{"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["value",{"_index":350,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/EmailService.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"injectables/TripService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"injectables/YachtService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1139,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["value.replace(/(\\d{4})/g",{"_index":1135,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["value.slice(0",{"_index":1140,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["value.slice(2",{"_index":1141,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["value1",{"_index":503,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["value1.localecompare(value2",{"_index":514,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["value1?.[field",{"_index":508,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["value2",{"_index":504,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["value2?.[field",{"_index":509,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["var",{"_index":80,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["variable",{"_index":1698,"title":{},"body":{"components/SearchbarComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2260,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varios",{"_index":228,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["ventana",{"_index":557,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["ver",{"_index":965,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/SearchPageComponent.html":{}}}],["verifica",{"_index":140,"title":{},"body":{"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/CardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{}}}],["verificación",{"_index":1181,"title":{},"body":{"injectables/EmailService.html":{},"components/VerificationComponent.html":{},"injectables/VerificationService.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["verificada",{"_index":1881,"title":{},"body":{"components/VerificationComponent.html":{}}}],["verificando",{"_index":305,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["verificar",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/VerificationService.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":1192,"title":{},"body":{"injectables/EmailService.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["verification'},{'name",{"_index":124,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["verification.component.html",{"_index":1859,"title":{},"body":{"components/VerificationComponent.html":{}}}],["verificationcomponent",{"_index":123,"title":{"components/VerificationComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["verificationmessage",{"_index":1907,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["verificationservice",{"_index":1887,"title":{"injectables/VerificationService.html":{}},"body":{"injectables/VerificationService.html":{},"coverage.html":{}}}],["verifyaccount",{"_index":1862,"title":{},"body":{"components/VerificationComponent.html":{}}}],["verifyaccount(token",{"_index":1867,"title":{},"body":{"components/VerificationComponent.html":{}}}],["verifyemail",{"_index":1891,"title":{},"body":{"injectables/VerificationService.html":{}}}],["verifyemail(token",{"_index":1893,"title":{},"body":{"injectables/VerificationService.html":{}}}],["version",{"_index":2257,"title":{},"body":{"properties.html":{}}}],["vez",{"_index":1982,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["viaje",{"_index":304,"title":{},"body":{"components/AdminTripsComponent.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"components/ViewTripComponent.html":{}}}],["viajes",{"_index":74,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"injectables/BookingService.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"injectables/TripService.html":{},"components/ViewTripComponent.html":{},"index.html":{}}}],["vida",{"_index":332,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/MainPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["view",{"_index":126,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["viewchild",{"_index":384,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/VerificationComponent.html":{}}}],["viewchild('confirmpopup",{"_index":586,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["viewchild('tripform",{"_index":379,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["viewchild('yachtform",{"_index":597,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["viewchild(toastcomponent",{"_index":361,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/CheckoutComponent.html":{},"components/VerificationComponent.html":{}}}],["viewloginregistercomponent",{"_index":125,"title":{"components/ViewLoginRegisterComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["viewtripcomponent",{"_index":129,"title":{"components/ViewTripComponent.html":{}},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"coverage.html":{}}}],["violet",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visibilidad",{"_index":1002,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{}}}],["visible",{"_index":1007,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["vista",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["vistas",{"_index":335,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["visualización",{"_index":706,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SidebarComponent.html":{},"components/VerificationComponent.html":{},"components/ViewTripComponent.html":{},"miscellaneous/variables.html":{}}}],["visualizar",{"_index":926,"title":{},"body":{"components/CardComponent.html":{}}}],["vive",{"_index":1218,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":300,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/AuthService.html":{},"components/BookingCardComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoadingService.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["vuelta",{"_index":1999,"title":{},"body":{"components/ViewLoginRegisterComponent.html":{}}}],["válido",{"_index":1462,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["válidos",{"_index":309,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["warn",{"_index":1759,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["web",{"_index":2173,"title":{},"body":{"index.html":{}}}],["white",{"_index":1052,"title":{},"body":{"components/CheckTicketsComponent.html":{},"components/LoadingComponent.html":{}}}],["width",{"_index":1296,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["withinterceptors([authinterceptor",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrap",{"_index":1683,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["x",{"_index":1043,"title":{},"body":{"components/CheckTicketsComponent.html":{}}}],["xito",{"_index":1151,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProfileComponent.html":{},"injectables/ToastService.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["xl",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xs",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":41,"title":{},"body":{"components/AdminHomepageComponent.html":{},"guards/AdminRoleGuard.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Trip.html":{},"injectables/TripService.html":{},"interfaces/User.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":1551,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/Trip.html":{},"interfaces/User.html":{},"components/ViewLoginRegisterComponent.html":{},"interfaces/Yacht.html":{}}}],["yacht",{"_index":348,"title":{"interfaces/Yacht.html":{}},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"interfaces/Trip.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{},"coverage.html":{}}}],["yacht.capacity",{"_index":651,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yacht.model",{"_index":650,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yacht.model.tolowercase().includes(query",{"_index":429,"title":{},"body":{"components/AdminTripsComponent.html":{}}}],["yacht.name",{"_index":649,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachtform",{"_index":547,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachtmodels",{"_index":1373,"title":{},"body":{"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{}}}],["yachts",{"_index":264,"title":{},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{}}}],["yachts'},{'name",{"_index":87,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/AppComponent.html":{},"components/BookingCardComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CheckTicketsComponent.html":{},"components/CheckoutComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MainPageComponent.html":{},"components/ModalFilterComponent.html":{},"components/ProfileComponent.html":{},"components/SearchPageComponent.html":{},"components/SearchbarComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"components/VerificationComponent.html":{},"components/ViewLoginRegisterComponent.html":{},"components/ViewTripComponent.html":{}}}],["yachts.component.html",{"_index":544,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts",{"_index":538,"title":{},"body":{"components/AdminYachtsComponent.html":{},"coverage.html":{}}}],["yachts.component.ts:102",{"_index":570,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:115",{"_index":568,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:131",{"_index":566,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:142",{"_index":556,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:158",{"_index":585,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:176",{"_index":583,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:200",{"_index":563,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:223",{"_index":582,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:49",{"_index":593,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:52",{"_index":587,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:55",{"_index":598,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:58",{"_index":595,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:61",{"_index":599,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:64",{"_index":592,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:67",{"_index":555,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:83",{"_index":580,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts.component.ts:90",{"_index":575,"title":{},"body":{"components/AdminYachtsComponent.html":{}}}],["yachts/admin",{"_index":537,"title":{},"body":{"components/AdminYachtsComponent.html":{},"coverage.html":{}}}],["yachtservice",{"_index":279,"title":{"injectables/YachtService.html":{}},"body":{"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"injectables/YachtService.html":{},"coverage.html":{}}}],["yate",{"_index":560,"title":{},"body":{"components/AdminYachtsComponent.html":{},"components/SearchPageComponent.html":{},"interfaces/Trip.html":{},"components/ViewTripComponent.html":{},"interfaces/Yacht.html":{},"injectables/YachtService.html":{}}}],["yates",{"_index":75,"title":{},"body":{"components/AdminHomepageComponent.html":{},"components/AdminTripsComponent.html":{},"components/AdminYachtsComponent.html":{},"components/ModalFilterComponent.html":{},"components/SearchPageComponent.html":{},"injectables/YachtService.html":{}}}],["yellow",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yyyy",{"_index":879,"title":{},"body":{"components/BookingCardComponent.html":{}}}],["z",{"_index":1281,"title":{},"body":{"components/LoadingComponent.html":{},"components/ToastComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["z0",{"_index":1521,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["z]{2",{"_index":1524,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["za",{"_index":1520,"title":{},"body":{"components/ProfileComponent.html":{},"components/ViewLoginRegisterComponent.html":{}}}],["zinc",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zona",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":2170,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminHomepageComponent.html":{"url":"components/AdminHomepageComponent.html","title":"component - AdminHomepageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminHomepageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/admin-homepage/admin-homepage.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de la página principal del administrador.\nEste componente representa la página principal para los usuarios con privilegios de administrador.\nEn su plantilla, se integra un componente de barra lateral (sidebar) que puede contener enlaces de navegación y otras herramientas para el administrador.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-homepage\n            \n\n\n            \n                imports\n                \n                                SidebarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-homepage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SidebarComponent } from '../../../component/sidebar/sidebar.component';\n\n/**\n * Componente de la página principal del administrador.\n *\n * Este componente representa la página principal para los usuarios con privilegios de administrador.\n * En su plantilla, se integra un componente de barra lateral (sidebar) que puede contener enlaces de navegación y otras herramientas para el administrador.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-admin-homepage', // Selector para usar este componente en HTML\n  imports: [\n    SidebarComponent // Componente de barra lateral importado para su uso en esta página\n  ],\n  templateUrl: './admin-homepage.component.html' // Ruta de la plantilla asociada al componente\n})\nexport class AdminHomepageComponent {\n  // Este componente puede incluir lógica específica para la página de inicio del administrador\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n      \n        Administrar Viajes\n      \n    \n  \n\n  \n  \n    \n    \n      \n        Administrar Yates\n      \n    \n  \n\n  \n  \n    \n    \n      \n        Administrar Reservas\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Administrar Viajes                                      Administrar Yates                                      Administrar Reservas            '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminHomepageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminRoleGuard.html":{"url":"guards/AdminRoleGuard.html","title":"guard - AdminRoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminRoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/admin-role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard que verifica si el usuario tiene el rol de administrador antes de permitirle acceder a una ruta.\nSi el usuario no tiene el rol de administrador, se le redirige a la página de búsqueda.\nExample :const canActivate = this.adminRoleGuard.canActivate(route, state);\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/admin-role.guard.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta los servicios necesarios.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio encargado de gestionar la autenticación y los roles de usuario.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que gestiona la navegación entre rutas.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/admin-role.guard.ts:35\n                        \n                    \n\n\n            \n                \n                        Método que determina si se puede acceder a la ruta. Verifica si el usuario tiene el rol de administrador.\nSi no tiene el rol de administrador, redirige al usuario a la página de búsqueda.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información sobre la ruta solicitada.\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información sobre el estado de la ruta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean\n\n                        \n                            \n                                Un observable que emite true si el usuario tiene el rol de administrador, false si no.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { tap } from 'rxjs/operators';\n\n/**\n * Guard que verifica si el usuario tiene el rol de administrador antes de permitirle acceder a una ruta.\n * Si el usuario no tiene el rol de administrador, se le redirige a la página de búsqueda.\n *\n * @example\n * const canActivate = this.adminRoleGuard.canActivate(route, state);\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminRoleGuard implements CanActivate {\n\n  /**\n   * Constructor que inyecta los servicios necesarios.\n   *\n   * @param authService Servicio encargado de gestionar la autenticación y los roles de usuario.\n   * @param router Servicio que gestiona la navegación entre rutas.\n   */\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Método que determina si se puede acceder a la ruta. Verifica si el usuario tiene el rol de administrador.\n   * Si no tiene el rol de administrador, redirige al usuario a la página de búsqueda.\n   *\n   * @param route Información sobre la ruta solicitada.\n   * @param state Información sobre el estado de la ruta.\n   * @returns Un observable que emite `true` si el usuario tiene el rol de administrador, `false` si no.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean {\n    return this.authService.isAdmin().pipe(\n      tap(isAdmin => {\n        if (!isAdmin) {\n          this.router.navigate(['/search']);  // Redirige si no tiene rol de admin\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminTripsComponent.html":{"url":"components/AdminTripsComponent.html","title":"component - AdminTripsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminTripsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/admin-trips/admin-trips.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la administración de viajes.\nEste componente permite a los administradores gestionar los viajes disponibles en la aplicación.\nPuede crear, editar, eliminar y listar viajes, además de interactuar con un servicio de gestión de yates.\nUtiliza varios componentes de PrimeNG para la interfaz de usuario, como formularios, tablas y modales de confirmación.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-admin-trips\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            FloatLabel\n                            InputText\n                            Textarea\n                                HeaderComponent\n                            Listbox\n                            Button\n                            ConfirmPopupModule\n                                ToastComponent\n                            InputNumber\n                            TableModule\n                            DatePicker\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-trips.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredYachts\n                            \n                            \n                                isEditMode\n                            \n                            \n                                selectedTrip\n                            \n                            \n                                    Protected\n                                    Readonly\n                                String\n                            \n                            \n                                    \n                                toast\n                            \n                            \n                                trip\n                            \n                            \n                                    \n                                tripForm\n                            \n                            \n                                trips\n                            \n                            \n                                yachts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmSubmit\n                            \n                            \n                                createTrip\n                            \n                            \n                                customSort\n                            \n                            \n                                deleteTrip\n                            \n                            \n                                editTrip\n                            \n                            \n                                loadTrips\n                            \n                            \n                                loadYachts\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetForm\n                            \n                            \n                                searchYachts\n                            \n                            \n                                updateTrip\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tripService: TripService, yachtService: YachtService, confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:93\n                            \n                        \n\n                \n                    \n                            Constructor para inyectar los servicios necesarios.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar los viajes\n\n                                                        \n                                                \n                                                \n                                                        yachtService\n                                                  \n                                                        \n                                                                        YachtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar los yates\n\n                                                        \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar las confirmaciones de acción\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmSubmit\n                        \n                    \n                \n            \n            \n                \nconfirmSubmit(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Muestra una confirmación antes de enviar el formulario.\nDependiendo del modo (creación o edición), muestra un mensaje de confirmación diferente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de confirmación\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTrip\n                        \n                    \n                \n            \n            \n                \ncreateTrip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:199\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo viaje, verificando que todos los campos sean válidos.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customSort\n                        \n                    \n                \n            \n            \n                \ncustomSort(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:345\n                        \n                    \n\n\n            \n                \n                        Método personalizado para ordenar datos en la tabla.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de ordenación\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTrip\n                        \n                    \n                \n            \n            \n                \ndeleteTrip(trip: Trip)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:291\n                        \n                    \n\n\n            \n                \n                        Borra un viaje después de la confirmación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                trip\n                                            \n                                                            Trip\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Viaje a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTrip\n                        \n                    \n                \n            \n            \n                \neditTrip(trip: Trip)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:246\n                        \n                    \n\n\n            \n                \n                        Permite editar un viaje, cargando sus datos en el formulario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                trip\n                                            \n                                                            Trip\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Viaje a editar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTrips\n                        \n                    \n                \n            \n            \n                \nloadTrips()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Carga la lista de viajes desde el servicio.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYachts\n                        \n                    \n                \n            \n            \n                \nloadYachts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Carga la lista de yates desde el servicio.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida AfterViewInit.\nSe ejecuta después de la inicialización de las vistas, verifica si los componentes necesarios están inicializados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida OnInit.\nCarga los datos de los viajes y los yates.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:313\n                        \n                    \n\n\n            \n                \n                        Resetea el formulario y el estado del componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchYachts\n                        \n                    \n                \n            \n            \n                \nsearchYachts(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Filtra la lista de yates según la búsqueda del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de búsqueda\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTrip\n                        \n                    \n                \n            \n            \n                \nupdateTrip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-trips/admin-trips.component.ts:260\n                        \n                    \n\n\n            \n                \n                        Actualiza un viaje existente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredYachts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Yacht[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:84\n                        \n                    \n\n            \n                \n                    Lista filtrada de yates basada en la búsqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:93\n                        \n                    \n\n            \n                \n                    Indicador de si estamos en modo de edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTrip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:90\n                        \n                    \n\n            \n                \n                    Viaje seleccionado para edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        String\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:367\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ToastComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:56\n                        \n                    \n\n            \n                \n                    Componente Toast para mostrar mensajes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: '',\n    departure: '',\n    price: 0,\n    duration_hours: 0,\n    description: '',\n    startdate: '',\n    enddate: '',\n    yacht: {\n      id: 0,\n      name: '',\n      model: '',\n      image: '',\n      description: '',\n      capacity: 0\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:62\n                        \n                    \n\n            \n                \n                    Objeto trip para almacenar datos del viaje\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tripForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgForm\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tripForm')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:59\n                        \n                    \n\n            \n                \n                    Formulario para la creación/edición de viajes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:87\n                        \n                    \n\n            \n                \n                    Lista de viajes disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yachts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Yacht[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-trips/admin-trips.component.ts:81\n                        \n                    \n\n            \n                \n                    Lista de yates disponibles\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { TripService } from '../../services/trip.service';\nimport { YachtService } from '../../services/yacht.service';\nimport { Trip } from '../../model/trip';\nimport { Yacht } from '../../model/yacht';\nimport { DatePicker } from 'primeng/datepicker';\nimport { FloatLabel } from 'primeng/floatlabel';\nimport { InputText } from 'primeng/inputtext';\nimport { Textarea } from 'primeng/textarea';\nimport { HeaderComponent } from '../../../component/header/header.component';\nimport { Listbox } from 'primeng/listbox';\nimport { Button } from 'primeng/button';\nimport { ConfirmationService, ConfirmEventType } from 'primeng/api';\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\nimport { ToastComponent } from '../../../component/toast/toast.component';\nimport { InputNumber } from 'primeng/inputnumber';\nimport { TableModule } from 'primeng/table';\n\n/**\n * Componente para la administración de viajes.\n *\n * Este componente permite a los administradores gestionar los viajes disponibles en la aplicación.\n * Puede crear, editar, eliminar y listar viajes, además de interactuar con un servicio de gestión de yates.\n *\n * Utiliza varios componentes de PrimeNG para la interfaz de usuario, como formularios, tablas y modales de confirmación.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-admin-trips',\n  standalone: true, // Componente autónomo, no requiere un módulo específico\n  imports: [\n    CommonModule,\n    FormsModule,\n    FloatLabel,\n    InputText,\n    Textarea,\n    HeaderComponent,\n    Listbox,\n    Button,\n    ConfirmPopupModule,\n    ToastComponent,\n    InputNumber,\n    TableModule,\n    DatePicker\n  ],\n  templateUrl: './admin-trips.component.html', // Ruta a la plantilla HTML\n  providers: [ConfirmationService] // Proveedor para el servicio de confirmación\n})\nexport class AdminTripsComponent implements OnInit, AfterViewInit {\n\n  /** Componente Toast para mostrar mensajes */\n  @ViewChild(ToastComponent) toast!: ToastComponent;\n\n  /** Formulario para la creación/edición de viajes */\n  @ViewChild('tripForm') tripForm!: NgForm;\n\n  /** Objeto trip para almacenar datos del viaje */\n  trip: Trip = {\n    name: '',\n    departure: '',\n    price: 0,\n    duration_hours: 0,\n    description: '',\n    startdate: '',\n    enddate: '',\n    yacht: {\n      id: 0,\n      name: '',\n      model: '',\n      image: '',\n      description: '',\n      capacity: 0\n    }\n  };\n\n  /** Lista de yates disponibles */\n  yachts: Yacht[] = [];\n\n  /** Lista filtrada de yates basada en la búsqueda */\n  filteredYachts: Yacht[] = [];\n\n  /** Lista de viajes disponibles */\n  trips: Trip[] = [];\n\n  /** Viaje seleccionado para edición */\n  selectedTrip: Trip | null = null;\n\n  /** Indicador de si estamos en modo de edición */\n  isEditMode: boolean = false;\n\n  /**\n   * Constructor para inyectar los servicios necesarios.\n   *\n   * @param tripService Servicio para gestionar los viajes\n   * @param yachtService Servicio para gestionar los yates\n   * @param confirmationService Servicio para manejar las confirmaciones de acción\n   */\n  constructor(\n    private tripService: TripService,\n    private yachtService: YachtService,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  /**\n   * Método del ciclo de vida OnInit.\n   * Carga los datos de los viajes y los yates.\n   */\n  ngOnInit(): void {\n    this.loadYachts();\n    this.loadTrips();\n  }\n\n  /**\n   * Método del ciclo de vida AfterViewInit.\n   * Se ejecuta después de la inicialización de las vistas, verifica si los componentes necesarios están inicializados.\n   */\n  ngAfterViewInit(): void {\n    if (!this.toast) {\n      console.error('ToastComponent is not initialized');\n    }\n    if (!this.tripService) {\n      console.error('TripService is not initialized');\n    }\n  }\n\n  /**\n   * Carga la lista de yates desde el servicio.\n   */\n  loadYachts(): void {\n    this.yachtService.getYachts().subscribe({\n      next: (data: Yacht[]) => {\n        this.yachts = data;\n        this.filteredYachts = data;\n      },\n      error: (error) => {\n        console.error('Error al obtener los yates:', error);\n      }\n    });\n  }\n\n  /**\n   * Carga la lista de viajes desde el servicio.\n   */\n  loadTrips(): void {\n    this.tripService.allTrips().subscribe({\n      next: (data: Trip[]) => {\n        this.trips = data;\n      },\n      error: (error) => {\n        console.error('Error al obtener los viajes:', error);\n      }\n    });\n  }\n\n  /**\n   * Filtra la lista de yates según la búsqueda del usuario.\n   *\n   * @param event Evento de búsqueda\n   */\n  searchYachts(event: any) {\n    const query = event.query.toLowerCase();\n    this.filteredYachts = this.yachts.filter(yacht => yacht.model.toLowerCase().includes(query));\n  }\n\n  /**\n   * Muestra una confirmación antes de enviar el formulario.\n   * Dependiendo del modo (creación o edición), muestra un mensaje de confirmación diferente.\n   *\n   * @param event Evento de confirmación\n   */\n  confirmSubmit(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.isEditMode ? '¿Estás seguro de que deseas actualizar este viaje?' : '¿Estás seguro de que deseas crear este viaje?',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.isEditMode ? this.updateTrip() : this.createTrip();\n      },\n      reject: (type: ConfirmEventType) => {\n        switch (type) {\n          case ConfirmEventType.REJECT:\n            this.toast.addMessage('info', 'Rejected', 'You have rejected');\n            break;\n          case ConfirmEventType.CANCEL:\n            this.toast.addMessage('warn', 'Cancelled', 'You have cancelled');\n            break;\n        }\n      }\n    });\n  }\n\n  /**\n   * Crea un nuevo viaje, verificando que todos los campos sean válidos.\n   */\n  createTrip() {\n    // Validaciones del formulario\n    if (!this.trip.startdate || !this.trip.enddate || !this.trip.yacht || !this.trip.yacht.id || !this.trip.name || !this.trip.price || !this.trip.duration_hours || !this.trip.description) {\n      this.toast.addMessage('error', 'Error', 'Por favor, rellena todos los campos.');\n      return;\n    }\n\n    // Validación de fechas\n    const today = new Date().toISOString().split('T')[0];\n\n    if (this.trip.enddate  {\n        this.toast.addMessage('success', 'Creado', 'Viaje creado correctamente');\n        this.loadTrips();\n        this.resetForm();\n      },\n      error: () => {\n        this.toast.addMessage('error', 'Error', 'Error al crear el viaje');\n      }\n    });\n  }\n\n  /**\n   * Permite editar un viaje, cargando sus datos en el formulario.\n   *\n   * @param trip Viaje a editar\n   */\n  editTrip(trip: Trip): void {\n    this.selectedTrip = { ...trip };\n    this.trip = {\n      ...trip,\n      startdate: trip.startdate ? trip.startdate.split('T')[0] : '',\n      enddate: trip.enddate ? trip.enddate.split('T')[0] : ''\n    };\n\n    this.isEditMode = true;\n  }\n\n  /**\n   * Actualiza un viaje existente.\n   */\n  updateTrip(): void {\n    if (!this.selectedTrip) return;\n\n    const startDate = new Date(this.trip.startdate);\n    const endDate = new Date(this.trip.enddate);\n\n    const tripToSend: Trip = {\n      ...this.trip,\n      startdate: startDate.toISOString(),\n      enddate: endDate.toISOString(),\n      yacht: { ...this.trip.yacht }\n    };\n\n    this.tripService.updateTrip(this.selectedTrip.id!, tripToSend).subscribe({\n      next: () => {\n        this.toast.addMessage('success', 'Actualizado', 'Viaje actualizado correctamente');\n        this.loadTrips();\n        this.resetForm();\n      },\n      error: (error) => {\n        console.error('Error en updateTrip:', error);\n        this.toast.addMessage('error', 'Error', 'Error al actualizar el viaje');\n      }\n    });\n  }\n\n  /**\n   * Borra un viaje después de la confirmación.\n   *\n   * @param trip Viaje a eliminar\n   */\n  deleteTrip(trip: Trip): void {\n    this.confirmationService.confirm({\n      message: 'estás seguro de que deseas borrar este viaje?',\n      header: 'Confirm Deletion',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.tripService.deleteTrip(trip.id!).subscribe({\n          next: () => {\n            this.toast.addMessage('success', 'Borrado', 'Viaje borrado correctamente');\n            this.loadTrips();\n          },\n          error: (error) => {\n            this.toast.addMessage('error', 'Error', 'Error al borrar el viaje');\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Resetea el formulario y el estado del componente.\n   */\n  resetForm(): void {\n    this.trip = {\n      name: '',\n      departure: '',\n      price: 0,\n      duration_hours: 0,\n      description: '',\n      startdate: '',\n      enddate: '',\n      yacht: {\n        id: 0,\n        name: '',\n        model: '',\n        image: '',\n        description: '',\n        capacity: 0\n      }\n    };\n\n    if (this.tripForm) {\n      this.tripForm.resetForm();\n    }\n\n    this.selectedTrip = null;\n    this.isEditMode = false;\n  }\n\n  /**\n   * Método personalizado para ordenar datos en la tabla.\n   *\n   * @param event Evento de ordenación\n   */\n  customSort(event: any) {\n    event.data.sort((a: any, b: any) => {\n      let value1 = a;\n      let value2 = b;\n\n      const fieldPath = event.field.split('.');\n      for (const field of fieldPath) {\n        value1 = value1?.[field];\n        value2 = value2?.[field];\n      }\n\n      let result: number;\n      if (value1 == null && value2 != null) result = -1;\n      else if (value1 != null && value2 == null) result = 1;\n      else if (typeof value1 === 'string' && typeof value2 === 'string')\n        result = value1.localeCompare(value2);\n      else result = value1  value2 ? 1 : 0;\n\n      return event.order * result;\n    });\n  }\n\n  protected readonly String = String;\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    {{ isEditMode ? 'Edición de Viaje' : 'Creación de Viajes' }}\n\n    \n      \n        \n        Nombre del viaje\n      \n\n        \n        \n        Lugar de salida\n      \n\n      \n        \n          \n          Precio\n        \n\n        \n          \n          Duración\n        \n      \n\n      \n        \n        Descripción\n      \n\n      \n        \n          \n          \n        \n      \n\n      \n        \n      \n      \n        \n\n      \n    \n  \n\n  \n    \n      \n        \n          \n            Name\n            \n          \n          \n            Departure\n            \n          \n          \n            Price\n            \n          \n          \n            Duration (Hours)\n            \n          \n          \n            Description\n            \n          \n          \n            Start Date\n            \n          \n          \n            End Date\n            \n          \n          \n            Yacht Model\n            \n          \n          Actions\n        \n      \n      \n        \n          {{ trip.name }}\n          {{ trip.departure }}\n          {{ trip.price | currency: 'EUR' }}\n          {{ trip.duration_hours }}\n          {{ trip.description }}\n          {{ trip.startdate | date: 'shortDate' }}\n          {{ trip.enddate | date: 'shortDate' }}\n          {{ trip.yacht.model }}\n          \n            \n            \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ isEditMode ? \\'Edición de Viaje\\' : \\'Creación de Viajes\\' }}                          Nombre del viaje                              Lugar de salida                                        Precio                                    Duración                                    Descripción                                                                                                                                              Name                                            Departure                                            Price                                            Duration (Hours)                                            Description                                            Start Date                                            End Date                                            Yacht Model                                Actions                                      {{ trip.name }}          {{ trip.departure }}          {{ trip.price | currency: \\'EUR\\' }}          {{ trip.duration_hours }}          {{ trip.description }}          {{ trip.startdate | date: \\'shortDate\\' }}          {{ trip.enddate | date: \\'shortDate\\' }}          {{ trip.yacht.model }}                                                      '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminTripsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminYachtsComponent.html":{"url":"components/AdminYachtsComponent.html","title":"component - AdminYachtsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminYachtsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/admin-yachts/admin-yachts.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la administración de yates.\nEste componente permite a los administradores gestionar los yates, incluyendo funcionalidades para crear, editar,\neliminar y listar yates. Se integra con el servicio de YachtService para interactuar con la base de datos y\nactualizar los registros de yates en el sistema.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-admin-yachts\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            FloatLabel\n                            InputText\n                            Textarea\n                                HeaderComponent\n                            Button\n                                ToastComponent\n                            ConfirmPopupModule\n                            InputNumber\n                            TableModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-yachts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                confirmPopup\n                            \n                            \n                                isEditMode\n                            \n                            \n                                selectedYacht\n                            \n                            \n                                    \n                                toast\n                            \n                            \n                                Yacht\n                            \n                            \n                                    \n                                yachtForm\n                            \n                            \n                                Yachts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmSubmit\n                            \n                            \n                                deleteYacht\n                            \n                            \n                                editYacht\n                            \n                            \n                                getYachts\n                            \n                            \n                                initializeYacht\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetForm\n                            \n                            \n                                saveYacht\n                            \n                            \n                                updateYacht\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(yachtService: YachtService, confirmationService: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/admin-yachts/admin-yachts.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor para inyectar los servicios necesarios.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        yachtService\n                                                  \n                                                        \n                                                                        YachtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar los yates\n\n                                                        \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar las confirmaciones de acción\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmSubmit\n                        \n                    \n                \n            \n            \n                \nconfirmSubmit(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Muestra una ventana emergente de confirmación antes de guardar o actualizar el yate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de acción que disparó la confirmación\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteYacht\n                        \n                    \n                \n            \n            \n                \ndeleteYacht(yacht: Yacht, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:200\n                        \n                    \n\n\n            \n                \n                        Elimina un yate después de confirmación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                yacht\n                                            \n                                                            Yacht\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Yate a eliminar\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de acción que disparó la confirmación\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editYacht\n                        \n                    \n                \n            \n            \n                \neditYacht(yacht: Yacht)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Prepara los datos del yate seleccionado para la edición.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                yacht\n                                            \n                                                            Yacht\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Yate a editar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYachts\n                        \n                    \n                \n            \n            \n                \ngetYachts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de yates desde el servicio.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeYacht\n                        \n                    \n                \n            \n            \n                \ninitializeYacht()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Inicializa el objeto Yacht con valores por defecto.\n\n\n                        \n                            Returns :         Yacht\n\n                        \n                            \n                                Un objeto de tipo Yacht con valores inicializados.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida AfterViewInit. Realiza una comprobación de la altura del popup de confirmación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida OnInit. Carga la lista de yates al iniciar el componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:223\n                        \n                    \n\n\n            \n                \n                        Resetea el formulario y el estado del componente después de crear o editar un yate.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveYacht\n                        \n                    \n                \n            \n            \n                \nsaveYacht()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:176\n                        \n                    \n\n\n            \n                \n                        Guarda un nuevo yate en el sistema.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateYacht\n                        \n                    \n                \n            \n            \n                \nupdateYacht()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin-yachts/admin-yachts.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Actualiza un yate existente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        confirmPopup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('confirmPopup')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-yachts/admin-yachts.component.ts:52\n                        \n                    \n\n            \n                \n                    Componente de confirmación para mostrar mensajes de alerta\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-yachts/admin-yachts.component.ts:67\n                        \n                    \n\n            \n                \n                    Indica si el modo actual es de edición o creación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedYacht\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Yacht | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-yachts/admin-yachts.component.ts:64\n                        \n                    \n\n            \n                \n                    Yate seleccionado para edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ToastComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-yachts/admin-yachts.component.ts:49\n                        \n                    \n\n            \n                \n                    Componente Toast para mostrar mensajes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Yacht\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Yacht\n\n                    \n                \n                \n                    \n                        Default value : this.initializeYacht()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-yachts/admin-yachts.component.ts:58\n                        \n                    \n\n            \n                \n                    Objeto de yate utilizado para crear o editar un yate\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        yachtForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgForm\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('yachtForm')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-yachts/admin-yachts.component.ts:55\n                        \n                    \n\n            \n                \n                    Formulario de yate para la creación/edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Yachts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Yacht[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin-yachts/admin-yachts.component.ts:61\n                        \n                    \n\n            \n                \n                    Lista de yates obtenida desde el servicio\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { YachtService } from '../../services/yacht.service';\nimport { Yacht } from '../../model/yacht';\nimport { FloatLabel } from 'primeng/floatlabel';\nimport { InputText } from 'primeng/inputtext';\nimport { Textarea } from 'primeng/textarea';\nimport { HeaderComponent } from '../../../component/header/header.component';\nimport { Button } from 'primeng/button';\nimport { ConfirmationService } from 'primeng/api';\nimport { ToastComponent } from '../../../component/toast/toast.component';\nimport { InputNumber } from 'primeng/inputnumber';\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\nimport { TableModule } from 'primeng/table';\n\n/**\n * Componente para la administración de yates.\n *\n * Este componente permite a los administradores gestionar los yates, incluyendo funcionalidades para crear, editar,\n * eliminar y listar yates. Se integra con el servicio de `YachtService` para interactuar con la base de datos y\n * actualizar los registros de yates en el sistema.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-admin-yachts', // Selector para utilizar el componente en HTML\n  standalone: true, // Marca este componente como autónomo\n  imports: [\n    CommonModule, // Módulo común de Angular\n    FormsModule, // Módulo para formularios reactivos\n    FloatLabel, // Componente de PrimeNG para etiquetas flotantes\n    InputText, // Componente de PrimeNG para campos de texto\n    Textarea, // Componente de PrimeNG para área de texto\n    HeaderComponent, // Componente de encabezado\n    Button, // Componente de PrimeNG para botones\n    ToastComponent, // Componente para mostrar notificaciones (Toast)\n    ConfirmPopupModule, // Módulo para confirmaciones en ventana emergente\n    InputNumber, // Componente de PrimeNG para campos numéricos\n    TableModule // Módulo para manejar tablas en PrimeNG\n  ],\n  templateUrl: './admin-yachts.component.html', // Ruta a la plantilla HTML del componente\n  providers: [ConfirmationService] // Proveedor para servicio de confirmación\n})\nexport class AdminYachtsComponent implements OnInit, AfterViewInit {\n\n  /** Componente Toast para mostrar mensajes */\n  @ViewChild(ToastComponent) toast!: ToastComponent;\n\n  /** Componente de confirmación para mostrar mensajes de alerta */\n  @ViewChild('confirmPopup') confirmPopup!: any;\n\n  /** Formulario de yate para la creación/edición */\n  @ViewChild('yachtForm') yachtForm!: NgForm;\n\n  /** Objeto de yate utilizado para crear o editar un yate */\n  Yacht: Yacht = this.initializeYacht();\n\n  /** Lista de yates obtenida desde el servicio */\n  Yachts: Yacht[] = [];\n\n  /** Yate seleccionado para edición */\n  selectedYacht: Yacht | null = null;\n\n  /** Indica si el modo actual es de edición o creación */\n  isEditMode: boolean = false;\n\n  /**\n   * Constructor para inyectar los servicios necesarios.\n   *\n   * @param yachtService Servicio para gestionar los yates\n   * @param confirmationService Servicio para manejar las confirmaciones de acción\n   */\n  constructor(\n    private yachtService: YachtService,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  /**\n   * Método del ciclo de vida OnInit. Carga la lista de yates al iniciar el componente.\n   */\n  ngOnInit(): void {\n    this.getYachts();\n  }\n\n  /**\n   * Método del ciclo de vida AfterViewInit. Realiza una comprobación de la altura del popup de confirmación.\n   */\n  ngAfterViewInit(): void {\n    if (this.confirmPopup && this.confirmPopup.nativeElement) {\n      const offsetHeight = this.confirmPopup.nativeElement.offsetHeight;\n      console.log('Confirm Popup Offset Height:', offsetHeight);\n    }\n  }\n\n  /**\n   * Inicializa el objeto `Yacht` con valores por defecto.\n   *\n   * @returns Un objeto de tipo `Yacht` con valores inicializados.\n   */\n  initializeYacht(): Yacht {\n    return {\n      name: '',\n      model: '',\n      image: '',\n      description: '',\n      capacity: null\n    };\n  }\n\n  /**\n   * Obtiene la lista de yates desde el servicio.\n   */\n  getYachts(): void {\n    this.yachtService.getYachts().subscribe(\n      response => {\n        this.Yachts = response;\n      },\n      error => {\n        this.toast.addMessage('error', 'Error', 'Ha ocurrido un error al obtener los yates');\n      }\n    );\n  }\n\n  /**\n   * Prepara los datos del yate seleccionado para la edición.\n   *\n   * @param yacht Yate a editar\n   */\n  editYacht(yacht: Yacht): void {\n    this.selectedYacht = { ...yacht };\n    this.Yacht = { ...yacht };\n    this.isEditMode = true;\n  }\n\n  /**\n   * Muestra una ventana emergente de confirmación antes de guardar o actualizar el yate.\n   *\n   * @param event Evento de acción que disparó la confirmación\n   */\n  confirmSubmit(event: Event): void {\n    event.preventDefault();\n\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.isEditMode ? '¿Estás seguro de que quieres actualizar este yate?' : '¿Estás seguro de que quieres guardar este yate?',\n      accept: () => {\n        this.isEditMode ? this.updateYacht() : this.saveYacht();\n        this.resetForm();\n      }\n    });\n  }\n\n  /**\n   * Actualiza un yate existente.\n   */\n  updateYacht(): void {\n    if (!this.selectedYacht) return;\n\n    this.yachtService.updateYacht(this.selectedYacht.id!, this.Yacht).subscribe(\n      () => {\n        this.toast.addMessage('success', 'Yate actualizado', 'El yate se ha actualizado correctamente');\n        this.getYachts();\n        this.resetForm();\n      },\n      () => {\n        this.toast.addMessage('error', 'Error', 'Ha ocurrido un error al actualizar el yate');\n      }\n    );\n  }\n\n  /**\n   * Guarda un nuevo yate en el sistema.\n   */\n  saveYacht(): void {\n    if (!this.Yacht.name || !this.Yacht.image || !this.Yacht.description || !this.Yacht.model || !this.Yacht.capacity) {\n      this.toast.addMessage('error', 'Error', 'Todos los campos son obligatorios');\n      return;\n    }\n\n    this.yachtService.createYacht(this.Yacht).subscribe(\n      () => {\n        this.toast.addMessage('success', 'Yate creado', 'El yate se ha creado correctamente');\n        this.getYachts();\n        this.resetForm();\n      },\n      () => {\n        this.toast.addMessage('error', 'Error', 'Ha ocurrido un error al crear el yate');\n      }\n    );\n  }\n\n  /**\n   * Elimina un yate después de confirmación.\n   *\n   * @param yacht Yate a eliminar\n   * @param event Evento de acción que disparó la confirmación\n   */\n  deleteYacht(yacht: Yacht, event: Event): void {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: '¿Estás seguro de que deseas borrar este yate?',\n      header: 'Confirmar eliminación',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.yachtService.deleteYacht(yacht.id!).subscribe(\n          () => {\n            this.toast.addMessage('success', 'Borrado', 'Yate borrado correctamente');\n            this.getYachts();\n          },\n          () => {\n            this.toast.addMessage('error', 'Error', 'Error al borrar el yate');\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Resetea el formulario y el estado del componente después de crear o editar un yate.\n   */\n  resetForm(): void {\n    this.Yacht = this.initializeYacht();\n    this.selectedYacht = null;\n    this.isEditMode = false;\n    this.yachtForm.resetForm();\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    {{ isEditMode ? 'Editar Yate' : 'Creación de Yates' }}\n\n    \n      \n        \n        Nombre del yate\n      \n\n      \n        \n        Imagen\n      \n\n      \n        \n        Modelo\n      \n\n      \n        \n        Descripción\n      \n\n      \n        \n        Capacidad\n      \n\n      \n        \n        \n      \n    \n  \n\n  \n    \n      \n        \n          Nombre \n          Modelo \n          Capacidad \n          Acciones\n        \n      \n      \n        \n          {{ yacht.name }}\n          {{ yacht.model }}\n          {{ yacht.capacity }}\n          \n            \n              \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ isEditMode ? \\'Editar Yate\\' : \\'Creación de Yates\\' }}                          Nombre del yate                            Imagen                            Modelo                            Descripción                            Capacidad                                                                      Nombre           Modelo           Capacidad           Acciones                                      {{ yacht.name }}          {{ yacht.model }}          {{ yacht.capacity }}                                                                                            '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminYachtsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de realizar las solicitudes HTTP hacia la API de Symfony.\nEste servicio proporciona métodos para obtener usuarios y crear nuevos usuarios.\nExample :const users = this.apiService.getUsers();\nthis.apiService.createUser(userData).subscribe(response => { ... });\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-service.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta el servicio HttpClient para realizar solicitudes HTTP.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio HttpClient utilizado para realizar solicitudes HTTP.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Método que crea un nuevo usuario en la API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos del usuario que se desea crear.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta de la API tras la creación del usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Método que obtiene la lista de usuarios desde la API.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la lista de usuarios.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-service.service.ts:20\n                        \n                    \n\n            \n                \n                    URL base de la API. Debe ser cambiada según la configuración del servidor de backend.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de realizar las solicitudes HTTP hacia la API de Symfony.\n * Este servicio proporciona métodos para obtener usuarios y crear nuevos usuarios.\n *\n * @example\n * const users = this.apiService.getUsers();\n * this.apiService.createUser(userData).subscribe(response => { ... });\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  /**\n   * URL base de la API. Debe ser cambiada según la configuración del servidor de backend.\n   */\n  private apiUrl = 'http://localhost:8000/api'; // Cambia según la URL de Symfony\n\n  /**\n   * Constructor que inyecta el servicio HttpClient para realizar solicitudes HTTP.\n   *\n   * @param http Servicio HttpClient utilizado para realizar solicitudes HTTP.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Método que obtiene la lista de usuarios desde la API.\n   *\n   * @returns Un observable que emite la lista de usuarios.\n   */\n  getUsers(): Observable {\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n\n  /**\n   * Método que crea un nuevo usuario en la API.\n   *\n   * @param userData Datos del usuario que se desea crear.\n   * @returns Un observable que emite la respuesta de la API tras la creación del usuario.\n   */\n  createUser(userData: any): Observable {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post(`${this.apiUrl}/users`, userData, { headers });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación.\nEste componente es el punto de entrada de la aplicación y contiene la estructura básica de la misma.\nSu plantilla maneja el enrutamiento y la visualización de otros componentes importantes como el indicador de carga y las notificaciones.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            RouterOutlet\n                                LoadingComponent\n                            Toast\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OceanLux-FrontEnd'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Título de la aplicación.\nSe utiliza en la plantilla para mostrar el nombre de la aplicación o en el encabezado de la misma.\nExample :{{ title }}\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\nimport { LoadingComponent } from '../component/loading/loading.component';\nimport { Toast } from 'primeng/toast';\n\n/**\n * Componente principal de la aplicación.\n *\n * Este componente es el punto de entrada de la aplicación y contiene la estructura básica de la misma.\n * Su plantilla maneja el enrutamiento y la visualización de otros componentes importantes como el indicador de carga y las notificaciones.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-root', // Selector del componente en el HTML\n  imports: [RouterModule, RouterOutlet, LoadingComponent, Toast], // Módulos y componentes importados para su uso en este componente\n  templateUrl: './app.component.html', // Ruta de la plantilla asociada al componente\n  standalone: true // Marca el componente como independiente, no necesita un módulo\n})\nexport class AppComponent {\n  /**\n   * Título de la aplicación.\n   * Se utiliza en la plantilla para mostrar el nombre de la aplicación o en el encabezado de la misma.\n   *\n   * @example\n   * {{ title }}\n   */\n  title = 'OceanLux-FrontEnd';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de la autenticación de usuarios, incluyendo el login, registro,\nobtención de datos del usuario autenticado, manejo de roles, y cierre de sesión.\nExample :const isAuthenticated = this.authService.isAuthenticated();\nthis.authService.login(user).subscribe(response => { ... });\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                authStatus\n                            \n                            \n                                    Private\n                                currentUserId\n                            \n                            \n                                    Private\n                                currentUserRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                getAuthenticatedUser\n                            \n                            \n                                getToken\n                            \n                            \n                                getUserId\n                            \n                            \n                                getUserRole\n                            \n                            \n                                    Private\n                                hasToken\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta los servicios necesarios para la autenticación y redirección.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio HttpClient utilizado para realizar solicitudes HTTP.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio Router utilizado para redirigir rutas dentro de la aplicación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(oldPassword: string, newPassword: string, confirmPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:201\n                        \n                    \n\n\n            \n                \n                        Método para cambiar la contraseña del usuario autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                oldPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La contraseña actual del usuario.\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La nueva contraseña que se desea establecer.\n\n                                            \n                                        \n                                        \n                                                confirmPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Confirmación de la nueva contraseña.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta del backend tras el cambio de contraseña.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthenticatedUser\n                        \n                    \n                \n            \n            \n                \ngetAuthenticatedUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Método para obtener los datos del usuario autenticado.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite los datos del usuario autenticado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Método para obtener el token de autenticación almacenado.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                El token de autenticación o una cadena vacía si no existe.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Método para obtener el ID del usuario autenticado.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite el ID del usuario autenticado o null si no está disponible.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRole\n                        \n                    \n                \n            \n            \n                \ngetUserRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:159\n                        \n                    \n\n\n            \n                \n                        Método para obtener el rol del usuario autenticado.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite el rol del usuario o null si no está disponible.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hasToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Método para verificar si existe un token de autenticación guardado en el almacenamiento local.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si hay un token, false en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:168\n                        \n                    \n\n\n            \n                \n                        Método para verificar si el usuario tiene el rol de administrador.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite true si el usuario tiene el rol de 'ROLE_ADMIN', false si no.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Método para verificar si el usuario está autenticado.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite true si el usuario está autenticado, false si no.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Método para realizar el login de un usuario.\nGuarda el token en el almacenamiento local y actualiza el estado de autenticación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Usuario que intenta iniciar sesión.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta del backend.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Método para cerrar sesión.\nElimina el token del almacenamiento local y actualiza el estado de autenticación.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                Redirige al usuario a la página de login.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Método para registrar un nuevo usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos del nuevo usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta del backend tras el registro.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:180\n                        \n                    \n\n\n            \n                \n                        Método para actualizar los datos del usuario autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos actualizados del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta del backend tras la actualización.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:23\n                        \n                    \n\n            \n                \n                    URL base de la API de autenticación. Debe ser cambiada según la configuración del servidor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.hasToken())\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:28\n                        \n                    \n\n            \n                \n                    Estado de la autenticación del usuario, mediante un BehaviorSubject que emite valores de true o false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:33\n                        \n                    \n\n            \n                \n                    Almacena el ID del usuario autenticado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:38\n                        \n                    \n\n            \n                \n                    Almacena el rol del usuario autenticado (por ejemplo, 'ROLE_USER', 'ROLE_ADMIN').\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject, map } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { User } from '../model/User';\n\n/**\n * Servicio encargado de la autenticación de usuarios, incluyendo el login, registro,\n * obtención de datos del usuario autenticado, manejo de roles, y cierre de sesión.\n *\n * @example\n * const isAuthenticated = this.authService.isAuthenticated();\n * this.authService.login(user).subscribe(response => { ... });\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  /**\n   * URL base de la API de autenticación. Debe ser cambiada según la configuración del servidor.\n   */\n  private apiUrl = 'http://localhost:8000/api';\n\n  /**\n   * Estado de la autenticación del usuario, mediante un BehaviorSubject que emite valores de `true` o `false`.\n   */\n  private authStatus = new BehaviorSubject(this.hasToken());\n\n  /**\n   * Almacena el ID del usuario autenticado.\n   */\n  private currentUserId: number | null = null;\n\n  /**\n   * Almacena el rol del usuario autenticado (por ejemplo, 'ROLE_USER', 'ROLE_ADMIN').\n   */\n  private currentUserRole: BehaviorSubject = new BehaviorSubject(null);\n\n  /**\n   * Constructor que inyecta los servicios necesarios para la autenticación y redirección.\n   *\n   * @param http Servicio HttpClient utilizado para realizar solicitudes HTTP.\n   * @param router Servicio Router utilizado para redirigir rutas dentro de la aplicación.\n   */\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /**\n   * Método para realizar el login de un usuario.\n   * Guarda el token en el almacenamiento local y actualiza el estado de autenticación.\n   *\n   * @param user Usuario que intenta iniciar sesión.\n   * @returns Un observable que emite la respuesta del backend.\n   */\n  login(user: User): Observable {\n    return this.http.post(`${this.apiUrl}/login_check`, user).pipe(\n      tap(response => {\n        if (response.token) {\n          localStorage.setItem('authToken', response.token);\n          this.authStatus.next(true);\n        }\n      })\n    );\n  }\n\n  /**\n   * Método para obtener el ID del usuario autenticado.\n   *\n   * @returns Un observable que emite el ID del usuario autenticado o `null` si no está disponible.\n   */\n  getUserId(): Observable {\n    if (this.currentUserId !== null) {\n      return new BehaviorSubject(this.currentUserId).asObservable();\n    }\n\n    return this.getAuthenticatedUser().pipe(\n      map(user => {\n        this.currentUserId = user.id;\n        return this.currentUserId;\n      })\n    );\n  }\n\n  /**\n   * Método para registrar un nuevo usuario.\n   *\n   * @param userData Datos del nuevo usuario.\n   * @returns Un observable que emite la respuesta del backend tras el registro.\n   */\n  register(userData: any): Observable {\n    console.log('Datos enviados al backend:', userData);\n    return this.http.post(`${this.apiUrl}/user/create`, userData);\n  }\n\n  /**\n   * Método para verificar si existe un token de autenticación guardado en el almacenamiento local.\n   *\n   * @returns `true` si hay un token, `false` en caso contrario.\n   */\n  private hasToken(): boolean {\n    return !!localStorage.getItem('authToken');\n  }\n\n  /**\n   * Método para obtener el token de autenticación almacenado.\n   *\n   * @returns El token de autenticación o una cadena vacía si no existe.\n   */\n  getToken(): string {\n    return localStorage.getItem('authToken');\n  }\n\n  /**\n   * Método para verificar si el usuario está autenticado.\n   *\n   * @returns Un observable que emite `true` si el usuario está autenticado, `false` si no.\n   */\n  isAuthenticated(): Observable {\n    return this.authStatus.asObservable();\n  }\n\n  /**\n   * Método para cerrar sesión.\n   * Elimina el token del almacenamiento local y actualiza el estado de autenticación.\n   *\n   * @returns Redirige al usuario a la página de login.\n   */\n  logout(): void {\n    localStorage.removeItem('authToken');\n    this.authStatus.next(false);\n    this.router.navigate(['/logaccount']).then(r => r);\n  }\n\n  /**\n   * Método para obtener los datos del usuario autenticado.\n   *\n   * @returns Un observable que emite los datos del usuario autenticado.\n   */\n  getAuthenticatedUser(): Observable {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.getToken()}`\n    });\n\n    return this.http.get(`${this.apiUrl}/user/me`, { headers }).pipe(\n      tap(user => {\n        if (user && user.id) {\n          this.currentUserId = user.id;\n          this.currentUserRole.next(user.rol);\n        }\n      })\n    );\n  }\n\n  /**\n   * Método para obtener el rol del usuario autenticado.\n   *\n   * @returns Un observable que emite el rol del usuario o `null` si no está disponible.\n   */\n  getUserRole(): Observable {\n    return this.currentUserRole.asObservable();\n  }\n\n  /**\n   * Método para verificar si el usuario tiene el rol de administrador.\n   *\n   * @returns Un observable que emite `true` si el usuario tiene el rol de 'ROLE_ADMIN', `false` si no.\n   */\n  isAdmin(): Observable {\n    return this.getUserRole().pipe(\n      map(role => role === 'ROLE_ADMIN')\n    );\n  }\n\n  /**\n   * Método para actualizar los datos del usuario autenticado.\n   *\n   * @param user Datos actualizados del usuario.\n   * @returns Un observable que emite la respuesta del backend tras la actualización.\n   */\n  updateUser(user: any): Observable {\n    if (!this.currentUserId) {\n      throw new Error('User ID not available');\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.getToken()}`,\n      'Content-Type': 'application/json'\n    });\n\n    return this.http.put(`${this.apiUrl}/user/update/${this.currentUserId}`, user, { headers });\n  }\n\n  /**\n   * Método para cambiar la contraseña del usuario autenticado.\n   *\n   * @param oldPassword La contraseña actual del usuario.\n   * @param newPassword La nueva contraseña que se desea establecer.\n   * @param confirmPassword Confirmación de la nueva contraseña.\n   * @returns Un observable que emite la respuesta del backend tras el cambio de contraseña.\n   */\n  changePassword(oldPassword: string, newPassword: string, confirmPassword: string): Observable {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.getToken()}`,\n      'Content-Type': 'application/json'\n    });\n\n    const body = {\n      oldPassword: oldPassword,\n      newPassword: newPassword,\n      confirmPassword: confirmPassword\n    };\n\n    return this.http.put(`${this.apiUrl}/user/change-password`, body, { headers });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingCardComponent.html":{"url":"components/BookingCardComponent.html","title":"component - BookingCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookingCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/booking-card/booking-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra la información de una reserva en formato de tarjeta.\nEste componente permite eliminar una reserva mediante un evento emitido al componente padre.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-booking-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./booking-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                reservation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        reservation\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/component/booking-card/booking-card.component.ts:23\n                            \n                        \n                \n                    \n                        Propiedad de entrada que recibe un objeto con los detalles de la reserva.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/component/booking-card/booking-card.component.ts:28\n                            \n                        \n                \n                    \n                        Evento de salida que emite el ID de la reserva cuando se desea eliminar.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/booking-card/booking-card.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Método que emite el ID de la reserva cuando se invoca la acción de eliminar.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n/**\n * Componente que muestra la información de una reserva en formato de tarjeta.\n * Este componente permite eliminar una reserva mediante un evento emitido al componente padre.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-booking-card',\n  imports: [\n    DatePipe\n  ],\n  standalone: true,\n  templateUrl: './booking-card.component.html'\n})\nexport class BookingCardComponent {\n  /**\n   * Propiedad de entrada que recibe un objeto con los detalles de la reserva.\n   */\n  @Input() reservation: any;\n\n  /**\n   * Evento de salida que emite el ID de la reserva cuando se desea eliminar.\n   */\n  @Output() delete = new EventEmitter();\n\n  /**\n   * Método que emite el ID de la reserva cuando se invoca la acción de eliminar.\n   */\n  onDelete() {\n    this.delete.emit(this.reservation.id); // Emitir el ID de la reserva al componente padre\n  }\n}\n\n    \n\n    \n        \n  \n    {{ reservation.trip?.name }}\n    \n      \n      Tickets:\n      {{ reservation.number_of_guest }}\n    \n    \n      \n      Fecha:\n      {{ reservation.trip?.date | date:'dd MMMM yyyy' }}\n    \n    \n      \n        \n      \n      Salida:\n      {{ reservation.trip?.departure }}\n    \n  \n  \n    {{ reservation.total_price }}€\n    Eliminar\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ reservation.trip?.name }}                Tickets:      {{ reservation.number_of_guest }}                    Fecha:      {{ reservation.trip?.date | date:\\'dd MMMM yyyy\\' }}                                  Salida:      {{ reservation.trip?.departure }}            {{ reservation.total_price }}€    Eliminar  '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingService.html":{"url":"injectables/BookingService.html","title":"injectable - BookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/booking.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de manejar las reservas de los usuarios.\nPermite crear, obtener, actualizar y eliminar reservas, así como obtener información sobre los viajes.\nExample :this.bookingService.createReservation(reservation).subscribe(response => { ... });\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReservation\n                            \n                            \n                                deleteReservation\n                            \n                            \n                                getConfirmedReservations\n                            \n                            \n                                getPendingReservationsByUser\n                            \n                            \n                                getTripById\n                            \n                            \n                                updateReservationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/booking.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta el servicio HttpClient utilizado para realizar solicitudes HTTP.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio HttpClient para realizar las solicitudes HTTP.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createReservation\n                        \n                    \n                \n            \n            \n                \ncreateReservation(reservation: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/booking.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Método para crear una nueva reserva.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                reservation\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto que contiene los detalles de la reserva a crear.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta del backend tras la creación de la reserva.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReservation\n                        \n                    \n                \n            \n            \n                \ndeleteReservation(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/booking.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Método para eliminar una reserva.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la reserva a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta del backend tras la eliminación de la reserva.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfirmedReservations\n                        \n                    \n                \n            \n            \n                \ngetConfirmedReservations(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/booking.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Método para obtener las reservas confirmadas de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario cuyo listado de reservas confirmadas se desea obtener.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite una lista de reservas confirmadas del usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPendingReservationsByUser\n                        \n                    \n                \n            \n            \n                \ngetPendingReservationsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/booking.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Método para obtener las reservas pendientes de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario cuyo listado de reservas pendientes se desea obtener.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite una lista de reservas pendientes del usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTripById\n                        \n                    \n                \n            \n            \n                \ngetTripById(tripId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/booking.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Método para obtener los detalles de un viaje a partir de su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tripId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del viaje del que se desea obtener los detalles.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite los detalles del viaje solicitado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateReservationStatus\n                        \n                    \n                \n            \n            \n                \nupdateReservationStatus(bookingId: number, status: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/booking.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Método para actualizar el estado de una reserva.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                bookingId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la reserva cuyo estado se desea actualizar.\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevo estado de la reserva (por ejemplo, confirmado, cancelado).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta del backend tras la actualización del estado de la reserva.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api/booking'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/booking.service.ts:19\n                        \n                    \n\n            \n                \n                    URL base de la API para el manejo de las reservas. Debe ser cambiada según la configuración del servidor.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\n\n/**\n * Servicio encargado de manejar las reservas de los usuarios.\n * Permite crear, obtener, actualizar y eliminar reservas, así como obtener información sobre los viajes.\n *\n * @example\n * this.bookingService.createReservation(reservation).subscribe(response => { ... });\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n  /**\n   * URL base de la API para el manejo de las reservas. Debe ser cambiada según la configuración del servidor.\n   */\n  private apiUrl = 'http://localhost:8000/api/booking';\n\n  /**\n   * Constructor que inyecta el servicio HttpClient utilizado para realizar solicitudes HTTP.\n   *\n   * @param http Servicio HttpClient para realizar las solicitudes HTTP.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Método para crear una nueva reserva.\n   *\n   * @param reservation Objeto que contiene los detalles de la reserva a crear.\n   * @returns Un observable que emite la respuesta del backend tras la creación de la reserva.\n   */\n  createReservation(reservation: any): Observable {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post(`${this.apiUrl}/create`, reservation, { headers });\n  }\n\n  /**\n   * Método para obtener las reservas pendientes de un usuario.\n   *\n   * @param userId ID del usuario cuyo listado de reservas pendientes se desea obtener.\n   * @returns Un observable que emite una lista de reservas pendientes del usuario.\n   */\n  getPendingReservationsByUser(userId: number): Observable {\n    return this.http.get(`${this.apiUrl}/pending/${userId}`);\n  }\n\n  /**\n   * Método para eliminar una reserva.\n   *\n   * @param id ID de la reserva a eliminar.\n   * @returns Un observable que emite la respuesta del backend tras la eliminación de la reserva.\n   */\n  deleteReservation(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/delete/${id}`);\n  }\n\n  /**\n   * Método para actualizar el estado de una reserva.\n   *\n   * @param bookingId ID de la reserva cuyo estado se desea actualizar.\n   * @param status Nuevo estado de la reserva (por ejemplo, confirmado, cancelado).\n   * @returns Un observable que emite la respuesta del backend tras la actualización del estado de la reserva.\n   */\n  updateReservationStatus(bookingId: number, status: number): Observable {\n    return this.http.put(`${this.apiUrl}/update-status/${bookingId}`, { status });\n  }\n\n  /**\n   * Método para obtener las reservas confirmadas de un usuario.\n   *\n   * @param userId ID del usuario cuyo listado de reservas confirmadas se desea obtener.\n   * @returns Un observable que emite una lista de reservas confirmadas del usuario.\n   */\n  getConfirmedReservations(userId: number): Observable {\n    return this.http.get(`${this.apiUrl}/confirmed/${userId}`);\n  }\n\n  /**\n   * Método para obtener los detalles de un viaje a partir de su ID.\n   *\n   * @param tripId ID del viaje del que se desea obtener los detalles.\n   * @returns Un observable que emite los detalles del viaje solicitado.\n   */\n  getTripById(tripId: number): Observable {\n    return this.http.get(`/api/trip/${tripId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/card/card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que representa una tarjeta con los detalles de un viaje.\nEste componente permite visualizar información del viaje y determinar si la fecha del viaje ha pasado.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n\n            \n                imports\n                \n                            NgIf\n                            RouterLink\n                            DatePipe\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPastDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                shopped\n                            \n                            \n                                trip\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        shopped\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/component/card/card.component.ts:29\n                            \n                        \n                \n                    \n                        Propiedad de entrada que indica si el viaje ha sido comprado o no.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        trip\n                    \n                \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                        \n                            \n                                    Defined in src/component/card/card.component.ts:34\n                            \n                        \n                \n                    \n                        Propiedad de entrada que recibe un objeto Trip con los detalles del viaje.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isPastDate\n                        \n                    \n                \n            \n            \n                \nisPastDate(dateString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/card/card.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Método que verifica si la fecha del viaje ha pasado o no.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dateString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Fecha del viaje en formato de cadena.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si la fecha ha pasado, false si no.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DatePipe, NgClass, NgIf } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { Trip } from '../../app/model/trip';\n\n/**\n * Componente que representa una tarjeta con los detalles de un viaje.\n * Este componente permite visualizar información del viaje y determinar si la fecha del viaje ha pasado.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-card',\n  imports: [\n    NgIf,\n    RouterLink,\n    DatePipe,\n    NgClass\n  ],\n  templateUrl: './card.component.html'\n})\nexport class CardComponent {\n  /**\n   * Propiedad de entrada que indica si el viaje ha sido comprado o no.\n   *\n   * @default false\n   */\n  @Input() shopped: boolean = false;\n\n  /**\n   * Propiedad de entrada que recibe un objeto `Trip` con los detalles del viaje.\n   */\n  @Input() trip!: Trip;\n\n  /**\n   * Método que verifica si la fecha del viaje ha pasado o no.\n   *\n   * @param dateString Fecha del viaje en formato de cadena.\n   * @returns `true` si la fecha ha pasado, `false` si no.\n   */\n  isPastDate(dateString: string): boolean {\n    const tripDate = new Date(dateString);\n    const today = new Date();\n    return tripDate \n    \n\n    \n        \n  \n    \n    \n      {{ trip.yacht.model }}\n    \n  \n\n  \n    \n      {{ trip.name }}\n    \n\n    \n      \n        Lugar: {{ trip.departure }}\n      \n      \n        Duración: {{ trip.duration_hours }} horas\n      \n      \n        Comprar tickets\n      \n    \n  \n\n\n\n  \n    {{ trip.name }}\n    Lugar: {{ trip.departure}}\n    Fecha: {{ trip.startdate | date:'dd/MM/yyyy'}}\n\n    \n      Estado: {{ isPastDate(trip.startdate) ? 'Terminado' : 'Reservado' }}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ trip.yacht.model }}                  {{ trip.name }}                      Lugar: {{ trip.departure }}                    Duración: {{ trip.duration_hours }} horas                    Comprar tickets                  {{ trip.name }}    Lugar: {{ trip.departure}}    Fecha: {{ trip.startdate | date:\\'dd/MM/yyyy\\'}}          Estado: {{ isPastDate(trip.startdate) ? \\'Terminado\\' : \\'Reservado\\' }}      '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/card-details/card-details.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra los detalles de un viaje en formato de tarjeta.\nEste componente recibe un objeto Trip como entrada y lo muestra en la interfaz.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-details\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                trip\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        trip\n                    \n                \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                        \n                            \n                                    Defined in src/component/card-details/card-details.component.ts:23\n                            \n                        \n                \n                    \n                        Propiedad de entrada que recibe un objeto Trip para mostrar sus detalles.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Trip } from '../../app/model/trip';\nimport { RouterLink } from '@angular/router';\n\n/**\n * Componente que muestra los detalles de un viaje en formato de tarjeta.\n * Este componente recibe un objeto `Trip` como entrada y lo muestra en la interfaz.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-card-details',\n  imports: [\n    RouterLink\n  ],\n  templateUrl: './card-details.component.html'\n})\nexport class CardDetailsComponent {\n  /**\n   * Propiedad de entrada que recibe un objeto `Trip` para mostrar sus detalles.\n   */\n  @Input() trip!: Trip;\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    {{ trip.name }}\n    \n      \n        {{ trip.yacht.name }}\n        \n          Lugar: {{ trip.departure }}\n          Duración: {{ trip.duration_hours }} horas\n        \n      \n      \n        \n          Desde\n          {{ trip.price }}€\n        \n        \n          Comprar tickets\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ trip.name }}                  {{ trip.yacht.name }}                  Lugar: {{ trip.departure }}          Duración: {{ trip.duration_hours }} horas                                      Desde          {{ trip.price }}€                          Comprar tickets                    '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckTicketsComponent.html":{"url":"components/CheckTicketsComponent.html","title":"component - CheckTicketsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckTicketsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/check-tickets/check-tickets.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que permite al usuario revisar sus reservas pendientes,\ncon la opción de eliminarlas, ver detalles del viaje y calcular el total de las reservas.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-check-tickets\n            \n\n\n            \n                imports\n                \n                            NgIf\n                            CommonModule\n                            ButtonModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./check-tickets.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                pendingReservations\n                            \n                            \n                                showCartDropdown\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDropdown\n                            \n                            \n                                deleteReservation\n                            \n                            \n                                getTotalPrice\n                            \n                            \n                                loadPendingReservations\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleCartDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, bookingService: BookingService, tripService: TripService)\n                    \n                \n                        \n                            \n                                Defined in src/component/check-tickets/check-tickets.component.ts:51\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta los servicios necesarios.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que gestiona la autenticación.\n\n                                                        \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que gestiona las reservas.\n\n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que gestiona los viajes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDropdown\n                        \n                    \n                \n            \n            \n                \ncloseDropdown(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/check-tickets/check-tickets.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Cierra el menú desplegable si se hace clic fuera del área del carrito.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de clic.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReservation\n                        \n                    \n                \n            \n            \n                \ndeleteReservation(reservationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/check-tickets/check-tickets.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Elimina una reserva pendiente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                reservationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la reserva que se desea eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalPrice\n                        \n                    \n                \n            \n            \n                \ngetTotalPrice()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/check-tickets/check-tickets.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Calcula el precio total de todas las reservas pendientes.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                El precio total de las reservas.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPendingReservations\n                        \n                    \n                \n            \n            \n                \nloadPendingReservations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/check-tickets/check-tickets.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Carga las reservas pendientes del usuario.\nObtiene las reservas pendientes y, para cada una, obtiene los detalles del viaje asociado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/check-tickets/check-tickets.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente. Verifica si el usuario está autenticado,\nobtiene su ID y carga las reservas pendientes si es necesario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCartDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCartDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/check-tickets/check-tickets.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del menú desplegable de reservas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/component/check-tickets/check-tickets.component.ts:36\n                        \n                    \n\n            \n                \n                    Indica si los datos están cargando.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/component/check-tickets/check-tickets.component.ts:41\n                        \n                    \n\n            \n                \n                    Observable que indica si el usuario está autenticado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingReservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/component/check-tickets/check-tickets.component.ts:46\n                        \n                    \n\n            \n                \n                    Lista de reservas pendientes del usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showCartDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/component/check-tickets/check-tickets.component.ts:31\n                        \n                    \n\n            \n                \n                    Determina si el menú desplegable de reservas está visible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                    \n                        \n                                Defined in src/component/check-tickets/check-tickets.component.ts:51\n                        \n                    \n\n            \n                \n                    ID del usuario autenticado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { CommonModule, NgIf } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../app/services/auth.service';\nimport { BookingService } from '../../app/services/booking.service';\nimport { TripService } from '../../app/services/trip.service';\nimport { ButtonModule } from 'primeng/button';\n\n/**\n * Componente que permite al usuario revisar sus reservas pendientes,\n * con la opción de eliminarlas, ver detalles del viaje y calcular el total de las reservas.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-check-tickets',\n  imports: [\n    NgIf,\n    CommonModule,\n    ButtonModule,\n    RouterLink\n  ],\n  templateUrl: './check-tickets.component.html'\n})\nexport class CheckTicketsComponent implements OnInit {\n  /**\n   * Determina si el menú desplegable de reservas está visible.\n   */\n  showCartDropdown = false;\n\n  /**\n   * Indica si los datos están cargando.\n   */\n  isLoading = true;\n\n  /**\n   * Observable que indica si el usuario está autenticado.\n   */\n  isLoggedIn!: Observable;\n\n  /**\n   * Lista de reservas pendientes del usuario.\n   */\n  pendingReservations: any[] = [];\n\n  /**\n   * ID del usuario autenticado.\n   */\n  userId!: number | null;\n\n  /**\n   * Constructor que inyecta los servicios necesarios.\n   *\n   * @param authService Servicio que gestiona la autenticación.\n   * @param bookingService Servicio que gestiona las reservas.\n   * @param tripService Servicio que gestiona los viajes.\n   */\n  constructor(private authService: AuthService, private bookingService: BookingService, private tripService: TripService) {}\n\n  /**\n   * Método de inicialización del componente. Verifica si el usuario está autenticado,\n   * obtiene su ID y carga las reservas pendientes si es necesario.\n   */\n  ngOnInit() {\n    // Verifica si el usuario está autenticado\n    this.isLoggedIn = this.authService.isAuthenticated();\n\n    // Obtener el ID del usuario autenticado\n    this.authService.getUserId().subscribe({\n      next: (id) => {\n        this.userId = id;\n        if (this.userId) {\n          this.loadPendingReservations(); // Cargar reservas pendientes solo si el ID del usuario no es null\n        }\n      },\n      error: () => {\n        console.error('No se pudo obtener el ID del usuario.');\n      }\n    });\n\n    // Simula el proceso de carga\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 1000);\n  }\n\n  /**\n   * Alterna la visibilidad del menú desplegable de reservas.\n   */\n  toggleCartDropdown() {\n    this.showCartDropdown = !this.showCartDropdown;\n  }\n\n  /**\n   * Cierra el menú desplegable si se hace clic fuera del área del carrito.\n   *\n   * @param event Evento de clic.\n   */\n  closeDropdown(event: Event) {\n    const clickedElement = event.target as HTMLElement;\n    if (!clickedElement.closest('#cartDropdown') && !clickedElement.closest('#toggleCart')) {\n      this.showCartDropdown = false;\n    }\n  }\n\n  /**\n   * Carga las reservas pendientes del usuario.\n   * Obtiene las reservas pendientes y, para cada una, obtiene los detalles del viaje asociado.\n   */\n  loadPendingReservations() {\n    if (!this.userId) return;\n\n    this.bookingService.getPendingReservationsByUser(this.userId).subscribe({\n      next: (reservations) => {\n        this.pendingReservations = reservations;\n\n        // Para cada reserva, obtener los datos del viaje asociado\n        this.pendingReservations.forEach(reservation => {\n          this.tripService.getTripById(reservation.trip_id).subscribe(trip => {\n            reservation.trip = trip;\n          });\n        });\n      },\n      error: () => {\n        console.error('Error al cargar las reservas pendientes');\n      }\n    });\n  }\n\n  /**\n   * Elimina una reserva pendiente.\n   *\n   * @param reservationId ID de la reserva que se desea eliminar.\n   */\n  deleteReservation(reservationId: number) {\n    this.bookingService.deleteReservation(reservationId).subscribe({\n      next: () => {\n        this.pendingReservations = this.pendingReservations.filter(res => res.id !== reservationId);\n      },\n      error: () => {\n        console.error('Error al eliminar la reserva');\n      }\n    });\n  }\n\n  /**\n   * Calcula el precio total de todas las reservas pendientes.\n   *\n   * @returns El precio total de las reservas.\n   */\n  getTotalPrice(): number {\n    return this.pendingReservations.reduce((acc, r) => acc + r.total_price, 0);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Tickets\n  \n\n  \n    \n      Carrito\n\n       0\" class=\"my-2\">\n        \n          \n            \n              {{ reservation.trip?.name }}\n            \n            (x{{ reservation.number_of_guest }})\n          \n          {{ reservation.total_price }}€\n          \n            \n          \n        \n\n\n        \n          TOTAL\n          {{ getTotalPrice() }}€\n        \n\n      \n\n      No tienes reservas pendientes\n\n       0\" routerLink=\"/checkout\" class=\"w-full mt-2 bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-lighter\">\n        Finalizar compra\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tickets              Carrito       0\" class=\"my-2\">                                            {{ reservation.trip?.name }}                        (x{{ reservation.number_of_guest }})                    {{ reservation.total_price }}€                                                          TOTAL          {{ getTotalPrice() }}€                    No tienes reservas pendientes       0\" routerLink=\"/checkout\" class=\"w-full mt-2 bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-lighter\">        Finalizar compra            '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckTicketsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/checkout/checkout.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el proceso de pago de las reservas pendientes de un usuario.\nMuestra un formulario para el pago, y permite eliminar reservas o actualizar su estado.\n\nCheckoutComponent: Componente principal de la página de pago.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                SidebarComponent\n                            ReactiveFormsModule\n                                BookingCardComponent\n                            NgForOf\n                                ToastComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                paymentForm\n                            \n                            \n                                pendingReservations\n                            \n                            \n                                    \n                                toast\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteReservation\n                            \n                            \n                                formatCardNumber\n                            \n                            \n                                formatCVC\n                            \n                            \n                                formatExpDate\n                            \n                            \n                                loadPendingReservations\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                updateReservationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, fb: FormBuilder, authService: AuthService, bookingService: BookingService, tripService: TripService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/checkout/checkout.component.ts:68\n                            \n                        \n\n                \n                    \n                            Constructor del componente que inyecta los servicios necesarios.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de enrutamiento de Angular.\n\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio de FormBuilder para crear el formulario reactivo.\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para la autenticación y obtención del ID de usuario.\n\n\n                                                        \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para manejar reservas.\n\n\n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para obtener información de los viajes.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReservation\n                        \n                    \n                \n            \n            \n                \ndeleteReservation(reservationId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/checkout/checkout.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Elimina una reserva pendiente de la lista y realiza la solicitud al servidor.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                reservationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID de la reserva a eliminar.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCardNumber\n                        \n                    \n                \n            \n            \n                \nformatCardNumber(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/checkout/checkout.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Formatea el número de la tarjeta de crédito mientras se ingresa.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl evento del input del número de tarjeta.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCVC\n                        \n                    \n                \n            \n            \n                \nformatCVC(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/checkout/checkout.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Formatea el código CVC de la tarjeta de crédito mientras se ingresa.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl evento del input del código CVC.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatExpDate\n                        \n                    \n                \n            \n            \n                \nformatExpDate(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/checkout/checkout.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Formatea la fecha de expiración de la tarjeta de crédito mientras se ingresa.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl evento del input de la fecha de expiración.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPendingReservations\n                        \n                    \n                \n            \n            \n                \nloadPendingReservations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/checkout/checkout.component.ts:225\n                        \n                    \n\n\n            \n                \n                        Carga las reservas pendientes del usuario desde el servicio de reservas.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/checkout/checkout.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente. Verifica si el usuario está autenticado y carga las reservas pendientes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/checkout/checkout.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Envía el formulario de pago y procesa la transacción.\nMuestra mensajes dependiendo del resultado del pago.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateReservationStatus\n                        \n                    \n                \n            \n            \n                \nupdateReservationStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/checkout/checkout.component.ts:203\n                        \n                    \n\n\n            \n                \n                        Actualiza el estado de las reservas pendientes a 'completada' después de un pago exitoso.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/checkout/checkout.component.ts:68\n                        \n                    \n\n            \n                \n                    Indicador de carga para mostrar un loader mientras se obtienen datos.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/checkout/checkout.component.ts:50\n                        \n                    \n\n            \n                \n                    Observable que indica si el usuario está autenticado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/checkout/checkout.component.ts:44\n                        \n                    \n\n            \n                \n                    Formulario reactivo para capturar los datos de pago.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingReservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/checkout/checkout.component.ts:56\n                        \n                    \n\n            \n                \n                    Lista de reservas pendientes para el usuario actual.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ToastComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/checkout/checkout.component.ts:38\n                        \n                    \n\n            \n                \n                    Refencia al componente Toast utilizado para mostrar mensajes al usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/checkout/checkout.component.ts:62\n                        \n                    \n\n            \n                \n                    Identificador del usuario actual.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SidebarComponent } from '../../../component/sidebar/sidebar.component';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { BookingCardComponent } from '../../../component/booking-card/booking-card.component';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { BookingService } from '../../services/booking.service';\nimport { TripService } from '../../services/trip.service';\nimport { NgForOf } from '@angular/common';\nimport { ToastComponent } from '../../../component/toast/toast.component';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente que maneja el proceso de pago de las reservas pendientes de un usuario.\n * Muestra un formulario para el pago, y permite eliminar reservas o actualizar su estado.\n *\n * @exports\n * - `CheckoutComponent`: Componente principal de la página de pago.\n */\n@Component({\n  selector: 'app-checkout',\n  standalone: true,\n  imports: [\n    SidebarComponent,\n    ReactiveFormsModule,\n    BookingCardComponent,\n    NgForOf,\n    ToastComponent\n  ],\n  templateUrl: './checkout.component.html'\n})\nexport class CheckoutComponent implements OnInit {\n  /**\n   * @description\n   * Refencia al componente Toast utilizado para mostrar mensajes al usuario.\n   */\n  @ViewChild(ToastComponent) toast!: ToastComponent;\n\n  /**\n   * @description\n   * Formulario reactivo para capturar los datos de pago.\n   */\n  paymentForm: FormGroup;\n\n  /**\n   * @description\n   * Observable que indica si el usuario está autenticado.\n   */\n  isLoggedIn!: Observable;\n\n  /**\n   * @description\n   * Lista de reservas pendientes para el usuario actual.\n   */\n  pendingReservations: any[] = [];\n\n  /**\n   * @description\n   * Identificador del usuario actual.\n   */\n  userId!: number | null;\n\n  /**\n   * @description\n   * Indicador de carga para mostrar un loader mientras se obtienen datos.\n   */\n  isLoading = true;\n\n  /**\n   * @description\n   * Constructor del componente que inyecta los servicios necesarios.\n   *\n   * @param router - Servicio de enrutamiento de Angular.\n   * @param fb - Servicio de FormBuilder para crear el formulario reactivo.\n   * @param authService - Servicio para la autenticación y obtención del ID de usuario.\n   * @param bookingService - Servicio para manejar reservas.\n   * @param tripService - Servicio para obtener información de los viajes.\n   */\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private bookingService: BookingService,\n    private tripService: TripService\n  ) {\n    this.paymentForm = this.fb.group({\n      cardNumber: ['', [Validators.required, Validators.pattern(/^\\d{4} \\d{4} \\d{4} \\d{4}$/)]],\n      expDate: ['', [Validators.required, Validators.pattern(/^(0[1-9]|1[0-2])\\/\\d{2}$/)]],\n      cvc: ['', [Validators.required, Validators.pattern(/^\\d{3}$/)]],\n      cardOwner: ['', Validators.required]\n    });\n  }\n\n  /**\n   * @description\n   * Inicializa el componente. Verifica si el usuario está autenticado y carga las reservas pendientes.\n   */\n  ngOnInit() {\n    this.isLoggedIn = this.authService.isAuthenticated();\n    this.authService.getUserId().subscribe({\n      next: (id) => {\n        this.userId = id;\n        if (this.userId) {\n          this.loadPendingReservations();\n        }\n      },\n      error: () => console.error('No se pudo obtener el ID del usuario.')\n    });\n\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 1000);\n  }\n\n  /**\n   * @description\n   * Elimina una reserva pendiente de la lista y realiza la solicitud al servidor.\n   *\n   * @param reservationId - ID de la reserva a eliminar.\n   */\n  deleteReservation(reservationId: number) {\n    this.bookingService.deleteReservation(reservationId).subscribe({\n      next: () => {\n        this.pendingReservations = this.pendingReservations.filter(res => res.id !== reservationId);\n      },\n      error: () => {\n        console.error('Error al eliminar la reserva');\n      }\n    });\n  }\n\n  /**\n   * @description\n   * Formatea el número de la tarjeta de crédito mientras se ingresa.\n   *\n   * @param event - El evento del input del número de tarjeta.\n   */\n  formatCardNumber(event: any) {\n    let value = event.target.value.replace(/\\D/g, '').slice(0, 16);\n    value = value.replace(/(\\d{4})/g, '$1 ').trim();\n    this.paymentForm.patchValue({ cardNumber: value }, { emitEvent: false });\n  }\n\n  /**\n   * @description\n   * Formatea la fecha de expiración de la tarjeta de crédito mientras se ingresa.\n   *\n   * @param event - El evento del input de la fecha de expiración.\n   */\n  formatExpDate(event: any) {\n    let value = event.target.value.replace(/\\D/g, '').slice(0, 4);\n    if (value.length >= 2) {\n      value = value.slice(0, 2) + '/' + value.slice(2);\n    }\n    this.paymentForm.patchValue({ expDate: value }, { emitEvent: false });\n  }\n\n  /**\n   * @description\n   * Formatea el código CVC de la tarjeta de crédito mientras se ingresa.\n   *\n   * @param event - El evento del input del código CVC.\n   */\n  formatCVC(event: any) {\n    let value = event.target.value.replace(/\\D/g, '').slice(0, 3);\n    this.paymentForm.patchValue({ cvc: value }, { emitEvent: false });\n  }\n\n  /**\n   * @description\n   * Envía el formulario de pago y procesa la transacción.\n   * Muestra mensajes dependiendo del resultado del pago.\n   */\n  submitForm() {\n    if (this.paymentForm.valid) {\n      this.toast.addMessage('info', 'Procesando pago', 'Por favor, espera...');\n\n      setTimeout(() => {\n        const success = Math.random() > 0.3; // Simulación: 70% éxito, 30% error\n        if (success) {\n          this.toast.addMessage('success', 'Pago Exitoso', 'Tu pago ha sido procesado correctamente.');\n          this.updateReservationStatus();\n          this.paymentForm.reset();\n\n          setTimeout(() => {\n            this.router.navigate(['/profile']); // Redirige a /profile después del pago exitoso\n          }, 1500); // Pequeño delay para mostrar el mensaje\n        } else {\n          this.toast.addMessage('error', 'Error en el pago', 'No se pudo procesar el pago. Inténtalo de nuevo.');\n        }\n      }, 2000);\n\n    } else {\n      this.toast.addMessage('warn', 'Formulario Inválido', 'Revisa los datos ingresados.');\n    }\n  }\n\n  /**\n   * @description\n   * Actualiza el estado de las reservas pendientes a 'completada' después de un pago exitoso.\n   */\n  updateReservationStatus() {\n    if (!this.pendingReservations.length) return;\n\n    this.pendingReservations.forEach(reservation => {\n      this.bookingService.updateReservationStatus(reservation.id, 1).subscribe({\n        next: () => {\n          reservation.status = 1; // Actualizar en frontend\n        },\n        error: (err) => {\n          console.error('Error actualizando reserva:', err);\n          this.toast.addMessage('error', 'Error', 'No se pudo actualizar el estado de la reserva.');\n        }\n      });\n    });\n  }\n\n  /**\n   * @description\n   * Carga las reservas pendientes del usuario desde el servicio de reservas.\n   *\n   * @returns {void}\n   */\n  loadPendingReservations() {\n    if (!this.userId) return;\n\n    this.bookingService.getPendingReservationsByUser(this.userId).subscribe({\n      next: (reservations) => {\n        this.pendingReservations = reservations;\n\n        // Para cada reserva, obtener los datos del viaje asociado\n        this.pendingReservations.forEach(reservation => {\n          this.tripService.getTripById(reservation.trip_id).subscribe(trip => {\n            reservation.trip = trip;\n          });\n        });\n      },\n      error: () => {\n        console.error('Error al cargar las reservas pendientes');\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n     \n      \n        \n\n      \n\n      \n        \n          Detalles de pago\n          \n            \n          \n          \n            \n              TARJETA\n              \n                \n                \n              \n            \n            \n              \n                FECHA EXP.\n                \n              \n              \n                CVC\n                \n              \n            \n            \n              PROPIETARIO\n              \n            \n            \n              Realizar pago\n            \n          \n        \n      \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                   Detalles de pago                                                                    TARJETA                                                                                                                  FECHA EXP.                                                            CVC                                                                    PROPIETARIO                                                    Realizar pago                                          '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/email.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de manejar el envío de correos electrónicos de verificación.\nEste servicio permite enviar un correo electrónico de verificación a un usuario dado su ID.\nExample :this.emailService.sendVerificationEmail(userId).subscribe(response => { ... });\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendVerificationEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/email.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta el servicio HttpClient utilizado para realizar solicitudes HTTP.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio HttpClient para realizar las solicitudes HTTP.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendVerificationEmail\n                        \n                    \n                \n            \n            \n                \nsendVerificationEmail(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/email.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Método para enviar un correo electrónico de verificación al usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del usuario al que se le enviará el correo de verificación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite la respuesta del backend tras intentar enviar el correo de verificación.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api/send-verification-email'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/email.service.ts:21\n                        \n                    \n\n            \n                \n                    URL base de la API para el envío de correos electrónicos de verificación.\nDebe ser modificada según la configuración del servidor.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/**\n * Servicio encargado de manejar el envío de correos electrónicos de verificación.\n *\n * Este servicio permite enviar un correo electrónico de verificación a un usuario dado su ID.\n *\n * @example\n * this.emailService.sendVerificationEmail(userId).subscribe(response => { ... });\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  /**\n   * URL base de la API para el envío de correos electrónicos de verificación.\n   * Debe ser modificada según la configuración del servidor.\n   */\n  private apiUrl = 'http://localhost:8000/api/send-verification-email';\n\n  /**\n   * Constructor que inyecta el servicio HttpClient utilizado para realizar solicitudes HTTP.\n   *\n   * @param http Servicio HttpClient para realizar las solicitudes HTTP.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Método para enviar un correo electrónico de verificación al usuario.\n   *\n   * @param userId ID del usuario al que se le enviará el correo de verificación.\n   * @returns Un observable que emite la respuesta del backend tras intentar enviar el correo de verificación.\n   */\n  sendVerificationEmail(userId: number): Observable {\n    return this.http.post(this.apiUrl, { user_id: userId }); // Enviamos el ID correcto del usuario\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que representa el encabezado de la aplicación.\nEste componente incluye una barra lateral y una opción para verificar tickets.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                SidebarComponent\n                            NgIf\n                                CheckTicketsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showSidebar\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showSidebar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/component/header/header.component.ts:26\n                            \n                        \n                \n                    \n                        Propiedad de entrada que determina si se debe mostrar la barra lateral.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\nimport { NgIf } from '@angular/common';\nimport { CheckTicketsComponent } from '../check-tickets/check-tickets.component';\n\n/**\n * Componente que representa el encabezado de la aplicación.\n * Este componente incluye una barra lateral y una opción para verificar tickets.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [RouterModule, SidebarComponent, NgIf, CheckTicketsComponent],\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent {\n  /**\n   * Propiedad de entrada que determina si se debe mostrar la barra lateral.\n   *\n   * @default false\n   */\n  @Input() showSidebar: boolean = false;\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n\n\n\n  \n    \n    Oceanlux\n  \n  \n    Tickets\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Oceanlux        Tickets  '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la página de inicio. Incluye un sidebar y es responsable de mostrar la vista inicial del sitio.\n\nHomeComponent: Componente que define la estructura de la página de inicio.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                SidebarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SidebarComponent } from '../../../component/sidebar/sidebar.component';\n\n/**\n * @description\n * Componente principal de la página de inicio. Incluye un sidebar y es responsable de mostrar la vista inicial del sitio.\n *\n * @exports\n * - `HomeComponent`: Componente que define la estructura de la página de inicio.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    SidebarComponent\n  ],\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {\n  // Este componente no tiene lógica adicional, solo presenta la estructura con el sidebar.\n}\n\n    \n\n    \n        \n  \n    \n      \n      OceanLux\n      Siente cada ola, vive la experiencia\n    \n    \n      EMPIEZA A BUSCAR TU PRÓXIMA EXPERIENCIA\n      \n        \n          Iniciar sesión\n        \n        \n          Buscar experiencias\n        \n      \n    \n\n    \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  OceanLux      Siente cada ola, vive la experiencia              EMPIEZA A BUSCAR TU PRÓXIMA EXPERIENCIA                        Iniciar sesión                          Buscar experiencias                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/loading/loading.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra un indicador de carga mientras se realizan tareas asíncronas\no transiciones de rutas dentro de la aplicación.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                detectRouteTransitions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: LoadingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/component/loading/loading.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor del componente. Inyecta el servicio de carga y el router.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio encargado de manejar el estado de carga.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                El router de Angular para escuchar eventos de navegación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        detectRouteTransitions\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/component/loading/loading.component.ts:36\n                            \n                        \n                \n                    \n                        Propiedad de entrada que permite detectar las transiciones de ruta y\nactivar el indicador de carga durante el proceso de carga de la ruta.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/loading/loading.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente. Si la propiedad detectRouteTransitions es true,\nse suscribe a los eventos del router para activar y desactivar el indicador de carga durante\nlas transiciones de rutas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/component/loading/loading.component.ts:27\n                        \n                    \n\n            \n                \n                    Observable que indica si la aplicación está en estado de carga.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { RouteConfigLoadEnd, RouteConfigLoadStart, Router } from '@angular/router';\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { LoadingService } from '../../app/services/loading.service';\n\n/**\n * Componente que muestra un indicador de carga mientras se realizan tareas asíncronas\n * o transiciones de rutas dentro de la aplicación.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-loading',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    NgIf\n  ],\n  templateUrl: './loading.component.html'\n})\nexport class LoadingComponent implements OnInit {\n  /**\n   * Observable que indica si la aplicación está en estado de carga.\n   */\n  loading$: Observable;\n\n  /**\n   * Propiedad de entrada que permite detectar las transiciones de ruta y\n   * activar el indicador de carga durante el proceso de carga de la ruta.\n   *\n   * @default false\n   */\n  @Input()\n  detectRouteTransitions = false;\n\n  /**\n   * Constructor del componente. Inyecta el servicio de carga y el router.\n   *\n   * @param loadingService Servicio encargado de manejar el estado de carga.\n   * @param router El router de Angular para escuchar eventos de navegación.\n   */\n  constructor(\n    private loadingService: LoadingService,\n    private router: Router\n  ) {\n    // Se asigna el observable del estado de carga desde el servicio.\n    this.loading$ = this.loadingService.loading$;\n  }\n\n  /**\n   * Método de inicialización del componente. Si la propiedad `detectRouteTransitions` es `true`,\n   * se suscribe a los eventos del router para activar y desactivar el indicador de carga durante\n   * las transiciones de rutas.\n   */\n  ngOnInit() {\n    if (this.detectRouteTransitions) {\n      // Escucha los eventos del router y activa/desactiva el indicador de carga\n      this.router.events\n        .pipe(\n          tap((event) => {\n            // Si el evento es el inicio de la carga de la configuración de la ruta\n            if (event instanceof RouteConfigLoadStart) {\n              this.loadingService.loadingOn();\n            }\n            // Si el evento es el fin de la carga de la configuración de la ruta\n            else if (event instanceof RouteConfigLoadEnd) {\n              this.loadingService.loadingOff();\n            }\n          })\n        )\n        .subscribe();\n    }\n  }\n}\n\n    \n\n    \n          \n    @keyframes backgroundFill {\n      0% {\n        background-color: white;\n      }\n\n      50% {\n        background-color: #375f75;\n      }\n\n      100% {\n        background-color: #102f41;\n      }\n    }\n\n    .loading-container {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      z-index: 50;\n      background-image: url('/img_1.png');\n      background-size: cover;\n      background-position: center;\n      animation: backgroundFill 5s ease-in-out forwards;\n    }\n\n    .loading-text {\n      color: white;\n      text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.7);\n      text-align: center;\n    }\n\n    .loading-svg {\n      width: 150px;\n      height: 150px;\n      margin-top: 20px;\n      fill: white;\n\n    }\n  \n\n    \n      \n\n        Loading...\n      \n      \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @keyframes backgroundFill {      0% {        background-color: white;      }      50% {        background-color: #375f75;      }      100% {        background-color: #102f41;      }    }    .loading-container {      position: fixed;      inset: 0;      display: flex;      flex-direction: column;      justify-content: center;      align-items: center;      z-index: 50;      background-image: url(\\'/img_1.png\\');      background-size: cover;      background-position: center;      animation: backgroundFill 5s ease-in-out forwards;    }    .loading-text {      color: white;      text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.7);      text-align: center;    }    .loading-svg {      width: 150px;      height: 150px;      margin-top: 20px;      fill: white;    }                    Loading...                '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar el estado de carga (loading) de la aplicación.\nEste servicio permite controlar si la aplicación está en un estado de carga o no,\na través de un BehaviorSubject que emite un valor booleano.\nExample :this.loadingService.loadingOn(); // Activa el estado de carga\nthis.loadingService.loadingOff(); // Desactiva el estado de carga\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadingOff\n                            \n                            \n                                loadingOn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadingOff\n                        \n                    \n                \n            \n            \n                \nloadingOff()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loading.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Método para desactivar el estado de carga (false).\nSe usa para indicar que la aplicación ha terminado el proceso de carga.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingOn\n                        \n                    \n                \n            \n            \n                \nloadingOn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loading.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Método para activar el estado de carga (true).\nSe usa para indicar que la aplicación está en proceso de carga.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading.service.ts:29\n                        \n                    \n\n            \n                \n                    Observable que emite el estado actual de carga (true si está cargando, false si no).\nSe puede suscribir a este observable para recibir actualizaciones del estado de carga.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loading.service.ts:23\n                        \n                    \n\n            \n                \n                    Comportamiento del estado de carga. Inicialmente está en false (no cargando).\nEste BehaviorSubject emite un valor booleano que indica si la aplicación está en estado de carga.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Servicio encargado de gestionar el estado de carga (loading) de la aplicación.\n *\n * Este servicio permite controlar si la aplicación está en un estado de carga o no,\n * a través de un `BehaviorSubject` que emite un valor booleano.\n *\n * @example\n * this.loadingService.loadingOn(); // Activa el estado de carga\n * this.loadingService.loadingOff(); // Desactiva el estado de carga\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  /**\n   * Comportamiento del estado de carga. Inicialmente está en `false` (no cargando).\n   *\n   * Este `BehaviorSubject` emite un valor booleano que indica si la aplicación está en estado de carga.\n   */\n  private loadingSubject = new BehaviorSubject(false);\n\n  /**\n   * Observable que emite el estado actual de carga (true si está cargando, false si no).\n   * Se puede suscribir a este observable para recibir actualizaciones del estado de carga.\n   */\n  loading$ = this.loadingSubject.asObservable();\n\n  /**\n   * Método para activar el estado de carga (true).\n   *\n   * Se usa para indicar que la aplicación está en proceso de carga.\n   */\n  loadingOn() {\n    this.loadingSubject.next(true);\n  }\n\n  /**\n   * Método para desactivar el estado de carga (false).\n   *\n   * Se usa para indicar que la aplicación ha terminado el proceso de carga.\n   */\n  loadingOff() {\n    this.loadingSubject.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPageComponent.html":{"url":"components/MainPageComponent.html","title":"component - MainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/main-page/main-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la página de inicio que muestra una lista de viajes.\nIncluye un encabezado, una barra de búsqueda y una lista de tarjetas de viaje.\n\nMainPageComponent: Componente que gestiona la visualización de los viajes.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                                SearchbarComponent\n                                CardComponent\n                            NgForOf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                trips\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadTrips\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tripService: TripService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/main-page/main-page.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor del componente, que inyecta el servicio TripService para obtener los viajes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que proporciona los viajes.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadTrips\n                        \n                    \n                \n            \n            \n                \nloadTrips()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/main-page/main-page.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Carga los viajes utilizando el TripService y asigna los datos a la propiedad trips.\nSe suscribe al observable proporcionado por el servicio para obtener los viajes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/main-page/main-page.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se llama al inicializar el componente.\nLlama al método loadTrips para cargar los viajes al cargar la página.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        trips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/main-page/main-page.component.ts:34\n                        \n                    \n\n            \n                \n                    Lista de viajes obtenidos desde el servicio de viajes.\nSe utiliza para llenar las tarjetas de viaje en la interfaz de usuario.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HeaderComponent } from '../../../component/header/header.component';\nimport { SearchbarComponent } from '../../../component/searchbar/searchbar.component';\nimport { CardComponent } from '../../../component/card/card.component';\nimport { Trip } from '../../model/trip';\nimport { TripService } from '../../services/trip.service';\nimport { NgForOf } from '@angular/common';\n\n/**\n * @description\n * Componente principal de la página de inicio que muestra una lista de viajes.\n * Incluye un encabezado, una barra de búsqueda y una lista de tarjetas de viaje.\n *\n * @exports\n * - `MainPageComponent`: Componente que gestiona la visualización de los viajes.\n */\n@Component({\n  selector: 'app-main-page',\n  standalone: true,\n  imports: [\n    HeaderComponent,\n    SearchbarComponent,\n    CardComponent,\n    NgForOf\n  ],\n  templateUrl: './main-page.component.html'\n})\nexport class MainPageComponent implements OnInit {\n  /**\n   * @description\n   * Lista de viajes obtenidos desde el servicio de viajes.\n   * Se utiliza para llenar las tarjetas de viaje en la interfaz de usuario.\n   */\n  trips: Trip[] = [];\n\n  /**\n   * @description\n   * Constructor del componente, que inyecta el servicio `TripService` para obtener los viajes.\n   *\n   * @param tripService - Servicio que proporciona los viajes.\n   */\n  constructor(private tripService: TripService) { }\n\n  /**\n   * @description\n   * Método del ciclo de vida de Angular que se llama al inicializar el componente.\n   * Llama al método `loadTrips` para cargar los viajes al cargar la página.\n   */\n  ngOnInit() {\n    this.loadTrips();\n  }\n\n  /**\n   * @description\n   * Carga los viajes utilizando el `TripService` y asigna los datos a la propiedad `trips`.\n   * Se suscribe al observable proporcionado por el servicio para obtener los viajes.\n   */\n  loadTrips() {\n    this.tripService.allTrips().subscribe(trips => this.trips = trips);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  Descubre los mejores tours\n  \n    \n      \n    \n  \n\n  Descubre los mejores tours\n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Descubre los mejores tours                    Descubre los mejores tours                  '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalFilterComponent.html":{"url":"components/ModalFilterComponent.html","title":"component - ModalFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/modal-filter/modal-filter.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente ModalFilter para filtrar resultados mediante selección de modelos y precios.\nAbre un modal donde el usuario puede aplicar filtros personalizados.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-filter\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            NgForOf\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./modal-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedModels\n                            \n                            \n                                selectedPrices\n                            \n                            \n                                showModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                closeModal\n                            \n                            \n                                onPriceChange\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                maxPrice\n                            \n                            \n                                yachtModels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersApplied\n                            \n                            \n                                priceChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        maxPrice\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n                        \n                            \n                                    Defined in src/component/modal-filter/modal-filter.component.ts:41\n                            \n                        \n                \n                    \n                        Precio máximo inicial para el filtro.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        yachtModels\n                    \n                \n                \n                    \n                        Type :     string[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/component/modal-filter/modal-filter.component.ts:36\n                            \n                        \n                \n                    \n                        Lista de modelos de yates disponibles para filtrar.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersApplied\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/component/modal-filter/modal-filter.component.ts:25\n                            \n                        \n                \n                    \n                        Evento emitido cuando se aplican los filtros.\nDevuelve un objeto con los modelos y precios seleccionados.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        priceChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/component/modal-filter/modal-filter.component.ts:31\n                            \n                        \n                \n                    \n                        Evento emitido cuando se cambia el precio máximo.\nDevuelve el nuevo precio máximo seleccionado.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/modal-filter/modal-filter.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Aplica los filtros seleccionados y emite el evento con los datos.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/modal-filter/modal-filter.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de filtros.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPriceChange\n                        \n                    \n                \n            \n            \n                \nonPriceChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/modal-filter/modal-filter.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Maneja el cambio del valor del precio máximo en el modal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del input de precio máximo.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/modal-filter/modal-filter.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Abre el modal de filtros.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedModels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/component/modal-filter/modal-filter.component.ts:51\n                        \n                    \n\n            \n                \n                    Modelos seleccionados en el modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPrices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/component/modal-filter/modal-filter.component.ts:56\n                        \n                    \n\n            \n                \n                    Precios seleccionados en el modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/component/modal-filter/modal-filter.component.ts:46\n                        \n                    \n\n            \n                \n                    Estado de visibilidad del modal.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output, Input } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgForOf, NgIf } from '@angular/common';\n\n/**\n * Componente ModalFilter para filtrar resultados mediante selección de modelos y precios.\n * Abre un modal donde el usuario puede aplicar filtros personalizados.\n */\n@Component({\n  selector: 'app-modal-filter',\n  standalone: true,\n  imports: [\n    FormsModule,\n    NgForOf,\n    NgIf\n  ],\n  templateUrl: './modal-filter.component.html'\n})\nexport class ModalFilterComponent {\n\n  /**\n   * Evento emitido cuando se aplican los filtros.\n   * Devuelve un objeto con los modelos y precios seleccionados.\n   */\n  @Output() filtersApplied = new EventEmitter();\n\n  /**\n   * Evento emitido cuando se cambia el precio máximo.\n   * Devuelve el nuevo precio máximo seleccionado.\n   */\n  @Output() priceChanged = new EventEmitter();\n\n  /**\n   * Lista de modelos de yates disponibles para filtrar.\n   */\n  @Input() yachtModels: string[] | null = null;\n\n  /**\n   * Precio máximo inicial para el filtro.\n   */\n  @Input() maxPrice: number = 2000;\n\n  /**\n   * Estado de visibilidad del modal.\n   */\n  showModal = false;\n\n  /**\n   * Modelos seleccionados en el modal.\n   */\n  selectedModels: { [key: string]: boolean } = {};\n\n  /**\n   * Precios seleccionados en el modal.\n   */\n  selectedPrices: { [key: string]: boolean } = {};\n\n  /**\n   * Abre el modal de filtros.\n   */\n  openModal() {\n    this.showModal = true;\n  }\n\n  /**\n   * Cierra el modal de filtros.\n   */\n  closeModal() {\n    this.showModal = false;\n  }\n\n  /**\n   * Maneja el cambio del valor del precio máximo en el modal.\n   * @param event Evento del input de precio máximo.\n   */\n  onPriceChange(event: any) {\n    this.maxPrice = event.target.value;\n    this.priceChanged.emit(this.maxPrice);\n  }\n\n  /**\n   * Aplica los filtros seleccionados y emite el evento con los datos.\n   */\n  applyFilters() {\n    const selectedModelsArray = Object.keys(this.selectedModels).filter(key => this.selectedModels[key]);\n    const selectedPricesArray = Object.keys(this.selectedPrices).filter(key => this.selectedPrices[key]);\n\n    this.filtersApplied.emit({ models: selectedModelsArray, prices: selectedPricesArray });\n    this.closeModal();\n  }\n}\n\n    \n\n    \n        \n  \n    Filtros\n\n    \n    Tipo de barco\n\n    \n      \n        \n        {{ model }}\n      \n    \n\n    \n    Rango de Precio\n\n    \n      \n      Hasta {{ maxPrice }}€\n    \n\n    \n      Aplicar filtros\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Filtros        Tipo de barco                          {{ model }}                  Rango de Precio                Hasta {{ maxPrice }}€              Aplicar filtros      '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que gestiona la visualización y edición del perfil del usuario, así como la gestión de sus reservas y la posibilidad de cambiar la contraseña.\n\nProfileComponent: Componente para mostrar y editar el perfil del usuario, incluyendo la gestión de reservas y cambio de contraseña.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-profile\n            \n\n\n            \n                imports\n                \n                                HeaderComponent\n                            ButtonModule\n                            CommonModule\n                            DialogModule\n                            FormsModule\n                            InputText\n                            ToastModule\n                                CardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthdateValid\n                            \n                            \n                                changePasswordData\n                            \n                            \n                                displayChangePasswordModal\n                            \n                            \n                                displayModal\n                            \n                            \n                                dniValid\n                            \n                            \n                                editedUser\n                            \n                            \n                                emailValid\n                            \n                            \n                                errorMessage\n                            \n                            \n                                passwordsMismatch\n                            \n                            \n                                phoneValid\n                            \n                            \n                                tripsBooked\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                getAvatarUrl\n                            \n                            \n                                getTripsBooked\n                            \n                            \n                                hideChangePasswordModal\n                            \n                            \n                                hideModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveChanges\n                            \n                            \n                                showChangePasswordModal\n                            \n                            \n                                showModal\n                            \n                            \n                                validateBirthdate\n                            \n                            \n                                validateEmail\n                            \n                            \n                                validateForm\n                            \n                            \n                                validatePassWordForm\n                            \n                            \n                                validatePhoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, messageService: MessageService, bookingService: BookingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/profile.component.ts:97\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta los servicios necesarios: AuthService, MessageService y BookingService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que gestiona la autenticación del usuario.\n\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para mostrar mensajes emergentes.\n\n\n                                                        \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que gestiona las reservas de los viajes.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:299\n                        \n                    \n\n\n            \n                \n                        Cambia la contraseña del usuario después de validar el formulario de cambio de contraseña.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAvatarUrl\n                        \n                    \n                \n            \n            \n                \ngetAvatarUrl(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:216\n                        \n                    \n\n\n            \n                \n                        Obtiene la URL para el avatar del usuario usando sus iniciales.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNombre de usuario del usuario autenticado.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                La URL generada para el avatar.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTripsBooked\n                        \n                    \n                \n            \n            \n                \ngetTripsBooked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:349\n                        \n                    \n\n\n            \n                \n                        Obtiene las reservas confirmadas del usuario autenticado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideChangePasswordModal\n                        \n                    \n                \n            \n            \n                \nhideChangePasswordModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:291\n                        \n                    \n\n\n            \n                \n                        Oculta el modal para cambiar la contraseña.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideModal\n                        \n                    \n                \n            \n            \n                \nhideModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Oculta el modal de edición del perfil.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Método que se ejecuta al inicializar el componente. Obtiene la información del usuario autenticado y, si está disponible, carga sus viajes reservados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChanges\n                        \n                    \n                \n            \n            \n                \nsaveChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:228\n                        \n                    \n\n\n            \n                \n                        Guarda los cambios realizados en el perfil del usuario si el formulario es válido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showChangePasswordModal\n                        \n                    \n                \n            \n            \n                \nshowChangePasswordModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:281\n                        \n                    \n\n\n            \n                \n                        Muestra el modal para cambiar la contraseña del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n            \n                \nshowModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Muestra el modal de edición del perfil.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateBirthdate\n                        \n                    \n                \n            \n            \n                \nvalidateBirthdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Valida la fecha de nacimiento del usuario.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si la edad del usuario es mayor de 18 años, false si no lo es.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateEmail\n                        \n                    \n                \n            \n            \n                \nvalidateEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:186\n                        \n                    \n\n\n            \n                \n                        Valida la dirección de correo electrónico ingresada por el usuario.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el correo es válido, false si no lo es.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n            \n                \nvalidateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Valida los datos del formulario antes de guardarlos.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el formulario es válido, false si contiene errores.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePassWordForm\n                        \n                    \n                \n            \n            \n                \nvalidatePassWordForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:332\n                        \n                    \n\n\n            \n                \n                        Valida el formulario de cambio de contraseña para asegurarse de que las contraseñas coinciden.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si las contraseñas coinciden, false si no lo hacen.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePhoneNumber\n                        \n                    \n                \n            \n            \n                \nvalidatePhoneNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Valida el número de teléfono ingresado por el usuario.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el teléfono es válido, false si no lo es.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        birthdateValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePasswordData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:81\n                        \n                    \n\n            \n                \n                    Datos para el cambio de contraseña, incluyendo la contraseña anterior, nueva y confirmación.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayChangePasswordModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:54\n                        \n                    \n\n            \n                \n                    Controla la visibilidad del modal de cambio de contraseña.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:48\n                        \n                    \n\n            \n                \n                    Controla la visibilidad del modal de edición del perfil.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dniValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:66\n                        \n                    \n\n            \n                \n                    Validación del número de teléfono ingresado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:60\n                        \n                    \n\n            \n                \n                    Datos del usuario que se están editando en el modal.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:75\n                        \n                    \n\n            \n                \n                    Mensaje de error en caso de que ocurra un problema con los datos del perfil.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMismatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:91\n                        \n                    \n\n            \n                \n                    Controla la validación de las contraseñas coincidentes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripsBooked\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:97\n                        \n                    \n\n            \n                \n                    Lista de los viajes reservados por el usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:42\n                        \n                    \n\n            \n                \n                    Información del usuario autenticado obtenida a través del servicio AuthService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HeaderComponent } from '../../../component/header/header.component';\nimport { ButtonModule } from 'primeng/button';\nimport { AuthService } from '../../services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { DialogModule } from 'primeng/dialog';\nimport { FormsModule } from '@angular/forms';\nimport { InputText } from 'primeng/inputtext';\nimport { MessageService } from 'primeng/api';\nimport { ToastModule } from 'primeng/toast';\nimport { BookingService } from '../../services/booking.service';\nimport { CardComponent } from '../../../component/card/card.component';\n\n/**\n * @description\n * Componente que gestiona la visualización y edición del perfil del usuario, así como la gestión de sus reservas y la posibilidad de cambiar la contraseña.\n *\n * @exports\n * - `ProfileComponent`: Componente para mostrar y editar el perfil del usuario, incluyendo la gestión de reservas y cambio de contraseña.\n */\n@Component({\n  selector: 'app-profile',\n  imports: [\n    HeaderComponent,\n    ButtonModule,\n    CommonModule,\n    DialogModule,\n    FormsModule,\n    InputText,\n    ToastModule,\n    CardComponent\n  ],\n  providers: [MessageService],\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent implements OnInit {\n\n  /**\n   * @description\n   * Información del usuario autenticado obtenida a través del servicio `AuthService`.\n   */\n  user: any;\n\n  /**\n   * @description\n   * Controla la visibilidad del modal de edición del perfil.\n   */\n  displayModal: boolean = false;\n\n  /**\n   * @description\n   * Controla la visibilidad del modal de cambio de contraseña.\n   */\n  displayChangePasswordModal: boolean = false;\n\n  /**\n   * @description\n   * Datos del usuario que se están editando en el modal.\n   */\n  editedUser: any = {};\n\n  /**\n   * @description\n   * Validación del número de teléfono ingresado.\n   */\n  dniValid: boolean = true;\n  phoneValid: boolean = true;\n  emailValid: boolean = true;\n  birthdateValid: boolean = true;\n\n  /**\n   * @description\n   * Mensaje de error en caso de que ocurra un problema con los datos del perfil.\n   */\n  errorMessage: string = '';\n\n  /**\n   * @description\n   * Datos para el cambio de contraseña, incluyendo la contraseña anterior, nueva y confirmación.\n   */\n  changePasswordData: any = {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  };\n\n  /**\n   * @description\n   * Controla la validación de las contraseñas coincidentes.\n   */\n  passwordsMismatch: boolean = false;\n\n  /**\n   * @description\n   * Lista de los viajes reservados por el usuario.\n   */\n  tripsBooked: any[] = [];\n\n  /**\n   * @description\n   * Constructor que inyecta los servicios necesarios: `AuthService`, `MessageService` y `BookingService`.\n   *\n   * @param authService - Servicio que gestiona la autenticación del usuario.\n   * @param messageService - Servicio para mostrar mensajes emergentes.\n   * @param bookingService - Servicio que gestiona las reservas de los viajes.\n   */\n  constructor(private authService: AuthService, private messageService: MessageService, private bookingService: BookingService) {}\n\n  /**\n   * @description\n   * Método que se ejecuta al inicializar el componente. Obtiene la información del usuario autenticado y, si está disponible, carga sus viajes reservados.\n   */\n  ngOnInit(): void {\n    this.authService.getAuthenticatedUser().subscribe({\n      next: (data) => {\n        this.user = data;\n        this.editedUser = { ...data };\n        if (this.user?.id) {\n          this.getTripsBooked();\n        }\n      },\n      error: (error) => {\n        console.error('Error obteniendo el usuario', error);\n      }\n    });\n  }\n\n  /**\n   * @description\n   * Muestra el modal de edición del perfil.\n   */\n  showModal(): void {\n    this.displayModal = true;\n  }\n\n  /**\n   * @description\n   * Oculta el modal de edición del perfil.\n   */\n  hideModal(): void {\n    this.displayModal = false;\n  }\n\n  /**\n   * @description\n   * Valida los datos del formulario antes de guardarlos.\n   *\n   * @returns `true` si el formulario es válido, `false` si contiene errores.\n   */\n  validateForm(): boolean {\n    let isValid = true;\n\n    if (!this.validatePhoneNumber()) {\n      isValid = false;\n    }\n\n    if (!this.validateEmail()) {\n      isValid = false;\n    }\n\n    if (!this.validateBirthdate()) {\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @description\n   * Valida el número de teléfono ingresado por el usuario.\n   *\n   * @returns `true` si el teléfono es válido, `false` si no lo es.\n   */\n  validatePhoneNumber(): boolean {\n    const phonePattern = /^[0-9]{9,15}$/;\n    this.phoneValid = phonePattern.test(this.editedUser.client.phone_number);\n    return this.phoneValid;\n  }\n\n  /**\n   * @description\n   * Valida la dirección de correo electrónico ingresada por el usuario.\n   *\n   * @returns `true` si el correo es válido, `false` si no lo es.\n   */\n  validateEmail(): boolean {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    this.emailValid = emailPattern.test(this.editedUser.email);\n    return this.emailValid;\n  }\n\n  /**\n   * @description\n   * Valida la fecha de nacimiento del usuario.\n   *\n   * @returns `true` si la edad del usuario es mayor de 18 años, `false` si no lo es.\n   */\n  validateBirthdate(): boolean {\n    const today = new Date();\n    const birthdate = new Date(this.editedUser.client.birthdate);\n    const age = today.getFullYear() - birthdate.getFullYear();\n    const m = today.getMonth() - birthdate.getMonth();\n    const birthdateValid = age > 18 || (age === 18 && m >= 0);\n    this.birthdateValid = birthdateValid;\n    return birthdateValid;\n  }\n\n  /**\n   * @description\n   * Obtiene la URL para el avatar del usuario usando sus iniciales.\n   *\n   * @param username - Nombre de usuario del usuario autenticado.\n   *\n   * @returns La URL generada para el avatar.\n   */\n  getAvatarUrl(username: string): string {\n    if (!username) {\n      return `https://ui-avatars.com/api/?name=XX&background=0D8ABC&color=fff`;\n    }\n    const initials = username.substring(0, 2).toUpperCase();\n    return `https://ui-avatars.com/api/?name=${initials}&background=0D8ABC&color=fff`;\n  }\n\n  /**\n   * @description\n   * Guarda los cambios realizados en el perfil del usuario si el formulario es válido.\n   */\n  saveChanges(): void {\n    if (this.validateForm()) {\n      this.authService.getAuthenticatedUser().subscribe({\n        next: () => {\n          this.authService.updateUser(this.editedUser).subscribe({\n            next: (response) => {\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Éxito',\n                detail: 'Usuario actualizado correctamente.',\n              });\n              this.displayModal = false;\n            },\n            error: (error) => {\n              if (error.status === 400 && error.error.error === 'El nombre de usuario ya está en uso') {\n                this.messageService.add({\n                  severity: 'error',\n                  summary: 'Error',\n                  detail: 'El nombre de usuario ya está en uso. Elige otro.',\n                });\n              } else {\n                this.messageService.add({\n                  severity: 'error',\n                  summary: 'Error',\n                  detail: 'Ocurrió un error al actualizar el usuario.',\n                });\n              }\n              console.error('Error updating user:', error);\n            },\n          });\n        },\n        error: (error) => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'No se pudo obtener la información del usuario.',\n          });\n          console.error('Error getting user:', error);\n        },\n      });\n    } else {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Formulario inválido',\n        detail: 'Por favor, corrige los errores en el formulario antes de guardar.',\n      });\n    }\n  }\n\n  /**\n   * @description\n   * Muestra el modal para cambiar la contraseña del usuario.\n   */\n  showChangePasswordModal(): void {\n    this.displayChangePasswordModal = true;\n    this.changePasswordData = { oldPassword: '', newPassword: '', confirmPassword: '' };\n    this.passwordsMismatch = false;\n  }\n\n  /**\n   * @description\n   * Oculta el modal para cambiar la contraseña.\n   */\n  hideChangePasswordModal(): void {\n    this.displayChangePasswordModal = false;\n  }\n\n  /**\n   * @description\n   * Cambia la contraseña del usuario después de validar el formulario de cambio de contraseña.\n   */\n  changePassword(): void {\n    if (!this.validatePassWordForm()) {\n      return;\n    }\n\n    const { oldPassword, newPassword, confirmPassword } = this.changePasswordData;\n\n    this.authService.changePassword(oldPassword, newPassword, confirmPassword).subscribe({\n      next: (response) => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Contraseña cambiada',\n          detail: 'Tu contraseña ha sido cambiada correctamente.',\n        });\n        this.hideChangePasswordModal();\n      },\n      error: (error) => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Hubo un error al cambiar la contraseña.',\n        });\n        console.error('Error cambiando la contraseña:', error);\n      }\n    });\n  }\n\n  /**\n   * @description\n   * Valida el formulario de cambio de contraseña para asegurarse de que las contraseñas coinciden.\n   *\n   * @returns `true` si las contraseñas coinciden, `false` si no lo hacen.\n   */\n  validatePassWordForm(): boolean {\n    let isValid = true;\n\n    if (this.changePasswordData.newPassword !== this.changePasswordData.confirmPassword) {\n      isValid = false;\n      this.passwordsMismatch = true;\n    } else {\n      this.passwordsMismatch = false;\n    }\n\n    return isValid;\n  }\n\n  /**\n   * @description\n   * Obtiene las reservas confirmadas del usuario autenticado.\n   */\n  getTripsBooked(): void {\n    if (!this.user?.id) return;\n\n    this.bookingService.getConfirmedReservations(this.user.id).subscribe({\n      next: (trips) => {\n        this.tripsBooked = trips;\n\n        this.tripsBooked.forEach((booking, index) => {\n          this.bookingService.getTripById(booking.trip_id).subscribe({\n            next: (trip) => {\n              this.tripsBooked[index].trip = trip;\n            },\n            error: (error) => {\n              console.error(`Error obteniendo trip con ID ${booking.trip_id}:`, error);\n            }\n          });\n        });\n      },\n      error: (error) => {\n        console.error('Error obteniendo las reservas:', error);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n    \n    \n      \n        \n          Nombre: \n          {{ user.client?.name }}\n        \n        \n          Apellidos: \n          {{ user.client?.surname }}\n        \n        \n          Numero de teléfono: \n          {{ user.client?.phone_number }}\n        \n        \n          Email: \n          {{ user.email }}\n        \n      \n      \n        \n        \n      \n    \n  \n  \n    Editar Usuario\n    Actualiza tus datos\n\n    \n      \n      \n        Nombre de Usuario\n        \n      \n\n      \n      \n        Nombre\n        \n      \n\n      \n      \n        Apellidos\n        \n      \n\n      \n      \n        Dirección\n        \n      \n\n      \n      \n        Número de Teléfono\n        \n        \n          Introduce un número de teléfono válido (9-15 dígitos).\n        \n      \n\n      \n      \n        Email\n        \n        \n          Introduce un correo válido.\n        \n      \n\n      \n      \n        Fecha de nacimiento\n        \n        \n          Debes tener al menos 18 años para registrarte.\n        \n      \n      \n        \n        \n      \n    \n  \n  \n    Cambiar Contraseña\n\n    \n      \n        Contraseña Antigua\n        \n      \n\n      \n        Nueva Contraseña\n        \n      \n\n      \n        Confirmar Nueva Contraseña\n        \n        \n          Las contraseñas no coinciden.\n        \n      \n\n      \n        \n        \n      \n    \n  \n\n  \n    Tus reservas: \n    \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Nombre:           {{ user.client?.name }}                          Apellidos:           {{ user.client?.surname }}                          Numero de teléfono:           {{ user.client?.phone_number }}                          Email:           {{ user.email }}                                                      Editar Usuario    Actualiza tus datos                        Nombre de Usuario                                  Nombre                                  Apellidos                                  Dirección                                  Número de Teléfono                          Introduce un número de teléfono válido (9-15 dígitos).                                  Email                          Introduce un correo válido.                                  Fecha de nacimiento                          Debes tener al menos 18 años para registrarte.                                                      Cambiar Contraseña                  Contraseña Antigua                            Nueva Contraseña                            Confirmar Nueva Contraseña                          Las contraseñas no coinciden.                                                      Tus reservas:                   '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchPageComponent.html":{"url":"components/SearchPageComponent.html","title":"component - SearchPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/search-page/search-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de la página de búsqueda de viajes. Permite buscar, filtrar y ver detalles de los viajes basados en criterios como modelo de yate, precio y nombre.\n\nSearchPageComponent: Componente que gestiona la búsqueda y filtrado de viajes en la interfaz de usuario.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-page\n            \n\n\n            \n                imports\n                \n                                HeaderComponent\n                                SearchbarComponent\n                                CardDetailsComponent\n                                ModalFilterComponent\n                            NgForOf\n                            NgIf\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTrips\n                            \n                            \n                                maxPrice\n                            \n                            \n                                priceRanges\n                            \n                            \n                                searchQuery\n                            \n                            \n                                selectedModels\n                            \n                            \n                                selectedPrices\n                            \n                            \n                                trips\n                            \n                            \n                                yachtModels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                extractYachtModels\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterChange\n                            \n                            \n                                onFiltersApplied\n                            \n                            \n                                onPriceChange\n                            \n                            \n                                onPriceChanged\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, tripService: TripService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/search-page/search-page.component.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor del componente, que inyecta el servicio TripService y el ActivatedRoute para obtener los viajes y los parámetros de la URL.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProporciona acceso a los parámetros de la ruta y a la consulta de búsqueda.\n\n\n                                                        \n                                                \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que obtiene los viajes disponibles.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/search-page/search-page.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Aplica los filtros de búsqueda y precio a los viajes.\nActualiza la lista de trips con los viajes que cumplen con los criterios de búsqueda y filtro.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractYachtModels\n                        \n                    \n                \n            \n            \n                \nextractYachtModels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/search-page/search-page.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Extrae los modelos de los yates de los viajes disponibles y los guarda en el array yachtModels.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/search-page/search-page.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Método del ciclo de vida de Angular que se llama cuando el componente se inicializa.\nCarga todos los viajes disponibles desde el servicio y extrae los modelos de yates.\nAdemás, suscribe a los parámetros de consulta de la URL para realizar una búsqueda inicial si es necesario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterChange\n                        \n                    \n                \n            \n            \n                \nonFilterChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/search-page/search-page.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Se llama cuando hay un cambio en los filtros de la página. Aplica los filtros a los viajes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFiltersApplied\n                        \n                    \n                \n            \n            \n                \nonFiltersApplied(filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/search-page/search-page.component.ts:205\n                        \n                    \n\n\n            \n                \n                        Se llama cuando se aplican nuevos filtros desde el modal de filtros.\nActualiza los modelos y precios seleccionados y aplica los filtros.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObjeto que contiene los filtros aplicados por el usuario.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPriceChange\n                        \n                    \n                \n            \n            \n                \nonPriceChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/search-page/search-page.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Se llama cuando cambia el valor del filtro de precio a través de un control de entrada.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl evento que contiene el nuevo valor del filtro de precio.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPriceChanged\n                        \n                    \n                \n            \n            \n                \nonPriceChanged(newMaxPrice: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/search-page/search-page.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Se llama cuando se cambia el precio máximo. Actualiza el filtro de precio y aplica los filtros.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newMaxPrice\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl nuevo precio máximo seleccionado.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/search-page/search-page.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Se llama cuando se realiza una búsqueda. Filtra los viajes según el texto de búsqueda.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLa cadena de texto de búsqueda.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allTrips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/search-page/search-page.component.ts:44\n                        \n                    \n\n            \n                \n                    Lista completa de viajes que se obtienen del servicio TripService.\nEsta lista se utiliza para aplicar los filtros y realizar la búsqueda.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n                    \n                        \n                                Defined in src/app/features/search-page/search-page.component.ts:76\n                        \n                    \n\n            \n                \n                    Precio máximo seleccionado para filtrar los viajes por precio.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priceRanges\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { value: \"250\", label: \"Hasta 250€\" },\n    { value: \"500\", label: \"Hasta 500€\" },\n    { value: \"1000\", label: \"Hasta 1000€\" },\n    { value: \"2000\", label: \"Hasta 2000€\" }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/search-page/search-page.component.ts:112\n                        \n                    \n\n            \n                \n                    Rango de precios disponibles para filtrar los viajes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/search-page/search-page.component.ts:50\n                        \n                    \n\n            \n                \n                    Consulta de búsqueda que se obtiene desde los parámetros de la URL o el formulario de búsqueda.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedModels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/search-page/search-page.component.ts:63\n                        \n                    \n\n            \n                \n                    Diccionario de modelos seleccionados para el filtrado.\nLa clave es el modelo del yate, y el valor es un booleano que indica si está seleccionado o no.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPrices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/search-page/search-page.component.ts:70\n                        \n                    \n\n            \n                \n                    Diccionario de rangos de precio seleccionados para el filtrado.\nLa clave es el rango de precio, y el valor es un booleano que indica si está seleccionado o no.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trips\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/search-page/search-page.component.ts:37\n                        \n                    \n\n            \n                \n                    Lista de viajes filtrados que se muestran en la interfaz de usuario.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yachtModels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/search-page/search-page.component.ts:56\n                        \n                    \n\n            \n                \n                    Modelos de yates disponibles para filtrar.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HeaderComponent } from '../../../component/header/header.component';\nimport { SearchbarComponent } from '../../../component/searchbar/searchbar.component';\nimport { CardDetailsComponent } from '../../../component/card-details/card-details.component';\nimport { ModalFilterComponent } from '../../../component/modal-filter/modal-filter.component';\nimport { Trip } from '../../model/trip';\nimport { TripService } from '../../services/trip.service';\nimport { NgForOf, NgIf } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * @description\n * Componente de la página de búsqueda de viajes. Permite buscar, filtrar y ver detalles de los viajes basados en criterios como modelo de yate, precio y nombre.\n *\n * @exports\n * - `SearchPageComponent`: Componente que gestiona la búsqueda y filtrado de viajes en la interfaz de usuario.\n */\n@Component({\n  selector: 'app-search-page',\n  imports: [\n    HeaderComponent,\n    SearchbarComponent,\n    CardDetailsComponent,\n    ModalFilterComponent,\n    NgForOf,\n    NgIf,\n    FormsModule\n  ],\n  templateUrl: './search-page.component.html'\n})\nexport class SearchPageComponent implements OnInit {\n  /**\n   * @description\n   * Lista de viajes filtrados que se muestran en la interfaz de usuario.\n   */\n  trips: Trip[] = [];\n\n  /**\n   * @description\n   * Lista completa de viajes que se obtienen del servicio `TripService`.\n   * Esta lista se utiliza para aplicar los filtros y realizar la búsqueda.\n   */\n  allTrips: Trip[] = [];\n\n  /**\n   * @description\n   * Consulta de búsqueda que se obtiene desde los parámetros de la URL o el formulario de búsqueda.\n   */\n  searchQuery: string = '';\n\n  /**\n   * @description\n   * Modelos de yates disponibles para filtrar.\n   */\n  yachtModels: string[] = [];\n\n  /**\n   * @description\n   * Diccionario de modelos seleccionados para el filtrado.\n   * La clave es el modelo del yate, y el valor es un booleano que indica si está seleccionado o no.\n   */\n  selectedModels: { [key: string]: boolean } = {};\n\n  /**\n   * @description\n   * Diccionario de rangos de precio seleccionados para el filtrado.\n   * La clave es el rango de precio, y el valor es un booleano que indica si está seleccionado o no.\n   */\n  selectedPrices: { [key: string]: boolean } = {};\n\n  /**\n   * @description\n   * Precio máximo seleccionado para filtrar los viajes por precio.\n   */\n  maxPrice: number = 2000;\n\n  /**\n   * @description\n   * Constructor del componente, que inyecta el servicio `TripService` y el `ActivatedRoute` para obtener los viajes y los parámetros de la URL.\n   *\n   * @param route - Proporciona acceso a los parámetros de la ruta y a la consulta de búsqueda.\n   * @param tripService - Servicio que obtiene los viajes disponibles.\n   */\n  constructor(private route: ActivatedRoute, private tripService: TripService) {}\n\n  /**\n   * @description\n   * Método del ciclo de vida de Angular que se llama cuando el componente se inicializa.\n   * Carga todos los viajes disponibles desde el servicio y extrae los modelos de yates.\n   * Además, suscribe a los parámetros de consulta de la URL para realizar una búsqueda inicial si es necesario.\n   */\n  ngOnInit() {\n    this.tripService.allTrips().subscribe(trips => {\n      this.allTrips = trips;\n      this.trips = trips;\n\n      this.extractYachtModels();\n\n      this.route.queryParams.subscribe(params => {\n        if (params['query']) {\n          this.onSearch(params['query']);\n        }\n      });\n    });\n  }\n\n  /**\n   * @description\n   * Rango de precios disponibles para filtrar los viajes.\n   */\n  priceRanges = [\n    { value: \"250\", label: \"Hasta 250€\" },\n    { value: \"500\", label: \"Hasta 500€\" },\n    { value: \"1000\", label: \"Hasta 1000€\" },\n    { value: \"2000\", label: \"Hasta 2000€\" }\n  ];\n\n  /**\n   * @description\n   * Extrae los modelos de los yates de los viajes disponibles y los guarda en el array `yachtModels`.\n   */\n  extractYachtModels() {\n    const modelsSet = new Set();\n    this.allTrips.forEach(trip => {\n      if (trip.yacht?.model) {\n        modelsSet.add(trip.yacht.model);\n      }\n    });\n    this.yachtModels = Array.from(modelsSet);\n  }\n\n  /**\n   * @description\n   * Se llama cuando hay un cambio en los filtros de la página. Aplica los filtros a los viajes.\n   */\n  onFilterChange() {\n    this.applyFilters();\n  }\n\n  /**\n   * @description\n   * Se llama cuando se cambia el precio máximo. Actualiza el filtro de precio y aplica los filtros.\n   *\n   * @param newMaxPrice - El nuevo precio máximo seleccionado.\n   */\n  onPriceChanged(newMaxPrice: number) {\n    this.maxPrice = newMaxPrice;\n    this.applyFilters();\n  }\n\n  /**\n   * @description\n   * Se llama cuando se realiza una búsqueda. Filtra los viajes según el texto de búsqueda.\n   *\n   * @param query - La cadena de texto de búsqueda.\n   */\n  onSearch(query: string) {\n    this.searchQuery = query.trim().toLowerCase();\n    this.applyFilters();\n  }\n\n  /**\n   * @description\n   * Aplica los filtros de búsqueda y precio a los viajes.\n   * Actualiza la lista de `trips` con los viajes que cumplen con los criterios de búsqueda y filtro.\n   */\n  applyFilters() {\n    this.trips = this.allTrips.filter(trip => {\n      const matchesSearch = this.searchQuery === '' ||\n        trip.departure.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\n        trip.name.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\n        (trip.yacht?.name?.toLowerCase().includes(this.searchQuery.toLowerCase()));\n\n      const selectedModelsArray = Object.keys(this.selectedModels).filter(key => this.selectedModels[key]);\n      const matchesBoatType = selectedModelsArray.length === 0 ||\n        selectedModelsArray.includes(trip.yacht?.model);\n\n      const matchesPrice = this.maxPrice >= 2000 ? true : trip.price  this.selectedModels[model] = true);\n    filters.prices.forEach(price => this.selectedPrices[price] = true);\n\n    this.applyFilters();\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        Filtros\n      \n\n      \n        \n        \n          Resultados: {{ searchQuery }} ({{ trips.length }})\n        \n          Todos los viajes\n        \n\n        \n          Borrar busqueda\n        \n      \n\n\n       0\" class=\"mt-8 flex sm:flex-col gap-8 flex-row flex-wrap justify-center\">\n        \n      \n      \n        No se encuentran resultados con tu búsqueda.\n      \n    \n    \n      Filtros\n      Tipo de barco\n      \n        \n          \n          {{ model }}\n        \n      \n      Rango de Precio\n      \n        \n        Hasta {{ maxPrice }}€\n      \n    \n    \n    >\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Filtros                                      Resultados: {{ searchQuery }} ({{ trips.length }})                  Todos los viajes                          Borrar busqueda                     0\" class=\"mt-8 flex sm:flex-col gap-8 flex-row flex-wrap justify-center\">                            No se encuentran resultados con tu búsqueda.                    Filtros      Tipo de barco                                  {{ model }}                    Rango de Precio                      Hasta {{ maxPrice }}€                  >  '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchbarComponent.html":{"url":"components/SearchbarComponent.html","title":"component - SearchbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/searchbar/searchbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Searchbar para realizar búsquedas con campo de entrada.\nEmite un evento con el término de búsqueda al componente padre.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-searchbar\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./searchbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/component/searchbar/searchbar.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor del componente Searchbar.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de enrutamiento para redirigir a la página de búsqueda.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/component/searchbar/searchbar.component.ts:21\n                            \n                        \n                \n                    \n                        Evento de salida que emite el término de búsqueda.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/searchbar/searchbar.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Ejecuta la búsqueda y navega a la página de resultados.\nSi el término de búsqueda está vacío, no hace nada.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/component/searchbar/searchbar.component.ts:26\n                        \n                    \n\n            \n                \n                    Variable que almacena el término de búsqueda introducido.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { Router } from '@angular/router';\n\n/**\n * Componente Searchbar para realizar búsquedas con campo de entrada.\n * Emite un evento con el término de búsqueda al componente padre.\n */\n@Component({\n  selector: 'app-searchbar',\n  imports: [\n    FormsModule\n  ],\n  templateUrl: './searchbar.component.html'\n})\nexport class SearchbarComponent {\n\n  /**\n   * Evento de salida que emite el término de búsqueda.\n   */\n  @Output() searchEvent = new EventEmitter();\n\n  /**\n   * Variable que almacena el término de búsqueda introducido.\n   */\n  searchQuery: string = '';\n\n  /**\n   * Constructor del componente Searchbar.\n   * @param router Servicio de enrutamiento para redirigir a la página de búsqueda.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Ejecuta la búsqueda y navega a la página de resultados.\n   * Si el término de búsqueda está vacío, no hace nada.\n   */\n  search() {\n    const query = this.searchQuery.trim();\n    if (!query) return;\n\n    this.router.navigate(['/search'], { queryParams: { query } }).then(() => {\n      this.searchEvent.emit(query);\n      this.searchQuery = '';\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n  \n    Buscar\n  \n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Buscar                    '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Sidebar para la navegación lateral.\nPermite la visualización dinámica basada en la autenticación y el rol del usuario.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            NgClass\n                            RouterLink\n                            CommonModule\n                            AsyncPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isSidebarOpen\n                            \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/component/sidebar/sidebar.component.ts:56\n                            \n                        \n\n                \n                    \n                            Constructor del componente Sidebar.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación para gestionar la sesión del usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/sidebar/sidebar.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Cierra sesión del usuario a través del servicio de autenticación.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/sidebar/sidebar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente, obteniendo el rol del usuario y simulando un retraso de carga.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSidebar\n                        \n                    \n                \n            \n            \n                \ntoggleSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/sidebar/sidebar.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Alterna el estado del sidebar (abierto/cerrado).\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/component/sidebar/sidebar.component.ts:46\n                        \n                    \n\n            \n                \n                    Indica si el componente está en estado de carga.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/component/sidebar/sidebar.component.ts:51\n                        \n                    \n\n            \n                \n                    Observable que indica si el usuario está autenticado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSidebarOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/component/sidebar/sidebar.component.ts:41\n                        \n                    \n\n            \n                \n                    Estado de apertura del sidebar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/component/sidebar/sidebar.component.ts:56\n                        \n                    \n\n            \n                \n                    Rol del usuario autenticado.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { trigger, style, transition, animate } from '@angular/animations';\nimport { NgIf, AsyncPipe, CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { NgClass } from '@angular/common';\nimport { AuthService } from '../../app/services/auth.service';\nimport { Observable } from 'rxjs';\n\n/**\n * Componente Sidebar para la navegación lateral.\n * Permite la visualización dinámica basada en la autenticación y el rol del usuario.\n */\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  animations: [\n    trigger('sidebarAnimation', [\n      transition(':enter', [\n        style({ transform: 'translateX(-100%)' }),\n        animate('300ms ease-out', style({ transform: 'translateX(0)' })),\n      ]),\n      transition(':leave', [\n        animate('300ms ease-in', style({ transform: 'translateX(-100%)' })),\n      ]),\n    ]),\n  ],\n  imports: [\n    NgIf,\n    NgClass,\n    RouterLink,\n    CommonModule,\n    AsyncPipe\n  ],\n  standalone: true\n})\nexport class SidebarComponent implements OnInit {\n\n  /**\n   * Estado de apertura del sidebar.\n   */\n  isSidebarOpen = false;\n\n  /**\n   * Indica si el componente está en estado de carga.\n   */\n  isLoading = true;\n\n  /**\n   * Observable que indica si el usuario está autenticado.\n   */\n  isLoggedIn!: Observable;\n\n  /**\n   * Rol del usuario autenticado.\n   */\n  userRole: string | null = null;\n\n  /**\n   * Constructor del componente Sidebar.\n   * @param authService Servicio de autenticación para gestionar la sesión del usuario.\n   */\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Inicializa el componente, obteniendo el rol del usuario y simulando un retraso de carga.\n   */\n  ngOnInit() {\n    this.isLoggedIn = this.authService.isAuthenticated();\n    this.authService.getUserRole().subscribe(role => {\n      this.userRole = role;\n    });\n\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 1000);\n  }\n\n  /**\n   * Alterna el estado del sidebar (abierto/cerrado).\n   */\n  toggleSidebar() {\n    this.isSidebarOpen = !this.isSidebarOpen;\n  }\n\n  /**\n   * Cierra sesión del usuario a través del servicio de autenticación.\n   */\n  logout() {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n    \n      \n        \n      \n\n      \n        \n          \n        \n        Close sidebar\n      \n    \n\n    \n    \n      \n        \n          \n        \n        Inicio\n      \n      \n        \n          \n        \n        Explorar\n      \n      \n        \n          \n        \n        Perfil\n      \n      \n        \n          \n        \n        Administración\n      \n    \n    \n      \n        \n          \n            \n            Iniciar Sesión\n          \n          \n            \n              \n            \n            Cerrar Sesión\n          \n        \n\n      \n    \n  \n\n\n\n  \n    \n  \n  Open menu\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              Close sidebar                                                          Inicio                                              Explorar                                              Perfil                                              Administración                                                              Iniciar Sesión                                                                      Cerrar Sesión                                        Open menu'\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente Toast para mostrar notificaciones emergentes.\nUtiliza PrimeNG para brindar una interfaz de notificaciones estilizada.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-toast\n            \n\n\n            \n                imports\n                \n                            Toast\n                \n            \n\n\n            \n                styles\n                \n    .toast-container {\n      position: fixed;\n      top: 1rem;\n      right: 1rem;\n      width: auto;\n      max-width: 90%;\n      z-index: 1000;\n    }\n  \n            \n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                messageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/component/toast/toast.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor del componente Toast.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de mensajería de PrimeNG para gestionar las notificaciones.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMessage\n                        \n                    \n                \n            \n            \n                \naddMessage(severity: string, summary: string, detail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/toast/toast.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Agrega un nuevo mensaje al Toast.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                severity\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tipo de mensaje (info, success, warn, error).\n\n                                            \n                                        \n                                        \n                                                summary\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Título del mensaje.\n\n                                            \n                                        \n                                        \n                                                detail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Detalle del mensaje.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/component/toast/toast.component.ts:33\n                        \n                    \n\n            \n                \n                    Servicio de mensajería de PrimeNG para gestionar las notificaciones.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { Toast } from 'primeng/toast';\n\n/**\n * Componente Toast para mostrar notificaciones emergentes.\n * Utiliza PrimeNG para brindar una interfaz de notificaciones estilizada.\n */\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styles: [`\n    .toast-container {\n      position: fixed;\n      top: 1rem;\n      right: 1rem;\n      width: auto;\n      max-width: 90%;\n      z-index: 1000;\n    }\n  `],\n  imports: [\n    Toast\n  ],\n  providers: [MessageService]\n})\nexport class ToastComponent {\n\n  /**\n   * Constructor del componente Toast.\n   * @param messageService Servicio de mensajería de PrimeNG para gestionar las notificaciones.\n   */\n  constructor(public messageService: MessageService) {}\n\n  /**\n   * Agrega un nuevo mensaje al Toast.\n   * @param severity Tipo de mensaje (info, success, warn, error).\n   * @param summary Título del mensaje.\n   * @param detail Detalle del mensaje.\n   */\n  addMessage(severity: string, summary: string, detail: string) {\n    this.messageService.add({ severity, summary, detail });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n            \n    .toast-container {\n      position: fixed;\n      top: 1rem;\n      right: 1rem;\n      width: auto;\n      max-width: 90%;\n      z-index: 1000;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de mostrar mensajes de notificación tipo \"Toast\" en la interfaz de usuario.\nEste servicio utiliza el servicio MessageService de PrimeNG para mostrar mensajes con diferentes niveles de severidad (informativos, de advertencia, de error, etc.)\nExample :this.toastService.showMessage('success', 'Operación exitosa', 'La operación se completó con éxito.');\nthis.toastService.showMessage('error', 'Error', 'Ocurrió un error al procesar la solicitud.');\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/toast.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta el servicio MessageService de PrimeNG para mostrar mensajes tipo \"Toast\".\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio utilizado para mostrar los mensajes de notificación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showMessage\n                        \n                    \n                \n            \n            \n                \nshowMessage(severity: string, summary: string, detail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Método para mostrar un mensaje de notificación tipo \"Toast\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                severity\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nivel de severidad del mensaje. Puede ser success, info, warn, error, etc.\n\n                                            \n                                        \n                                        \n                                                summary\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resumen breve del mensaje que se mostrará.\n\n                                            \n                                        \n                                        \n                                                detail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Descripción detallada del mensaje que se mostrará.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MessageService } from 'primeng/api';\n\n/**\n * Servicio encargado de mostrar mensajes de notificación tipo \"Toast\" en la interfaz de usuario.\n *\n * Este servicio utiliza el servicio `MessageService` de PrimeNG para mostrar mensajes con diferentes niveles de severidad (informativos, de advertencia, de error, etc.)\n *\n * @example\n * this.toastService.showMessage('success', 'Operación exitosa', 'La operación se completó con éxito.');\n * this.toastService.showMessage('error', 'Error', 'Ocurrió un error al procesar la solicitud.');\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  /**\n   * Constructor que inyecta el servicio `MessageService` de PrimeNG para mostrar mensajes tipo \"Toast\".\n   *\n   * @param messageService Servicio utilizado para mostrar los mensajes de notificación.\n   */\n  constructor(private messageService: MessageService) {}\n\n  /**\n   * Método para mostrar un mensaje de notificación tipo \"Toast\".\n   *\n   * @param severity El nivel de severidad del mensaje. Puede ser `success`, `info`, `warn`, `error`, etc.\n   * @param summary Resumen breve del mensaje que se mostrará.\n   * @param detail Descripción detallada del mensaje que se mostrará.\n   */\n  showMessage(severity: string, summary: string, detail: string) {\n    this.messageService.add({ severity, summary, detail });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trip.html":{"url":"interfaces/Trip.html","title":"interface - Trip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Trip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/trip.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un viaje en el sistema.\nEsta interfaz define la estructura de un viaje, incluyendo detalles como el nombre del\nviaje, la fecha de salida, el precio, la duración, la descripción, y el yate asociado al viaje.\nExample :const trip: Trip = {\n  name: 'Tour por el Caribe',\n  departure: 'Puerto de Miami',\n  price: 1500,\n  duration_hours: 12,\n  description: 'Un increíble tour por las aguas cristalinas del Caribe.',\n  startdate: '2025-06-01T08:00:00',\n  enddate: '2025-06-01T20:00:00',\n  yacht: {\n    name: 'Ocean Breeze',\n    model: 'Luxury 3500',\n    image: 'url-to-image',\n    description: 'Un yate de lujo con todas las comodidades.',\n    capacity: 30\n  }\n};\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            departure\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            duration_hours\n                                        \n                                \n                                \n                                        \n                                            enddate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            startdate\n                                        \n                                \n                                \n                                        \n                                            yacht\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lugar de salida del viaje.\nEste campo es obligatorio y debe contener la ubicación desde donde parte el viaje.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción del viaje.\nEste campo es obligatorio y debe proporcionar una descripción detallada del viaje.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration_hours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration_hours:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Duración del viaje en horas.\nEste campo es obligatorio y debe indicar la duración total del viaje en horas.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enddate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enddate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha y hora de finalización del viaje.\nEste campo es obligatorio y debe contener la fecha y hora de finalización del viaje en formato ISO 8601.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Identificador único del viaje.\nEste campo es opcional y se asigna cuando el viaje ya está registrado en el sistema.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del viaje.\nEste campo es obligatorio y debe contener el nombre que identifique el viaje.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio del viaje.\nEste campo es obligatorio y debe contener el costo total del viaje.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha y hora de inicio del viaje.\nEste campo es obligatorio y debe contener la fecha y hora de inicio del viaje en formato ISO 8601.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yacht\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yacht:         Yacht\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Yacht\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Yate asociado al viaje.\nEste campo es obligatorio y debe contener un objeto de tipo Yacht que representa el yate utilizado para el viaje.\nExample :{\n  name: 'Ocean Breeze',\n  model: 'Luxury 3500',\n  image: 'url-to-image',\n  description: 'Un yate de lujo con todas las comodidades.',\n  capacity: 30\n}\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Yacht} from './yacht';\n\n/**\n * Representa un viaje en el sistema.\n *\n * Esta interfaz define la estructura de un viaje, incluyendo detalles como el nombre del\n * viaje, la fecha de salida, el precio, la duración, la descripción, y el yate asociado al viaje.\n *\n * @example\n * const trip: Trip = {\n *   name: 'Tour por el Caribe',\n *   departure: 'Puerto de Miami',\n *   price: 1500,\n *   duration_hours: 12,\n *   description: 'Un increíble tour por las aguas cristalinas del Caribe.',\n *   startdate: '2025-06-01T08:00:00',\n *   enddate: '2025-06-01T20:00:00',\n *   yacht: {\n *     name: 'Ocean Breeze',\n *     model: 'Luxury 3500',\n *     image: 'url-to-image',\n *     description: 'Un yate de lujo con todas las comodidades.',\n *     capacity: 30\n *   }\n * };\n */\nexport interface Trip {\n  /**\n   * Identificador único del viaje.\n   *\n   * Este campo es opcional y se asigna cuando el viaje ya está registrado en el sistema.\n   *\n   * @example 1\n   */\n  id?: number;\n\n  /**\n   * Nombre del viaje.\n   *\n   * Este campo es obligatorio y debe contener el nombre que identifique el viaje.\n   *\n   * @example 'Tour por el Caribe'\n   */\n  name: string;\n\n  /**\n   * Lugar de salida del viaje.\n   *\n   * Este campo es obligatorio y debe contener la ubicación desde donde parte el viaje.\n   *\n   * @example 'Puerto de Miami'\n   */\n  departure: string;\n\n  /**\n   * Precio del viaje.\n   *\n   * Este campo es obligatorio y debe contener el costo total del viaje.\n   *\n   * @example 1500\n   */\n  price: number;\n\n  /**\n   * Duración del viaje en horas.\n   *\n   * Este campo es obligatorio y debe indicar la duración total del viaje en horas.\n   *\n   * @example 12\n   */\n  duration_hours: number;\n\n  /**\n   * Descripción del viaje.\n   *\n   * Este campo es obligatorio y debe proporcionar una descripción detallada del viaje.\n   *\n   * @example 'Un increíble tour por las aguas cristalinas del Caribe.'\n   */\n  description: string;\n\n  /**\n   * Fecha y hora de inicio del viaje.\n   *\n   * Este campo es obligatorio y debe contener la fecha y hora de inicio del viaje en formato ISO 8601.\n   *\n   * @example '2025-06-01T08:00:00'\n   */\n  startdate: string;\n\n  /**\n   * Fecha y hora de finalización del viaje.\n   *\n   * Este campo es obligatorio y debe contener la fecha y hora de finalización del viaje en formato ISO 8601.\n   *\n   * @example '2025-06-01T20:00:00'\n   */\n  enddate: string;\n\n  /**\n   * Yate asociado al viaje.\n   *\n   * Este campo es obligatorio y debe contener un objeto de tipo `Yacht` que representa el yate utilizado para el viaje.\n   *\n   * @example\n   * {\n   *   name: 'Ocean Breeze',\n   *   model: 'Luxury 3500',\n   *   image: 'url-to-image',\n   *   description: 'Un yate de lujo con todas las comodidades.',\n   *   capacity: 30\n   * }\n   */\n  yacht: Yacht;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TripService.html":{"url":"injectables/TripService.html","title":"injectable - TripService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TripService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/trip.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las operaciones relacionadas con los viajes.\nEste servicio proporciona métodos para crear, obtener, actualizar y eliminar viajes\nutilizando la API en el backend. Además, permite obtener todos los viajes disponibles.\nExample :this.tripService.createTrip(newTrip).subscribe(response => { ... });\nthis.tripService.getTripById(1).subscribe(response => { ... });\nthis.tripService.deleteTrip(1).subscribe(response => { ... });\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allTrips\n                            \n                            \n                                createTrip\n                            \n                            \n                                deleteTrip\n                            \n                            \n                                getTripById\n                            \n                            \n                                updateTrip\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        allTrips\n                        \n                    \n                \n            \n            \n                \nallTrips()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trip.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Método para obtener todos los viajes disponibles.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable con un array de objetos Trip que representan todos los viajes.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTrip\n                        \n                    \n                \n            \n            \n                \ncreateTrip(trip: Trip)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trip.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Método para crear un nuevo viaje.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                trip\n                                            \n                                                            Trip\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto Trip con la información del viaje a crear.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable con la respuesta de la creación del viaje.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTrip\n                        \n                    \n                \n            \n            \n                \ndeleteTrip(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trip.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Método para eliminar un viaje por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del viaje a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable con la respuesta de la eliminación del viaje.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTripById\n                        \n                    \n                \n            \n            \n                \ngetTripById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trip.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Método para obtener un viaje por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del viaje a obtener.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable con el objeto Trip correspondiente al ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTrip\n                        \n                    \n                \n            \n            \n                \nupdateTrip(id: number, trip: Trip)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trip.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Método para actualizar un viaje existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del viaje a actualizar.\n\n                                            \n                                        \n                                        \n                                                trip\n                                            \n                                                            Trip\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto Trip con los nuevos datos del viaje.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable con el viaje actualizado.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api/trip'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/trip.service.ts:24\n                        \n                    \n\n            \n                \n                    URL base de la API para las operaciones relacionadas con los viajes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/trip.service.ts:29\n                        \n                    \n\n            \n                \n                    Inyección del servicio HttpClient para realizar las peticiones HTTP.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Trip } from '../model/trip';\n\n/**\n * Servicio encargado de gestionar las operaciones relacionadas con los viajes.\n *\n * Este servicio proporciona métodos para crear, obtener, actualizar y eliminar viajes\n * utilizando la API en el backend. Además, permite obtener todos los viajes disponibles.\n *\n * @example\n * this.tripService.createTrip(newTrip).subscribe(response => { ... });\n * this.tripService.getTripById(1).subscribe(response => { ... });\n * this.tripService.deleteTrip(1).subscribe(response => { ... });\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TripService {\n  /**\n   * URL base de la API para las operaciones relacionadas con los viajes.\n   */\n  private apiUrl = 'http://localhost:8000/api/trip';\n\n  /**\n   * Inyección del servicio `HttpClient` para realizar las peticiones HTTP.\n   */\n  private http = inject(HttpClient);\n\n  /**\n   * Método para crear un nuevo viaje.\n   *\n   * @param trip Objeto `Trip` con la información del viaje a crear.\n   * @returns Un observable con la respuesta de la creación del viaje.\n   */\n  createTrip(trip: Trip): Observable {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post(`${this.apiUrl}/create`, trip, { headers });\n  }\n\n  /**\n   * Método para obtener un viaje por su ID.\n   *\n   * @param id El ID del viaje a obtener.\n   * @returns Un observable con el objeto `Trip` correspondiente al ID.\n   */\n  getTripById(id: number): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n\n  /**\n   * Método para obtener todos los viajes disponibles.\n   *\n   * @returns Un observable con un array de objetos `Trip` que representan todos los viajes.\n   */\n  allTrips(): Observable {\n    return this.http.get(`${this.apiUrl}/list`);\n  }\n\n  /**\n   * Método para eliminar un viaje por su ID.\n   *\n   * @param id El ID del viaje a eliminar.\n   * @returns Un observable con la respuesta de la eliminación del viaje.\n   */\n  deleteTrip(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n  /**\n   * Método para actualizar un viaje existente.\n   *\n   * @param id El ID del viaje a actualizar.\n   * @param trip Objeto `Trip` con los nuevos datos del viaje.\n   * @returns Un observable con el viaje actualizado.\n   */\n  updateTrip(id: number, trip: Trip): Observable {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.put(`${this.apiUrl}/${id}`, trip, { headers });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/User.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa a un usuario en el sistema.\nEsta interfaz define la estructura básica de un usuario, incluyendo su\nnombre de usuario y contraseña. El campo id es opcional y se utiliza\ncuando el usuario ya está registrado en el sistema.\nExample :const user: User = {\n  username: 'john_doe',\n  password: 'securePassword123'\n};\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Identificador único del usuario.\nEste campo es opcional y se asigna cuando el usuario ya está registrado en el sistema.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contraseña del usuario.\nEste campo es obligatorio y debe contener una cadena de caracteres segura para autenticar al usuario.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de usuario del usuario.\nEste campo es obligatorio y debe contener un nombre único para identificar al usuario.\nExample :\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  /**\n   * Identificador único del usuario.\n   *\n   * Este campo es opcional y se asigna cuando el usuario ya está registrado en el sistema.\n   *\n   * @example 1\n   */\n  id?: number;\n\n  /**\n   * Nombre de usuario del usuario.\n   *\n   * Este campo es obligatorio y debe contener un nombre único para identificar al usuario.\n   *\n   * @example 'john_doe'\n   */\n  username: string;\n\n  /**\n   * Contraseña del usuario.\n   *\n   * Este campo es obligatorio y debe contener una cadena de caracteres segura para autenticar al usuario.\n   *\n   * @example 'securePassword123'\n   */\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerificationComponent.html":{"url":"components/VerificationComponent.html","title":"component - VerificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/component/verification/verification.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de verificación de cuenta.\nMuestra una animación en caso de éxito o un mensaje de error en caso de fallo.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verification\n            \n\n\n            \n                imports\n                \n                                HeaderComponent\n                            RouterLink\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./verification.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backendUrl\n                            \n                            \n                                showAnimation\n                            \n                            \n                                    \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                verifyAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/component/verification/verification.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor del componente de verificación.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Permite el acceso a los parámetros de la URL.\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cliente HTTP para realizar peticiones al servidor.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Permite la navegación programática entre rutas.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/verification/verification.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente.\nSuscribe a los parámetros de la URL y ejecuta la verificación si hay un token.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyAccount\n                        \n                    \n                \n            \n            \n                \nverifyAccount(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/verification/verification.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Verifica la cuenta utilizando el token recibido como parámetro.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El token de verificación recibido a través de la URL.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backendUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api/user/verify'\n                    \n                \n                    \n                        \n                                Defined in src/component/verification/verification.component.ts:36\n                        \n                    \n\n            \n                \n                    URL del backend para la verificación de la cuenta.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/component/verification/verification.component.ts:31\n                        \n                    \n\n            \n                \n                    Controla la visualización de la animación de éxito.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ToastComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/component/verification/verification.component.ts:26\n                        \n                    \n\n            \n                \n                    Referencia al componente Toast para mostrar notificaciones.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router, RouterLink} from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport {HeaderComponent} from '../header/header.component';\nimport {ToastComponent} from '../toast/toast.component';\nimport {NgIf} from '@angular/common';\n\n/**\n * Componente de verificación de cuenta.\n * Muestra una animación en caso de éxito o un mensaje de error en caso de fallo.\n */\n@Component({\n  selector: 'app-verification',\n  templateUrl: './verification.component.html',\n  imports: [\n    HeaderComponent,\n    RouterLink,\n    NgIf\n  ]\n})\nexport class VerificationComponent implements OnInit {\n\n  /**\n   * Referencia al componente Toast para mostrar notificaciones.\n   */\n  @ViewChild(ToastComponent) toast!: ToastComponent;\n\n  /**\n   * Controla la visualización de la animación de éxito.\n   */\n  showAnimation = false;\n\n  /**\n   * URL del backend para la verificación de la cuenta.\n   */\n  backendUrl = 'http://localhost:8000/api/user/verify';\n\n  /**\n   * Constructor del componente de verificación.\n   * @param route Permite el acceso a los parámetros de la URL.\n   * @param http Cliente HTTP para realizar peticiones al servidor.\n   * @param router Permite la navegación programática entre rutas.\n   */\n  constructor(private route: ActivatedRoute, private http: HttpClient, private router: Router) {}\n\n  /**\n   * Método de inicialización del componente.\n   * Suscribe a los parámetros de la URL y ejecuta la verificación si hay un token.\n   */\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      const token = params['token'];\n      if (token) {\n        this.verifyAccount(token);\n      }\n    });\n  }\n\n  /**\n   * Verifica la cuenta utilizando el token recibido como parámetro.\n   * @param token El token de verificación recibido a través de la URL.\n   */\n  verifyAccount(token: string) {\n    this.http.get(`${this.backendUrl}?token=${token}`).subscribe({\n      next: () => {\n        this.showAnimation = true;\n      },\n      error: () => {\n        this.toast.addMessage('info', 'Rejected', 'You have rejected');\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      ✅\n    \n    \n    \n  \n\n  \n    ¡Su cuenta ha sido verificada con éxito!\n  \n\n  \n    Ahora puede disfrutar de todas las funciones de la plataforma.\n  \n\n  \n    Ir a Iniciar Sesión\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ✅                    ¡Su cuenta ha sido verificada con éxito!        Ahora puede disfrutar de todas las funciones de la plataforma.        Ir a Iniciar Sesión  '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerificationService.html":{"url":"injectables/VerificationService.html","title":"injectable - VerificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/verification.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de la verificación de correos electrónicos de usuarios.\nEste servicio permite verificar el correo electrónico de un usuario mediante un token.\nEl token se pasa como parámetro en la solicitud HTTP al backend para validar el correo electrónico.\nExample :this.verificationService.verifyEmail(token).subscribe(response => { ... });\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/verification.service.ts:21\n                            \n                        \n\n                \n                    \n                            Inyección del servicio HttpClient para realizar las peticiones HTTP.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \nverifyEmail(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/verification.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Método para verificar el correo electrónico de un usuario utilizando un token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El token de verificación enviado al correo del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable con la respuesta de la verificación.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api/user/verify'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/verification.service.ts:21\n                        \n                    \n\n            \n                \n                    URL base de la API para la verificación de correo electrónico de un usuario.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Servicio encargado de la verificación de correos electrónicos de usuarios.\n *\n * Este servicio permite verificar el correo electrónico de un usuario mediante un token.\n * El token se pasa como parámetro en la solicitud HTTP al backend para validar el correo electrónico.\n *\n * @example\n * this.verificationService.verifyEmail(token).subscribe(response => { ... });\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerificationService {\n  /**\n   * URL base de la API para la verificación de correo electrónico de un usuario.\n   */\n  private apiUrl = 'http://localhost:8000/api/user/verify';\n\n  /**\n   * Inyección del servicio `HttpClient` para realizar las peticiones HTTP.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Método para verificar el correo electrónico de un usuario utilizando un token.\n   *\n   * @param token El token de verificación enviado al correo del usuario.\n   * @returns Un observable con la respuesta de la verificación.\n   */\n  verifyEmail(token: string): Observable {\n    return this.http.get(`${this.apiUrl}?token=${token}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewLoginRegisterComponent.html":{"url":"components/ViewLoginRegisterComponent.html","title":"component - ViewLoginRegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewLoginRegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/view-login-register/view-login-register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de la vista de inicio de sesión y registro. Permite a los usuarios iniciar sesión o registrarse proporcionando información como nombre, correo electrónico, contraseña, etc.\n\nViewLoginRegisterComponent: Componente que gestiona el inicio de sesión y el registro de usuarios.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-view-login-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                SidebarComponent\n                            FormsModule\n                            SelectButtonModule\n                            NgIf\n                            Password\n                            Button\n                            InputText\n                            HttpClientModule\n                            NgClass\n                            Toast\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./view-login-register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeForm\n                            \n                            \n                                birthdateValid\n                            \n                            \n                                dniValid\n                            \n                            \n                                emailValid\n                            \n                            \n                                errorMessage\n                            \n                            \n                                phoneValid\n                            \n                            \n                                stateOptions\n                            \n                            \n                                user\n                            \n                            \n                                userData\n                            \n                            \n                                verificationMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                            \n                                resetForm\n                            \n                            \n                                sendVerificationEmail\n                            \n                            \n                                updatePassword\n                            \n                            \n                                validateBirthdate\n                            \n                            \n                                validateDNI\n                            \n                            \n                                validateEmail\n                            \n                            \n                                validatePhoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, messageService: MessageService, emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:106\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta los servicios necesarios, como AuthService, Router, MessageService y EmailService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que gestiona la autenticación de usuarios.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEl router de Angular que permite redirigir al usuario después del inicio de sesión.\n\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que muestra mensajes emergentes de éxito o error.\n\n\n                                                        \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que gestiona el envío de correos electrónicos, como el correo de verificación.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:271\n                        \n                    \n\n\n            \n                \n                        Inicia sesión con el usuario proporcionado. Si el inicio de sesión falla, muestra un mensaje de error.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente. No realiza ninguna acción adicional en este caso.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:204\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario en la plataforma. Si la información está incompleta, muestra un mensaje de error.\nLuego, envía un correo de verificación al usuario si el registro es exitoso.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:251\n                        \n                    \n\n\n            \n                \n                        Restablece el formulario de registro a su estado inicial.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendVerificationEmail\n                        \n                    \n                \n            \n            \n                \nsendVerificationEmail(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:240\n                        \n                    \n\n\n            \n                \n                        Envía un correo electrónico de verificación al usuario después de un registro exitoso.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl ID del usuario para enviar el correo de verificación.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:195\n                        \n                    \n\n\n            \n                \n                        Actualiza la contraseña del usuario cuando cambia en el formulario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nEl evento que contiene el nuevo valor de la contraseña.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateBirthdate\n                        \n                    \n                \n            \n            \n                \nvalidateBirthdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Valida la fecha de nacimiento del usuario. Asegura que la edad sea mayor o igual a 18 años.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateDNI\n                        \n                    \n                \n            \n            \n                \nvalidateDNI()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Valida el DNI utilizando una expresión regular.\nEl DNI debe tener 8 dígitos seguidos de una letra.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateEmail\n                        \n                    \n                \n            \n            \n                \nvalidateEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Valida el correo electrónico utilizando una expresión regular.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePhoneNumber\n                        \n                    \n                \n            \n            \n                \nvalidatePhoneNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-login-register/view-login-register.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Valida el número de teléfono utilizando una expresión regular. El número debe ser entre 9 y 15 dígitos.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'login'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:88\n                        \n                    \n\n            \n                \n                    Forma activa, ya sea 'login' (inicio de sesión) o 'register' (registro).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        birthdateValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dniValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:79\n                        \n                    \n\n            \n                \n                    Validaciones de los campos de correo electrónico, DNI, fecha de nacimiento y número de teléfono.\nLos valores pueden ser true, false, o null si no hay un valor para validar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:100\n                        \n                    \n\n            \n                \n                    Mensaje de error cuando el inicio de sesión falla.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stateOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Iniciar sesión', value: 'login' },\n    { label: 'Registrarse', value: 'register' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:51\n                        \n                    \n\n            \n                \n                    Opciones para el selector de estado que permite al usuario elegir entre 'Iniciar sesión' y 'Registrarse'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : { username: '', password: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:94\n                        \n                    \n\n            \n                \n                    Datos del usuario para el inicio de sesión.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    username: '',\n    password: '',\n    email: '',\n    client: {\n      name: '',\n      surname: '',\n      birthdate: '',\n      dni: '',\n      address: '',\n      phone_number: null\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:60\n                        \n                    \n\n            \n                \n                    Datos del usuario para el registro o inicio de sesión. Contiene el nombre de usuario, la contraseña, el correo electrónico y la información adicional del cliente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verificationMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-login-register/view-login-register.component.ts:106\n                        \n                    \n\n            \n                \n                    Mensaje de verificación cuando el registro es exitoso.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { SidebarComponent } from '../../../component/sidebar/sidebar.component';\nimport { FormsModule } from '@angular/forms';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { NgClass, NgIf } from '@angular/common';\nimport { Password } from 'primeng/password';\nimport { Button } from 'primeng/button';\nimport { InputNumber } from 'primeng/inputnumber';\nimport { AuthService } from '../../services/auth.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { User } from '../../model/User';\nimport { MessageService } from 'primeng/api';\nimport { Toast, ToastModule } from 'primeng/toast';\nimport { EmailService } from '../../services/email.service';\nimport { InputText } from 'primeng/inputtext';\n\n/**\n * @description\n * Componente de la vista de inicio de sesión y registro. Permite a los usuarios iniciar sesión o registrarse proporcionando información como nombre, correo electrónico, contraseña, etc.\n *\n * @exports\n * - `ViewLoginRegisterComponent`: Componente que gestiona el inicio de sesión y el registro de usuarios.\n */\n@Component({\n  selector: 'app-view-login-register',\n  standalone: true,\n  imports: [\n    RouterModule,\n    SidebarComponent,\n    FormsModule,\n    SelectButtonModule,\n    NgIf,\n    Password,\n    Button,\n    InputText,\n    HttpClientModule,\n    NgClass,\n    Toast,\n    ToastModule\n  ],\n  providers: [MessageService],\n  templateUrl: './view-login-register.component.html',\n})\nexport class ViewLoginRegisterComponent implements OnInit {\n\n  /**\n   * @description\n   * Opciones para el selector de estado que permite al usuario elegir entre 'Iniciar sesión' y 'Registrarse'.\n   */\n  stateOptions: any[] = [\n    { label: 'Iniciar sesión', value: 'login' },\n    { label: 'Registrarse', value: 'register' },\n  ];\n\n  /**\n   * @description\n   * Datos del usuario para el registro o inicio de sesión. Contiene el nombre de usuario, la contraseña, el correo electrónico y la información adicional del cliente.\n   */\n  userData = {\n    username: '',\n    password: '',\n    email: '',\n    client: {\n      name: '',\n      surname: '',\n      birthdate: '',\n      dni: '',\n      address: '',\n      phone_number: null\n    }\n  };\n\n  /**\n   * @description\n   * Validaciones de los campos de correo electrónico, DNI, fecha de nacimiento y número de teléfono.\n   * Los valores pueden ser `true`, `false`, o `null` si no hay un valor para validar.\n   */\n  emailValid: boolean | null = null;\n  dniValid: boolean | null = null;\n  birthdateValid: boolean | null = null;\n  phoneValid: boolean | null = null;\n\n  /**\n   * @description\n   * Forma activa, ya sea 'login' (inicio de sesión) o 'register' (registro).\n   */\n  activeForm: string = 'login';\n\n  /**\n   * @description\n   * Datos del usuario para el inicio de sesión.\n   */\n  user: User = { username: '', password: '' };\n\n  /**\n   * @description\n   * Mensaje de error cuando el inicio de sesión falla.\n   */\n  errorMessage: string = '';\n\n  /**\n   * @description\n   * Mensaje de verificación cuando el registro es exitoso.\n   */\n  verificationMessage: string = '';\n\n  /**\n   * @description\n   * Constructor que inyecta los servicios necesarios, como `AuthService`, `Router`, `MessageService` y `EmailService`.\n   *\n   * @param authService - Servicio que gestiona la autenticación de usuarios.\n   * @param router - El router de Angular que permite redirigir al usuario después del inicio de sesión.\n   * @param messageService - Servicio que muestra mensajes emergentes de éxito o error.\n   * @param emailService - Servicio que gestiona el envío de correos electrónicos, como el correo de verificación.\n   */\n  constructor(private authService: AuthService, private router: Router, private messageService: MessageService, private emailService: EmailService) {}\n\n  /**\n   * @description\n   * Método de inicialización del componente. No realiza ninguna acción adicional en este caso.\n   */\n  ngOnInit() {}\n\n  /**\n   * @description\n   * Valida el número de teléfono utilizando una expresión regular. El número debe ser entre 9 y 15 dígitos.\n   */\n  validatePhoneNumber() {\n    const phoneRegex = /^[0-9]{9,15}$/;\n\n    if (!this.userData.client.phone_number) {\n      this.phoneValid = null;\n      return;\n    }\n\n    this.phoneValid = phoneRegex.test(this.userData.client.phone_number);\n  }\n\n  /**\n   * @description\n   * Valida el correo electrónico utilizando una expresión regular.\n   *\n   * @returns {void}\n   */\n  validateEmail() {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    this.emailValid = emailPattern.test(this.userData.email);\n  }\n\n  /**\n   * @description\n   * Valida el DNI utilizando una expresión regular.\n   * El DNI debe tener 8 dígitos seguidos de una letra.\n   *\n   * @returns {void}\n   */\n  validateDNI() {\n    const dniPattern = /^[0-9]{8}[A-Za-z]$/;\n    this.dniValid = dniPattern.test(this.userData.client.dni);\n  }\n\n  /**\n   * @description\n   * Valida la fecha de nacimiento del usuario. Asegura que la edad sea mayor o igual a 18 años.\n   *\n   * @returns {void}\n   */\n  validateBirthdate() {\n    if (!this.userData.client.birthdate) {\n      this.birthdateValid = null;\n      return;\n    }\n\n    const birthdate = new Date(this.userData.client.birthdate);\n    const today = new Date();\n\n    const age = today.getFullYear() - birthdate.getFullYear();\n    const monthDiff = today.getMonth() - birthdate.getMonth();\n    const dayDiff = today.getDate() - birthdate.getDate();\n\n    if (monthDiff = 18;\n    } else {\n      this.birthdateValid = age >= 18;\n    }\n  }\n\n  /**\n   * @description\n   * Actualiza la contraseña del usuario cuando cambia en el formulario.\n   *\n   * @param event - El evento que contiene el nuevo valor de la contraseña.\n   */\n  updatePassword(event: any) {\n    this.userData.password = event.target.value;\n  }\n\n  /**\n   * @description\n   * Registra un nuevo usuario en la plataforma. Si la información está incompleta, muestra un mensaje de error.\n   * Luego, envía un correo de verificación al usuario si el registro es exitoso.\n   */\n  register() {\n    if (!this.userData.username || !this.userData.password || !this.userData.email ||\n      !this.userData.client.name || !this.userData.client.surname ||\n      !this.userData.client.birthdate || !this.userData.client.dni ||\n      !this.userData.client.address || !this.userData.client.phone_number) {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Completa todos los campos' });\n      return;\n    }\n\n    this.authService.register(this.userData).subscribe({\n      next: (response: any) => {\n        this.messageService.add({ severity: 'success', summary: 'Éxito', detail: 'Registro exitoso' });\n\n        if (response.id) { // 🔹 Usamos 'id' en vez de 'user_id'\n          this.sendVerificationEmail(response.id);\n        } else {\n          console.error(\"❌ No se recibió un ID en la respuesta del backend.\");\n        }\n\n        this.resetForm();\n        this.activeForm = 'login';\n      },\n      error: (error) => {\n        console.error('❌ Error en el registro:', error);\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Error en el registro' });\n        this.userData.password = '';\n      }\n    });\n  }\n\n  /**\n   * @description\n   * Envía un correo electrónico de verificación al usuario después de un registro exitoso.\n   *\n   * @param userId - El ID del usuario para enviar el correo de verificación.\n   */\n  sendVerificationEmail(userId: number): void {\n    this.emailService.sendVerificationEmail(userId).subscribe({\n      next: response => console.log('✅ Verification email sent:', response),\n      error: error => console.error('❌ Error sending verification email:', error)\n    });\n  }\n\n  /**\n   * @description\n   * Restablece el formulario de registro a su estado inicial.\n   */\n  resetForm() {\n    this.userData = {\n      username: '',\n      password: '',\n      email: '',\n      client: {\n        name: '',\n        surname: '',\n        birthdate: '',\n        dni: '',\n        address: '',\n        phone_number: null\n      }\n    };\n  }\n\n  /**\n   * @description\n   * Inicia sesión con el usuario proporcionado. Si el inicio de sesión falla, muestra un mensaje de error.\n   */\n  login() {\n    if (!this.user.username || !this.user.password) {\n      this.errorMessage = 'Por favor, completa todos los campos.';\n      return;\n    }\n\n    this.authService.login(this.user).subscribe({\n      next: () => {\n        this.router.navigate(['/']); // Redirigir a la página de inicio\n      },\n      error: (error) => {\n        console.error('Error en login:', error);\n        this.errorMessage = 'Usuario o contraseña incorrectos.';\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n\n  \n    \n      \n        Inicio de Sesión\n        ¡Bienvenido de vuelta!\n\n        \n          \n            Nombre de Usuario\n            \n          \n\n          \n            Contraseña\n            \n          \n\n          {{ errorMessage }}\n\n          \n            \n          \n        \n      \n\n      \n        Registro\n        Experiencias únicas te esperan\n\n        \n          \n            Nombre de Usuario\n            \n          \n\n          \n            Contraseña\n            \n\n          \n\n          \n            DNI\n\n            \n\n            \n            \n              Introduce un DNI válido (8 números seguidos de una letra).\n            \n          \n\n\n          \n            Dirección\n            \n          \n\n          \n            Número de Teléfono\n\n            \n            \n              Introduce un número de teléfono válido (9-15 dígitos).\n            \n          \n\n\n          \n            \n              Nombre\n              \n            \n\n            \n              Apellidos\n              \n            \n          \n\n          \n            \n              \n                Email\n\n                \n                \n                  Introduce un correo válido.\n                \n              \n            \n\n            \n              Fecha de nacimiento\n\n              \n              \n                Debes tener al menos 18 años para registrarte.\n              \n            \n\n          \n        \n\n        \n        \n        {{ errorMessage }}\n      \n\n    \n  \n  \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Inicio de Sesión        ¡Bienvenido de vuelta!                              Nombre de Usuario                                            Contraseña                                {{ errorMessage }}                                                            Registro        Experiencias únicas te esperan                              Nombre de Usuario                                            Contraseña                                            DNI                                                  Introduce un DNI válido (8 números seguidos de una letra).                                            Dirección                                            Número de Teléfono                                      Introduce un número de teléfono válido (9-15 dígitos).                                                          Nombre                                                    Apellidos                                                                                        Email                                                  Introduce un correo válido.                                                                    Fecha de nacimiento                                            Debes tener al menos 18 años para registrarte.                                                                    {{ errorMessage }}                '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewLoginRegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewTripComponent.html":{"url":"components/ViewTripComponent.html","title":"component - ViewTripComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewTripComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/view-trip/view-trip.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que gestiona la vista de un viaje individual, mostrando detalles del viaje y permitiendo a los usuarios realizar reservas.\n\nViewTripComponent: Componente que maneja la visualización y reserva de un viaje.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-view-trip\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                HeaderComponent\n                            Checkbox\n                            FormsModule\n                            InputNumber\n                            ButtonModule\n                                LoadingComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./view-trip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                basePrice\n                            \n                            \n                                extra\n                            \n                            \n                                extrasPrices\n                            \n                            \n                                isBooking\n                            \n                            \n                                maxTickets\n                            \n                            \n                                totalPrice\n                            \n                            \n                                trip\n                            \n                            \n                                tripId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bookTrip\n                            \n                            \n                                calculateTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setMaxTickets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tripService: TripService, route: ActivatedRoute, loadingService: LoadingService, bookingService: BookingService, messageService: MessageService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/view-trip/view-trip.component.ts:96\n                            \n                        \n\n                \n                    \n                            Constructor que inyecta los servicios necesarios: TripService, ActivatedRoute, LoadingService, BookingService, MessageService, y AuthService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tripService\n                                                  \n                                                        \n                                                                        TripService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que gestiona los viajes.\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProporciona acceso a los parámetros de la ruta activa.\n\n\n                                                        \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para mostrar y ocultar la pantalla de carga.\n\n\n                                                        \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que gestiona las reservas de los viajes.\n\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio para mostrar mensajes emergentes.\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nServicio que gestiona la autenticación del usuario.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bookTrip\n                        \n                    \n                \n            \n            \n                \nbookTrip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-trip/view-trip.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Método que maneja la reserva del viaje. Verifica si el número de tickets no excede el máximo permitido y luego realiza la reserva llamando al servicio BookingService.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotal\n                        \n                    \n                \n            \n            \n                \ncalculateTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-trip/view-trip.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Calcula el precio total del viaje, teniendo en cuenta el número de tickets seleccionados y los extras.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-trip/view-trip.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente que obtiene los datos del viaje desde el servicio TripService basado en el ID extraído de los parámetros de la ruta.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMaxTickets\n                        \n                    \n                \n            \n            \n                \nsetMaxTickets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/view-trip/view-trip.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Establece el número máximo de tickets disponibles en base a la capacidad del yate. Si la capacidad es mayor a 25, se limita al 25% de la capacidad total.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        basePrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:68\n                        \n                    \n\n            \n                \n                    Precio base del viaje, que puede ser modificado según el viaje.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:56\n                        \n                    \n\n            \n                \n                    Lista de extras seleccionados por el usuario para el viaje.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extrasPrices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    'Guia': 60,\n    'Catering': 120,\n    'Pepper': 150\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:80\n                        \n                    \n\n            \n                \n                    Precios de los extras disponibles para el viaje.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBooking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:96\n                        \n                    \n\n            \n                \n                    Estado que indica si la reserva está en proceso o no.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxTickets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:74\n                        \n                    \n\n            \n                \n                    Número máximo de tickets disponibles para la reserva en base a la capacidad del yate.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.basePrice\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:90\n                        \n                    \n\n            \n                \n                    Precio total del viaje, calculado según el número de tickets y los extras seleccionados.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trip\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:44\n                        \n                    \n\n            \n                \n                    Viaje actual que se muestra en la vista. Se obtiene a través de una solicitud al servicio TripService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tripId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:50\n                        \n                    \n\n            \n                \n                    ID del viaje actual extraído de los parámetros de la URL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/features/view-trip/view-trip.component.ts:62\n                        \n                    \n\n            \n                \n                    Número de tickets seleccionados por el usuario para la reserva.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HeaderComponent } from '../../../component/header/header.component';\nimport { Checkbox } from 'primeng/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { InputNumber } from 'primeng/inputnumber';\nimport { ButtonModule } from 'primeng/button';\nimport { Trip } from '../../model/trip';\nimport { TripService } from '../../services/trip.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs';\nimport { LoadingService } from '../../services/loading.service';\nimport { LoadingComponent } from '../../../component/loading/loading.component';\nimport { MessageService } from 'primeng/api';\nimport { BookingService } from '../../services/booking.service';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente que gestiona la vista de un viaje individual, mostrando detalles del viaje y permitiendo a los usuarios realizar reservas.\n *\n * @exports\n * - `ViewTripComponent`: Componente que maneja la visualización y reserva de un viaje.\n */\n@Component({\n  selector: 'app-view-trip',\n  standalone: true,\n  imports: [\n    HeaderComponent,\n    Checkbox,\n    FormsModule,\n    InputNumber,\n    ButtonModule,\n    LoadingComponent\n  ],\n  templateUrl: './view-trip.component.html',\n  providers: [MessageService]\n})\nexport class ViewTripComponent implements OnInit {\n\n  /**\n   * @description\n   * Viaje actual que se muestra en la vista. Se obtiene a través de una solicitud al servicio `TripService`.\n   */\n  trip!: Trip;\n\n  /**\n   * @description\n   * ID del viaje actual extraído de los parámetros de la URL.\n   */\n  tripId!: number;\n\n  /**\n   * @description\n   * Lista de extras seleccionados por el usuario para el viaje.\n   */\n  extra: string[] = [];\n\n  /**\n   * @description\n   * Número de tickets seleccionados por el usuario para la reserva.\n   */\n  value: number = 1;\n\n  /**\n   * @description\n   * Precio base del viaje, que puede ser modificado según el viaje.\n   */\n  basePrice: number = 1000;\n\n  /**\n   * @description\n   * Número máximo de tickets disponibles para la reserva en base a la capacidad del yate.\n   */\n  maxTickets: number = 1;\n\n  /**\n   * @description\n   * Precios de los extras disponibles para el viaje.\n   */\n  extrasPrices: { [key: string]: number } = {\n    'Guia': 60,\n    'Catering': 120,\n    'Pepper': 150\n  };\n\n  /**\n   * @description\n   * Precio total del viaje, calculado según el número de tickets y los extras seleccionados.\n   */\n  totalPrice: number = this.basePrice;\n\n  /**\n   * @description\n   * Estado que indica si la reserva está en proceso o no.\n   */\n  isBooking: boolean = false;\n\n  /**\n   * @description\n   * Constructor que inyecta los servicios necesarios: `TripService`, `ActivatedRoute`, `LoadingService`, `BookingService`, `MessageService`, y `AuthService`.\n   *\n   * @param tripService - Servicio que gestiona los viajes.\n   * @param route - Proporciona acceso a los parámetros de la ruta activa.\n   * @param loadingService - Servicio para mostrar y ocultar la pantalla de carga.\n   * @param bookingService - Servicio que gestiona las reservas de los viajes.\n   * @param messageService - Servicio para mostrar mensajes emergentes.\n   * @param authService - Servicio que gestiona la autenticación del usuario.\n   */\n  constructor(\n    private tripService: TripService,\n    private route: ActivatedRoute,\n    private loadingService: LoadingService,\n    private bookingService: BookingService,\n    private messageService: MessageService,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * @description\n   * Método de inicialización del componente que obtiene los datos del viaje desde el servicio `TripService` basado en el ID extraído de los parámetros de la ruta.\n   */\n  ngOnInit() {\n    this.loadingService.loadingOn();\n\n    this.route.paramMap.pipe(\n      switchMap(params => {\n        const id = Number(params.get('id'));\n        if (isNaN(id) || id  {\n        this.trip = data;\n        this.basePrice = data.price || 1000;\n        this.setMaxTickets();\n        this.calculateTotal();\n        this.loadingService.loadingOff();\n      },\n      error: () => {\n        this.loadingService.loadingOff();\n      }\n    });\n  }\n\n  /**\n   * @description\n   * Establece el número máximo de tickets disponibles en base a la capacidad del yate. Si la capacidad es mayor a 25, se limita al 25% de la capacidad total.\n   */\n  setMaxTickets() {\n    if (this.trip?.yacht?.capacity) {\n      this.maxTickets = this.trip.yacht.capacity > 25 ? Math.floor(this.trip.yacht.capacity * 0.25) : this.trip.yacht.capacity;\n    }\n  }\n\n  /**\n   * @description\n   * Calcula el precio total del viaje, teniendo en cuenta el número de tickets seleccionados y los extras.\n   */\n  calculateTotal() {\n    let extrasCost = this.extra.reduce((acc, curr) => acc + (this.extrasPrices[curr] || 0), 0);\n    this.totalPrice = this.basePrice * this.value + extrasCost;\n  }\n\n  /**\n   * @description\n   * Método que maneja la reserva del viaje. Verifica si el número de tickets no excede el máximo permitido y luego realiza la reserva llamando al servicio `BookingService`.\n   *\n   * @returns {void}\n   */\n  bookTrip() {\n    if (this.value > this.maxTickets) {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Número de tickets excede el máximo permitido' });\n      return;\n    }\n\n    this.isBooking = true;\n\n    // Obtén el user_id del AuthService\n    this.authService.getUserId().subscribe({\n      next: (userId) => {\n        if (userId === null) {\n          this.messageService.add({ severity: 'error', summary: 'Error', detail: 'No se pudo obtener el ID del usuario' });\n          this.isBooking = false;\n          return;\n        }\n\n        const reservation = {\n          trip_id: this.tripId,\n          number_of_guest: this.value,\n          total_price: this.totalPrice,\n          user_id: userId,\n          booking_date: new Date().toISOString().split('T')[0]\n        };\n\n        // Llamamos al servicio para crear la reserva\n        this.bookingService.createReservation(reservation).subscribe({\n          next: () => {\n            this.messageService.add({ severity: 'success', summary: 'Añadido al carrito', detail: 'Tu viaje se ha añadido al carrito' });\n            this.isBooking = false;\n          },\n          error: () => {\n            this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Ha ocurrido un error' });\n            this.isBooking = false;\n          }\n        });\n      },\n      error: () => {\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'No se pudo obtener el ID del usuario' });\n        this.isBooking = false;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n\n    \n    \n\n      \n      \n        {{ trip.name }}\n\n        \n          Descripción\n          {{ trip.description }}\n        \n\n        \n        \n          Información del viaje\n\n          \n            \n              \n                \n              \n              Modelo del barco:\n              {{ trip.yacht.model }}\n            \n            \n              \n              Duración:\n              {{ trip.duration_hours }} horas\n            \n            \n              \n              Embarque:\n              {{ trip.departure }}\n            \n            \n              \n              Pasajeros:\n              {{ trip.yacht.capacity }}\n            \n          \n        \n      \n\n      \n      \n        \n          Adicionales\n\n          \n            \n              \n              Guía 60 €\n            \n            \n              \n              Catering 120 €\n            \n            \n              \n              +1 Hora 80 €\n            \n          \n        \n\n        \n        \n          Tickets\n          \n            \n              \n            \n            \n              \n            \n          \n        \n\n        \n        \n          \n          \n          Total {{ totalPrice }} €\n        \n      \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ trip.name }}                  Descripción          {{ trip.description }}                                  Información del viaje                                                                                Modelo del barco:              {{ trip.yacht.model }}                                                    Duración:              {{ trip.duration_hours }} horas                                                    Embarque:              {{ trip.departure }}                                                    Pasajeros:              {{ trip.yacht.capacity }}                                                                  Adicionales                                                  Guía 60 €                                                    Catering 120 €                                                    +1 Hora 80 €                                                        Tickets                                                                                                                                                      Total {{ totalPrice }} €                    '\n    var COMPONENTS = [{'name': 'AdminHomepageComponent', 'selector': 'app-admin-homepage'},{'name': 'AdminTripsComponent', 'selector': 'app-admin-trips'},{'name': 'AdminYachtsComponent', 'selector': 'app-admin-yachts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingCardComponent', 'selector': 'app-booking-card'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CardDetailsComponent', 'selector': 'app-card-details'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CheckTicketsComponent', 'selector': 'app-check-tickets'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'ModalFilterComponent', 'selector': 'app-modal-filter'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'VerificationComponent', 'selector': 'app-verification'},{'name': 'ViewLoginRegisterComponent', 'selector': 'app-view-login-register'},{'name': 'ViewTripComponent', 'selector': 'app-view-trip'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewTripComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Yacht.html":{"url":"interfaces/Yacht.html","title":"interface - Yacht","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Yacht\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/yacht.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un yate en el sistema.\nEsta interfaz define la estructura de un yate, incluyendo su nombre, modelo,\nimagen, descripción y capacidad. El campo id es opcional y es utilizado\ncuando el yate ya está registrado en el sistema.\nExample :const yacht: Yacht = {\n  name: 'Super Yacht',\n  model: '2023',\n  image: 'image_url',\n  description: 'Un yate de lujo con todas las comodidades.',\n  capacity: 50\n};\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            capacity\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        capacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capacity:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Capacidad máxima de personas que puede transportar el yate.\nEste campo es opcional y puede ser nulo si no se conoce la capacidad.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción del yate.\nEste campo es obligatorio y proporciona información adicional sobre el yate.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Identificador único del yate.\nEste campo es opcional y se asigna cuando el yate ya está registrado en el sistema.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL de la imagen del yate.\nEste campo es obligatorio y debe contener la dirección de la imagen del yate.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Modelo del yate.\nEste campo es obligatorio.\nExample :\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del yate.\nEste campo es obligatorio.\nExample :\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Yacht {\n  /**\n   * Identificador único del yate.\n   *\n   * Este campo es opcional y se asigna cuando el yate ya está registrado en el sistema.\n   *\n   * @example 1\n   */\n  id?: number;\n\n  /**\n   * Nombre del yate.\n   *\n   * Este campo es obligatorio.\n   *\n   * @example 'Super Yacht'\n   */\n  name: string;\n\n  /**\n   * Modelo del yate.\n   *\n   * Este campo es obligatorio.\n   *\n   * @example '2023'\n   */\n  model: string;\n\n  /**\n   * URL de la imagen del yate.\n   *\n   * Este campo es obligatorio y debe contener la dirección de la imagen del yate.\n   *\n   * @example 'image_url'\n   */\n  image: string;\n\n  /**\n   * Descripción del yate.\n   *\n   * Este campo es obligatorio y proporciona información adicional sobre el yate.\n   *\n   * @example 'Un yate de lujo con todas las comodidades.'\n   */\n  description: string;\n\n  /**\n   * Capacidad máxima de personas que puede transportar el yate.\n   *\n   * Este campo es opcional y puede ser nulo si no se conoce la capacidad.\n   *\n   * @example 50\n   */\n  capacity: number | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/YachtService.html":{"url":"injectables/YachtService.html","title":"injectable - YachtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  YachtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/yacht.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio encargado de gestionar las operaciones relacionadas con los yates.\nEste servicio proporciona métodos para crear, obtener, actualizar y eliminar yates\na través de la API. Las operaciones se realizan mediante peticiones HTTP.\nExample :this.yachtService.createYacht(newYacht).subscribe(response => { ... });\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createYacht\n                            \n                            \n                                deleteYacht\n                            \n                            \n                                getYachts\n                            \n                            \n                                updateYacht\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/yacht.service.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor del servicio que inyecta el servicio HttpClient para realizar\nlas peticiones HTTP a la API.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio HttpClient para realizar peticiones HTTP.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createYacht\n                        \n                    \n                \n            \n            \n                \ncreateYacht(yacht: Yacht)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/yacht.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Método para crear un nuevo yate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                yacht\n                                            \n                                                            Yacht\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto que representa el yate a crear.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable que emite el yate creado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteYacht\n                        \n                    \n                \n            \n            \n                \ndeleteYacht(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/yacht.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Método para eliminar un yate por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del yate a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable que emite el yate eliminado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getYachts\n                        \n                    \n                \n            \n            \n                \ngetYachts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/yacht.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Método para obtener la lista de todos los yates.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable que emite un array de yates.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateYacht\n                        \n                    \n                \n            \n            \n                \nupdateYacht(id: number, yacht: Yacht)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/yacht.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Método para actualizar un yate.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del yate a actualizar.\n\n                                            \n                                        \n                                        \n                                                yacht\n                                            \n                                                            Yacht\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto con los nuevos datos del yate.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable que emite el yate actualizado.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api/yacht'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/yacht.service.ts:23\n                        \n                    \n\n            \n                \n                    URL base de la API para las operaciones relacionadas con los yates.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Yacht } from '../model/yacht';\n\n/**\n * Servicio encargado de gestionar las operaciones relacionadas con los yates.\n *\n * Este servicio proporciona métodos para crear, obtener, actualizar y eliminar yates\n * a través de la API. Las operaciones se realizan mediante peticiones HTTP.\n *\n * @example\n * this.yachtService.createYacht(newYacht).subscribe(response => { ... });\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class YachtService {\n\n  /**\n   * URL base de la API para las operaciones relacionadas con los yates.\n   */\n  private apiUrl = 'http://localhost:8000/api/yacht';\n\n  /**\n   * Constructor del servicio que inyecta el servicio `HttpClient` para realizar\n   * las peticiones HTTP a la API.\n   *\n   * @param http Servicio `HttpClient` para realizar peticiones HTTP.\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Método para crear un nuevo yate.\n   *\n   * @param yacht Objeto que representa el yate a crear.\n   * @returns Un observable que emite el yate creado.\n   */\n  createYacht(yacht: Yacht): Observable {\n    const headers = { 'Content-Type': 'application/json' };\n    return this.http.post(`${this.apiUrl}/create`, yacht, { headers });\n  }\n\n  /**\n   * Método para obtener la lista de todos los yates.\n   *\n   * @returns Un observable que emite un array de yates.\n   */\n  getYachts(): Observable {\n    return this.http.get(`${this.apiUrl}/all`);\n  }\n\n  /**\n   * Método para eliminar un yate por su ID.\n   *\n   * @param id ID del yate a eliminar.\n   * @returns Un observable que emite el yate eliminado.\n   */\n  deleteYacht(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/delete/${id}`);\n  }\n\n  /**\n   * Método para actualizar un yate.\n   *\n   * @param id ID del yate a actualizar.\n   * @param yacht Objeto con los nuevos datos del yate.\n   * @returns Un observable que emite el yate actualizado.\n   */\n  updateYacht(id: number, yacht: Yacht): Observable {\n    const headers = { 'Content-Type': 'application/json' };\n    return this.http.put(`${this.apiUrl}/update/${id}`, yacht, { headers });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/Interceptors/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/Interceptors/auth.interceptor.ts\n            \n            variable\n            SkipAuth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/Interceptors/loading.interceptor.ts\n            \n            variable\n            loadingInterceptor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/Interceptors/loading.interceptor.ts\n            \n            variable\n            SkipLoading\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/features/admin-homepage/admin-homepage.component.ts\n            \n            component\n            AdminHomepageComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/features/admin-trips/admin-trips.component.ts\n            \n            component\n            AdminTripsComponent\n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                src/app/features/admin-yachts/admin-yachts.component.ts\n            \n            component\n            AdminYachtsComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/features/checkout/checkout.component.ts\n            \n            component\n            CheckoutComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/features/main-page/main-page.component.ts\n            \n            component\n            MainPageComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                89 %\n                (25/28)\n            \n        \n        \n            \n                \n                src/app/features/search-page/search-page.component.ts\n            \n            component\n            SearchPageComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/features/view-login-register/view-login-register.component.ts\n            \n            component\n            ViewLoginRegisterComponent\n            \n                86 %\n                (19/22)\n            \n        \n        \n            \n                \n                src/app/features/view-trip/view-trip.component.ts\n            \n            component\n            ViewTripComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/guards/admin-role.guard.ts\n            \n            guard\n            AdminRoleGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/model/User.ts\n            \n            interface\n            User\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/model/trip.ts\n            \n            interface\n            Trip\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/model/yacht.ts\n            \n            interface\n            Yacht\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/app/mytheme.ts\n            \n            variable\n            customtheme\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api-service.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/services/booking.service.ts\n            \n            injectable\n            BookingService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/email.service.ts\n            \n            injectable\n            EmailService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/trip.service.ts\n            \n            injectable\n            TripService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/verification.service.ts\n            \n            injectable\n            VerificationService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/yacht.service.ts\n            \n            injectable\n            YachtService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/component/booking-card/booking-card.component.ts\n            \n            component\n            BookingCardComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/component/card-details/card-details.component.ts\n            \n            component\n            CardDetailsComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/component/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/component/check-tickets/check-tickets.component.ts\n            \n            component\n            CheckTicketsComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/component/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/component/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/component/modal-filter/modal-filter.component.ts\n            \n            component\n            ModalFilterComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/component/searchbar/searchbar.component.ts\n            \n            component\n            SearchbarComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/component/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/component/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/component/verification/verification.component.ts\n            \n            component\n            VerificationComponent\n            \n                100 %\n                (7/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @primeng/themes : ^19.0.5\n        \n            @tailwindcss/postcss : ^4.0.0\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^19.0.6\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nOceanLux - Frontend\nOceanLux es una aplicación web que permite a los usuarios explorar y comprar tickets para viajes o paseos en barco. Los datos de los viajes se obtienen de una base de datos en PostgreSQL alojada localmente y gestionada por un backend desarrollado en PHP con Symfony.\n📌 Tecnologías utilizadas\n\n🖥️ Framework:*Angular\n📦 Administrador de paquetes:*npm\n🎨 Framework de estilos:*Tailwind\n⚙️ Backend: PHP con Symfony\n🗄️ Base de datos:*PostgreSQL\n\n🔧 Requisitos previos\nAntes de ejecutar el proyecto, asegúrate de tener instalado:\n\nNode.js y npm\nAngular CLI\nUn servidor corriendo el backend de OceanLux con Symfony y PostgreSQL\n\n🚀 Instalación y ejecución\n1️⃣ Clona este repositorio:\nExample :git clone https://github.com/tu-usuario/oceanlux-frontend.git\ncd oceanlux-frontend2️⃣ Instala las dependencias:\nExample :npm install3️⃣ Configura el proxy para conectar con el backend local:\nAsegúrate de que el archivo proxy.conf.json contiene la siguiente configuración:\nExample :{\n  \"/api\": {\n    \"target\": \"http://localhost:8000\",\n    \"secure\": false,\n    \"changeOrigin\": true\n  }\n}El backend debe estar corriendo en http://localhost:8000.\n4️⃣ Ejecuta la aplicación en modo desarrollo:\nExample :ng serve --proxy-config proxy.conf.json5️⃣ Abre en tu navegador: http://localhost:4200\n📂 Estructura del proyecto\nExample :/oceanlux-frontend\n│── src\n│   ├── app\n│   │   ├── features       # Funcionalidades principales\n│   │   ├── Interceptors   # Interceptores HTTP\n│   │   ├── model          # Modelos de datos\n│   │   ├── services       # Servicios para comunicación con la API\n│   │   ├── app.component.html  # Plantilla principal\n│   │   ├── app.component.ts    # Componente principal\n│   │   ├── app.config.ts       # Configuración de la aplicación\n│   │   ├── app.routes.ts       # Configuración de rutas\n│   │   ├── mytheme.ts          # Configuración de temas\n│   ├── component       # Componentes reutilizables\n│   ├── index.html      # Archivo principal HTML\n│   ├── main.ts         # Punto de entrada de la aplicación\n│   ├── styles.css      # Estilos globales\n│── angular.json       # Configuración de Angular\n│── package.json       # Dependencias y scripts\n│── proxy.conf.json    # Configuración del proxy para la API👨‍💻 Autores\n\nmricofer\njorgeariasmartin\nraulcruzadodelgado1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            customtheme   (src/.../mytheme.ts)\n                        \n                        \n                            loadingInterceptor   (src/.../loading.interceptor.ts)\n                        \n                        \n                            SkipAuth   (src/.../auth.interceptor.ts)\n                        \n                        \n                            SkipLoading   (src/.../loading.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Configuración de la detección de cambios de zona.\n     * Permite la coalescencia de eventos para mejorar el rendimiento.\n     *\n     * @default true\n     */\n    provideZoneChangeDetection({ eventCoalescing: true }),\n\n    /**\n     * Configuración de las rutas de la aplicación.\n     * Define las rutas que serán gestionadas por el router.\n     *\n     * @example\n     * provideRouter(routes)\n     */\n    provideRouter(routes),\n\n    /**\n     * Proveedor de animaciones asíncronas.\n     * Permite la carga de animaciones de manera asíncrona.\n     */\n    provideAnimationsAsync(),\n\n    /**\n     * Configuración de PrimeNG.\n     * Se aplica un tema personalizado definido por `customtheme` y se ajusta la configuración de modo oscuro.\n     */\n    providePrimeNG({\n      theme: {\n        preset: customtheme,\n        options: {\n          darkModeSelector: false || 'none' // Configura el selector de modo oscuro\n        }\n      }\n    }),\n\n    /**\n     * Proveedor de cliente HTTP con interceptores.\n     * Se aplican los interceptores de autenticación (`authInterceptor`) y de carga (`loadingInterceptor`).\n     */\n    provideHttpClient(\n      withInterceptors([authInterceptor, loadingInterceptor]) // Se mantienen los interceptores configurados\n    ),\n\n    /**\n     * Importación del módulo de Toast de PrimeNG.\n     * Este módulo es necesario para mostrar notificaciones de toast en la aplicación.\n     */\n    importProvidersFrom(ToastModule),\n\n    /**\n     * Proveedor del servicio `MessageService` de PrimeNG.\n     * Permite mostrar mensajes y notificaciones en la aplicación.\n     */\n    MessageService\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración de la aplicación Angular.\nEste objeto appConfig define los proveedores y configuraciones necesarios para que la aplicación funcione correctamente.\nSe configura la detección de cambios de zona, las rutas de la aplicación, animaciones, interceptores de HTTP, el tema de PrimeNG y otros servicios como el de mensajes.\n\n                \n            \n\n        \n    \n\n    src/app/Interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req: HttpRequest, next: HttpHandlerFn) => {\n  // Inyección de dependencias\n  const authService = inject(AuthService); // Servicio de autenticación\n  const router = inject(Router); // Servicio de navegación\n  const toastService = inject(ToastService); // Servicio de notificaciones\n  const token = authService.getToken(); // Obtención del token de autenticación\n\n  console.log('Interceptando:', req.url);\n\n  // Verificar si la ruta actual debe omitir la autenticación\n  if (req.url.endsWith('/logaccount') || req.url.endsWith('/send-verification-email') || req.url.includes('/verify') || req.context.get(SkipAuth)) {\n    console.log('⏩ Saltando autenticación:', req.url);\n    return next(req); // Continuar sin modificar la solicitud\n  }\n\n  // Si no hay token, redirigir al login\n  if (!token) {\n    console.warn('🔴 No hay token, redirigiendo a login...');\n    toastService.showMessage('error', 'Sesión Expirada', 'Tu sesión ha caducado. Inicia sesión nuevamente.');\n\n    // Cerrar sesión y redirigir\n    authService.logout();\n    router.navigate(['/logaccount']).then(() => {});\n\n    return next(req); // Continuar sin modificar la solicitud\n  }\n\n  // Clonar la solicitud e incluir el token en los encabezados\n  const authReq = req.clone({ setHeaders: { Authorization: `Bearer ${token}` } });\n\n  return next(authReq).pipe(\n    catchError((error: HttpErrorResponse) => {\n      // Manejo de errores relacionados con la autenticación\n      if (error.status === 401 || error.status === 403) {\n        console.error('🚨 Token inválido o expirado, cerrando sesión...');\n        toastService.showMessage('error', 'Acceso Denegado', 'Tu sesión ha expirado o no tienes permisos.');\n\n        // Cerrar sesión y redirigir\n        authService.logout();\n        router.navigate(['/logaccount']);\n      }\n      return throwError(() => error); // Propagar el error\n    })\n  );\n}\n                    \n                \n\n            \n                \n                    Interceptor que maneja la autenticación para las solicitudes HTTP en la aplicación.\nEste interceptor revisa si existe un token de autenticación antes de cada solicitud. Si la solicitud requiere autenticación y no tiene un token válido,\nel interceptor redirige al usuario al login. Además, permite omitir la autenticación en ciertas rutas especificadas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    Token que permite especificar si una solicitud debe omitir la autenticación.\n\n                \n            \n\n        \n    \n\n    src/app/mytheme.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        customtheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : definePreset(Aura, {\n    primitive: {\n        borderRadius: {\n            none: \"0\",\n            xs: \"2px\",\n            sm: \"4px\",\n            md: \"6px\",\n            lg: \"8px\",\n            xl: \"12px\"\n        },\n        emerald: {\n            50: \"#ecfdf5\",\n            100: \"#d1fae5\",\n            200: \"#a7f3d0\",\n            300: \"#6ee7b7\",\n            400: \"#34d399\",\n            500: \"#10b981\",\n            600: \"#059669\",\n            700: \"#047857\",\n            800: \"#065f46\",\n            900: \"#064e3b\",\n            950: \"#022c22\"\n        },\n        green: {\n            50: \"#f0fdf4\",\n            100: \"#dcfce7\",\n            200: \"#bbf7d0\",\n            300: \"#86efac\",\n            400: \"#4ade80\",\n            500: \"#22c55e\",\n            600: \"#16a34a\",\n            700: \"#15803d\",\n            800: \"#166534\",\n            900: \"#14532d\",\n            950: \"#052e16\"\n        },\n        lime: {\n            50: \"#f7fee7\",\n            100: \"#ecfccb\",\n            200: \"#d9f99d\",\n            300: \"#bef264\",\n            400: \"#a3e635\",\n            500: \"#84cc16\",\n            600: \"#65a30d\",\n            700: \"#4d7c0f\",\n            800: \"#3f6212\",\n            900: \"#365314\",\n            950: \"#1a2e05\"\n        },\n        red: {\n            50: \"#fef2f2\",\n            100: \"#fee2e2\",\n            200: \"#fecaca\",\n            300: \"#fca5a5\",\n            400: \"#f87171\",\n            500: \"#ef4444\",\n            600: \"#dc2626\",\n            700: \"#b91c1c\",\n            800: \"#991b1b\",\n            900: \"#7f1d1d\",\n            950: \"#450a0a\"\n        },\n        orange: {\n            50: \"#fff7ed\",\n            100: \"#ffedd5\",\n            200: \"#fed7aa\",\n            300: \"#fdba74\",\n            400: \"#fb923c\",\n            500: \"#f97316\",\n            600: \"#ea580c\",\n            700: \"#c2410c\",\n            800: \"#9a3412\",\n            900: \"#7c2d12\",\n            950: \"#431407\"\n        },\n        amber: {\n            50: \"#fffbeb\",\n            100: \"#fef3c7\",\n            200: \"#fde68a\",\n            300: \"#fcd34d\",\n            400: \"#fbbf24\",\n            500: \"#f59e0b\",\n            600: \"#d97706\",\n            700: \"#b45309\",\n            800: \"#92400e\",\n            900: \"#78350f\",\n            950: \"#451a03\"\n        },\n        yellow: {\n            50: \"#fefce8\",\n            100: \"#fef9c3\",\n            200: \"#fef08a\",\n            300: \"#fde047\",\n            400: \"#facc15\",\n            500: \"#eab308\",\n            600: \"#ca8a04\",\n            700: \"#a16207\",\n            800: \"#854d0e\",\n            900: \"#713f12\",\n            950: \"#422006\"\n        },\n        teal: {\n            50: \"#f0fdfa\",\n            100: \"#ccfbf1\",\n            200: \"#99f6e4\",\n            300: \"#5eead4\",\n            400: \"#2dd4bf\",\n            500: \"#14b8a6\",\n            600: \"#0d9488\",\n            700: \"#0f766e\",\n            800: \"#115e59\",\n            900: \"#134e4a\",\n            950: \"#042f2e\"\n        },\n        cyan: {\n            50: \"#ecfeff\",\n            100: \"#cffafe\",\n            200: \"#a5f3fc\",\n            300: \"#67e8f9\",\n            400: \"#22d3ee\",\n            500: \"#06b6d4\",\n            600: \"#0891b2\",\n            700: \"#0e7490\",\n            800: \"#155e75\",\n            900: \"#164e63\",\n            950: \"#083344\"\n        },\n        sky: {\n            50: \"#f0f9ff\",\n            100: \"#e0f2fe\",\n            200: \"#bae6fd\",\n            300: \"#7dd3fc\",\n            400: \"#38bdf8\",\n            500: \"#0ea5e9\",\n            600: \"#0284c7\",\n            700: \"#0369a1\",\n            800: \"#075985\",\n            900: \"#0c4a6e\",\n            950: \"#082f49\"\n        },\n        blue: {\n            50: \"#eff6ff\",\n            100: \"#dbeafe\",\n            200: \"#bfdbfe\",\n            300: \"#93c5fd\",\n            400: \"#60a5fa\",\n            500: \"#3b82f6\",\n            600: \"#2563eb\",\n            700: \"#1d4ed8\",\n            800: \"#1e40af\",\n            900: \"#1e3a8a\",\n            950: \"#172554\"\n        },\n        indigo: {\n            50: \"#eef2ff\",\n            100: \"#e0e7ff\",\n            200: \"#c7d2fe\",\n            300: \"#a5b4fc\",\n            400: \"#818cf8\",\n            500: \"#6366f1\",\n            600: \"#4f46e5\",\n            700: \"#4338ca\",\n            800: \"#3730a3\",\n            900: \"#312e81\",\n            950: \"#1e1b4b\"\n        },\n        violet: {\n            50: \"#f5f3ff\",\n            100: \"#ede9fe\",\n            200: \"#ddd6fe\",\n            300: \"#c4b5fd\",\n            400: \"#a78bfa\",\n            500: \"#8b5cf6\",\n            600: \"#7c3aed\",\n            700: \"#6d28d9\",\n            800: \"#5b21b6\",\n            900: \"#4c1d95\",\n            950: \"#2e1065\"\n        },\n        purple: {\n            50: \"#faf5ff\",\n            100: \"#f3e8ff\",\n            200: \"#e9d5ff\",\n            300: \"#d8b4fe\",\n            400: \"#c084fc\",\n            500: \"#a855f7\",\n            600: \"#9333ea\",\n            700: \"#7e22ce\",\n            800: \"#6b21a8\",\n            900: \"#581c87\",\n            950: \"#3b0764\"\n        },\n        fuchsia: {\n            50: \"#fdf4ff\",\n            100: \"#fae8ff\",\n            200: \"#f5d0fe\",\n            300: \"#f0abfc\",\n            400: \"#e879f9\",\n            500: \"#d946ef\",\n            600: \"#c026d3\",\n            700: \"#a21caf\",\n            800: \"#86198f\",\n            900: \"#701a75\",\n            950: \"#4a044e\"\n        },\n        pink: {\n            50: \"#fdf2f8\",\n            100: \"#fce7f3\",\n            200: \"#fbcfe8\",\n            300: \"#f9a8d4\",\n            400: \"#f472b6\",\n            500: \"#ec4899\",\n            600: \"#db2777\",\n            700: \"#be185d\",\n            800: \"#9d174d\",\n            900: \"#831843\",\n            950: \"#500724\"\n        },\n        rose: {\n            50: \"#fff1f2\",\n            100: \"#ffe4e6\",\n            200: \"#fecdd3\",\n            300: \"#fda4af\",\n            400: \"#fb7185\",\n            500: \"#f43f5e\",\n            600: \"#e11d48\",\n            700: \"#be123c\",\n            800: \"#9f1239\",\n            900: \"#881337\",\n            950: \"#4c0519\"\n        },\n        slate: {\n            50: \"#f8fafc\",\n            100: \"#f1f5f9\",\n            200: \"#e2e8f0\",\n            300: \"#cbd5e1\",\n            400: \"#94a3b8\",\n            500: \"#64748b\",\n            600: \"#475569\",\n            700: \"#334155\",\n            800: \"#1e293b\",\n            900: \"#0f172a\",\n            950: \"#020617\"\n        },\n        gray: {\n            50: \"#f9fafb\",\n            100: \"#f3f4f6\",\n            200: \"#e5e7eb\",\n            300: \"#d1d5db\",\n            400: \"#9ca3af\",\n            500: \"#6b7280\",\n            600: \"#4b5563\",\n            700: \"#374151\",\n            800: \"#1f2937\",\n            900: \"#111827\",\n            950: \"#030712\"\n        },\n        zinc: {\n            50: \"#fafafa\",\n            100: \"#f4f4f5\",\n            200: \"#e4e4e7\",\n            300: \"#d4d4d8\",\n            400: \"#a1a1aa\",\n            500: \"#71717a\",\n            600: \"#52525b\",\n            700: \"#3f3f46\",\n            800: \"#27272a\",\n            900: \"#18181b\",\n            950: \"#09090b\"\n        },\n        neutral: {\n            50: \"#fafafa\",\n            100: \"#f5f5f5\",\n            200: \"#e5e5e5\",\n            300: \"#d4d4d4\",\n            400: \"#a3a3a3\",\n            500: \"#737373\",\n            600: \"#525252\",\n            700: \"#404040\",\n            800: \"#262626\",\n            900: \"#171717\",\n            950: \"#0a0a0a\"\n        },\n        stone: {\n            50: \"#fafaf9\",\n            100: \"#f5f5f4\",\n            200: \"#e7e5e4\",\n            300: \"#d6d3d1\",\n            400: \"#a8a29e\",\n            500: \"#78716c\",\n            600: \"#57534e\",\n            700: \"#44403c\",\n            800: \"#292524\",\n            900: \"#1c1917\",\n            950: \"#0c0a09\"\n        }\n    },\n    semantic: {\n        transitionDuration: \"0.2s\",\n        focusRing: {\n            width: \"1px\",\n            style: \"solid\",\n            color: \"{primary.color}\",\n            offset: \"2px\",\n            shadow: \"none\"\n        },\n        disabledOpacity: \"0.6\",\n        iconSize: \"1rem\",\n        anchorGutter: \"2px\",\n        primary: {\n            50: \"#f4f9fb\",\n            100: \"#c9e2ed\",\n            200: \"#9dcbdf\",\n            300: \"#72b5d1\",\n            400: \"#479ec3\",\n            500: \"#1c87b5\",\n            600: \"#18739a\",\n            700: \"#145f7f\",\n            800: \"#0f4a64\",\n            900: \"#0b3648\",\n            950: \"#07222d\"\n        },\n        formField: {\n            paddingX: \"0.75rem\",\n            paddingY: \"0.5rem\",\n            sm: {\n                fontSize: \"0.875rem\",\n                paddingX: \"0.625rem\",\n                paddingY: \"0.375rem\"\n            },\n            lg: {\n                fontSize: \"1.125rem\",\n                paddingX: \"0.875rem\",\n                paddingY: \"0.625rem\"\n            },\n            borderRadius: \"{border.radius.md}\",\n            focusRing: {\n                width: \"0\",\n                style: \"none\",\n                color: \"transparent\",\n                offset: \"0\",\n                shadow: \"none\"\n            },\n            transitionDuration: \"{transition.duration}\"\n        },\n        list: {\n            padding: \"0.25rem 0.25rem\",\n            gap: \"2px\",\n            header: {\n                padding: \"0.5rem 1rem 0.25rem 1rem\"\n            },\n            option: {\n                padding: \"0.5rem 0.75rem\",\n                borderRadius: \"{border.radius.sm}\"\n            },\n            optionGroup: {\n                padding: \"0.5rem 0.75rem\",\n                fontWeight: \"600\"\n            }\n        },\n        content: {\n            borderRadius: \"{border.radius.md}\"\n        },\n        mask: {\n            transitionDuration: \"0.15s\"\n        },\n        navigation: {\n            list: {\n                padding: \"0.25rem 0.25rem\",\n                gap: \"2px\"\n            },\n            item: {\n                padding: \"0.5rem 0.75rem\",\n                borderRadius: \"{border.radius.sm}\",\n                gap: \"0.5rem\"\n            },\n            submenuLabel: {\n                padding: \"0.5rem 0.75rem\",\n                fontWeight: \"600\"\n            },\n            submenuIcon: {\n                size: \"0.875rem\"\n            }\n        },\n        overlay: {\n            select: {\n                borderRadius: \"{border.radius.md}\",\n                shadow: \"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)\"\n            },\n            popover: {\n                borderRadius: \"{border.radius.md}\",\n                padding: \"0.75rem\",\n                shadow: \"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)\"\n            },\n            modal: {\n                borderRadius: \"{border.radius.xl}\",\n                padding: \"1.25rem\",\n                shadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)\"\n            },\n            navigation: {\n                shadow: \"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)\"\n            }\n        },\n        colorScheme: {\n            light: {\n                surface: {\n                    0: \"#ffffff\",\n                    50: \"#f4f9fb\",\n                    100: \"#c9e2ed\",\n                    200: \"#9dcbdf\",\n                    300: \"#72b5d1\",\n                    400: \"#479ec3\",\n                    500: \"#1c87b5\",\n                    600: \"#18739a\",\n                    700: \"#145f7f\",\n                    800: \"#0f4a64\",\n                    900: \"#0b3648\",\n                    950: \"#07222d\"\n                },\n                primary: {\n                    color: \"{primary.500}\",\n                    contrastColor: \"#ffffff\",\n                    hoverColor: \"{primary.600}\",\n                    activeColor: \"{primary.700}\"\n                },\n                highlight: {\n                    background: \"{primary.50}\",\n                    focusBackground: \"{primary.100}\",\n                    color: \"{primary.700}\",\n                    focusColor: \"{primary.800}\"\n                },\n                mask: {\n                    background: \"rgba(0,0,0,0.4)\",\n                    color: \"{surface.200}\"\n                },\n                formField: {\n                    background: \"{surface.0}\",\n                    disabledBackground: \"{surface.200}\",\n                    filledBackground: \"{surface.50}\",\n                    filledHoverBackground: \"{surface.50}\",\n                    filledFocusBackground: \"{surface.50}\",\n                    borderColor: \"{surface.300}\",\n                    hoverBorderColor: \"{surface.400}\",\n                    focusBorderColor: \"{primary.color}\",\n                    invalidBorderColor: \"{red.400}\",\n                    color: \"{surface.700}\",\n                    disabledColor: \"{surface.500}\",\n                    placeholderColor: \"{surface.500}\",\n                    invalidPlaceholderColor: \"{red.600}\",\n                    floatLabelColor: \"{surface.500}\",\n                    floatLabelFocusColor: \"{primary.600}\",\n                    floatLabelActiveColor: \"{surface.500}\",\n                    floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\n                    iconColor: \"{surface.400}\",\n                    shadow: \"0 0 #0000, 0 0 #0000, 0 1px 2px 0 rgba(18, 18, 23, 0.05)\"\n                },\n                text: {\n                    color: \"{surface.700}\",\n                    hoverColor: \"{surface.800}\",\n                    mutedColor: \"{surface.500}\",\n                    hoverMutedColor: \"{surface.600}\"\n                },\n                content: {\n                    background: \"{surface.0}\",\n                    hoverBackground: \"{surface.100}\",\n                    borderColor: \"{surface.200}\",\n                    color: \"{text.color}\",\n                    hoverColor: \"{text.hover.color}\"\n                },\n                overlay: {\n                    select: {\n                        background: \"{surface.0}\",\n                        borderColor: \"{surface.200}\",\n                        color: \"{text.color}\"\n                    },\n                    popover: {\n                        background: \"{surface.0}\",\n                        borderColor: \"{surface.200}\",\n                        color: \"{text.color}\"\n                    },\n                    modal: {\n                        background: \"{surface.0}\",\n                        borderColor: \"{surface.200}\",\n                        color: \"{text.color}\"\n                    }\n                },\n                list: {\n                    option: {\n                        focusBackground: \"{surface.100}\",\n                        selectedBackground: \"{highlight.background}\",\n                        selectedFocusBackground: \"{highlight.focus.background}\",\n                        color: \"{text.color}\",\n                        focusColor: \"{text.hover.color}\",\n                        selectedColor: \"{highlight.color}\",\n                        selectedFocusColor: \"{highlight.focus.color}\",\n                        icon: {\n                            color: \"{surface.400}\",\n                            focusColor: \"{surface.500}\"\n                        }\n                    },\n                    optionGroup: {\n                        background: \"transparent\",\n                        color: \"{text.muted.color}\"\n                    }\n                },\n                navigation: {\n                    item: {\n                        focusBackground: \"{surface.200}\",\n                        activeBackground: \"{surface.100}\",\n                        color: \"{text.color}\",\n                        focusColor: \"{text.hover.color}\",\n                        activeColor: \"{text.hover.color}\",\n                        icon: {\n                            color: \"{surface.400}\",\n                            focusColor: \"{surface.500}\",\n                            activeColor: \"{surface.500}\"\n                        }\n                    },\n                    submenuLabel: {\n                        background: \"transparent\",\n                        color: \"{text.muted.color}\"\n                    },\n                    submenuIcon: {\n                        color: \"{surface.400}\",\n                        focusColor: \"{surface.500}\",\n                        activeColor: \"{surface.500}\"\n                    }\n                }\n            },\n            dark: {\n                surface: {\n                    0: \"#ffffff\",\n                    50: \"#fafafa\",\n                    100: \"#f4f4f5\",\n                    200: \"#e4e4e7\",\n                    300: \"#d4d4d8\",\n                    400: \"#a1a1aa\",\n                    500: \"#71717a\",\n                    600: \"#52525b\",\n                    700: \"#3f3f46\",\n                    800: \"#27272a\",\n                    900: \"#18181b\",\n                    950: \"#09090b\"\n                },\n                primary: {\n                    color: \"{primary.400}\",\n                    contrastColor: \"{surface.900}\",\n                    hoverColor: \"{primary.300}\",\n                    activeColor: \"{primary.200}\"\n                },\n                highlight: {\n                    background: \"color-mix(in srgb, {primary.400}, transparent 84%)\",\n                    focusBackground: \"color-mix(in srgb, {primary.400}, transparent 76%)\",\n                    color: \"rgba(255,255,255,.87)\",\n                    focusColor: \"rgba(255,255,255,.87)\"\n                },\n                mask: {\n                    background: \"rgba(0,0,0,0.6)\",\n                    color: \"{surface.200}\"\n                },\n                formField: {\n                    background: \"{surface.950}\",\n                    disabledBackground: \"{surface.700}\",\n                    filledBackground: \"{surface.800}\",\n                    filledHoverBackground: \"{surface.800}\",\n                    filledFocusBackground: \"{surface.800}\",\n                    borderColor: \"{surface.600}\",\n                    hoverBorderColor: \"{surface.500}\",\n                    focusBorderColor: \"{primary.color}\",\n                    invalidBorderColor: \"{red.300}\",\n                    color: \"{surface.0}\",\n                    disabledColor: \"{surface.400}\",\n                    placeholderColor: \"{surface.400}\",\n                    invalidPlaceholderColor: \"{red.400}\",\n                    floatLabelColor: \"{surface.400}\",\n                    floatLabelFocusColor: \"{primary.color}\",\n                    floatLabelActiveColor: \"{surface.400}\",\n                    floatLabelInvalidColor: \"{form.field.invalid.placeholder.color}\",\n                    iconColor: \"{surface.400}\",\n                    shadow: \"0 0 #0000, 0 0 #0000, 0 1px 2px 0 rgba(18, 18, 23, 0.05)\"\n                },\n                text: {\n                    color: \"{surface.0}\",\n                    hoverColor: \"{surface.0}\",\n                    mutedColor: \"{surface.400}\",\n                    hoverMutedColor: \"{surface.300}\"\n                },\n                content: {\n                    background: \"{surface.900}\",\n                    hoverBackground: \"{surface.800}\",\n                    borderColor: \"{surface.700}\",\n                    color: \"{text.color}\",\n                    hoverColor: \"{text.hover.color}\"\n                },\n                overlay: {\n                    select: {\n                        background: \"{surface.900}\",\n                        borderColor: \"{surface.700}\",\n                        color: \"{text.color}\"\n                    },\n                    popover: {\n                        background: \"{surface.900}\",\n                        borderColor: \"{surface.700}\",\n                        color: \"{text.color}\"\n                    },\n                    modal: {\n                        background: \"{surface.900}\",\n                        borderColor: \"{surface.700}\",\n                        color: \"{text.color}\"\n                    }\n                },\n                list: {\n                    option: {\n                        focusBackground: \"{surface.800}\",\n                        selectedBackground: \"{highlight.background}\",\n                        selectedFocusBackground: \"{highlight.focus.background}\",\n                        color: \"{text.color}\",\n                        focusColor: \"{text.hover.color}\",\n                        selectedColor: \"{highlight.color}\",\n                        selectedFocusColor: \"{highlight.focus.color}\",\n                        icon: {\n                            color: \"{surface.500}\",\n                            focusColor: \"{surface.400}\"\n                        }\n                    },\n                    optionGroup: {\n                        background: \"transparent\",\n                        color: \"{text.muted.color}\"\n                    }\n                },\n                navigation: {\n                    item: {\n                        focusBackground: \"{surface.800}\",\n                        activeBackground: \"{surface.800}\",\n                        color: \"{text.color}\",\n                        focusColor: \"{text.hover.color}\",\n                        activeColor: \"{text.hover.color}\",\n                        icon: {\n                            color: \"{surface.500}\",\n                            focusColor: \"{surface.400}\",\n                            activeColor: \"{surface.400}\"\n                        }\n                    },\n                    submenuLabel: {\n                        background: \"transparent\",\n                        color: \"{text.muted.color}\"\n                    },\n                    submenuIcon: {\n                        color: \"{surface.500}\",\n                        focusColor: \"{surface.400}\",\n                        activeColor: \"{surface.400}\"\n                    }\n                }\n            }\n        }\n    }\n})\n                    \n                \n\n\n        \n    \n\n    src/app/Interceptors/loading.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadingInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  // Inyección de dependencias\n  const loadingService = inject(LoadingService); // Servicio de carga\n\n  // Verificar si la solicitud debe omitir el indicador de carga\n  if (req.context.get(SkipLoading)) {\n    return next(req); // Continuar sin mostrar el indicador de carga\n  }\n\n  // Activar el indicador de carga\n  loadingService.loadingOn();\n\n  return next(req).pipe(\n    finalize(() => setTimeout(() => loadingService.loadingOff(), 250)) // Desactivar el indicador después de la solicitud\n  );\n}\n                    \n                \n\n            \n                \n                    Interceptor que maneja la visualización de un indicador de carga durante las solicitudes HTTP.\nEste interceptor activa el servicio de carga antes de hacer la solicitud y desactiva el indicador de carga cuando la solicitud se completa.\nSi una solicitud especifica la opción SkipLoading en su contexto, el interceptor omite el manejo del indicador de carga.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n            \n                \n                    Token que permite especificar si una solicitud debe omitir la visualización del indicador de carga.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
